import * as msRest from "@azure/ms-rest-js";
import * as Models from "../models";
import { AzureBotServiceContext } from "../azureBotServiceContext";
/** Class representing a DirectLine. */
export declare class DirectLine {
    private readonly client;
    /**
     * Create a DirectLine.
     * @param {AzureBotServiceContext} client Reference to the service client.
     */
    constructor(client: AzureBotServiceContext);
    /**
     * Regenerates secret keys and returns them for the DirectLine Channel of a particular BotService
     * resource
     * @param resourceGroupName The name of the Bot resource group in the user subscription.
     * @param resourceName The name of the Bot resource.
     * @param channelName The name of the Channel resource for which keys are to be regenerated.
     * Possible values include: 'WebChatChannel', 'DirectLineChannel'
     * @param parameters The parameters to provide for the created bot.
     * @param [options] The optional parameters
     * @returns Promise<Models.DirectLineRegenerateKeysResponse>
     */
    regenerateKeys(resourceGroupName: string, resourceName: string, channelName: Models.RegenerateKeysChannelName, parameters: Models.SiteInfo, options?: msRest.RequestOptionsBase): Promise<Models.DirectLineRegenerateKeysResponse>;
    /**
     * @param resourceGroupName The name of the Bot resource group in the user subscription.
     * @param resourceName The name of the Bot resource.
     * @param channelName The name of the Channel resource for which keys are to be regenerated.
     * Possible values include: 'WebChatChannel', 'DirectLineChannel'
     * @param parameters The parameters to provide for the created bot.
     * @param callback The callback
     */
    regenerateKeys(resourceGroupName: string, resourceName: string, channelName: Models.RegenerateKeysChannelName, parameters: Models.SiteInfo, callback: msRest.ServiceCallback<Models.BotChannel>): void;
    /**
     * @param resourceGroupName The name of the Bot resource group in the user subscription.
     * @param resourceName The name of the Bot resource.
     * @param channelName The name of the Channel resource for which keys are to be regenerated.
     * Possible values include: 'WebChatChannel', 'DirectLineChannel'
     * @param parameters The parameters to provide for the created bot.
     * @param options The optional parameters
     * @param callback The callback
     */
    regenerateKeys(resourceGroupName: string, resourceName: string, channelName: Models.RegenerateKeysChannelName, parameters: Models.SiteInfo, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BotChannel>): void;
}
//# sourceMappingURL=directLine.d.ts.map