{"version":3,"file":"arm-botservice.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/botsMappers.ts","../src/models/parameters.ts","../src/operations/bots.ts","../src/models/channelsMappers.ts","../src/operations/channels.ts","../src/models/directLineMappers.ts","../src/operations/directLine.ts","../src/models/operationsMappers.ts","../src/operations/operations.ts","../src/models/botConnectionMappers.ts","../src/operations/botConnection.ts","../src/azureBotServiceContext.ts","../src/azureBotService.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { BaseResource, CloudError, AzureServiceClientOptions } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport { BaseResource, CloudError };\n\n/**\n * The SKU of the cognitive services account.\n */\nexport interface Sku {\n  /**\n   * The sku name. Possible values include: 'F0', 'S1'\n   */\n  name: SkuName;\n  /**\n   * Gets the sku tier. This is based on the SKU name. Possible values include: 'Free', 'Standard'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tier?: SkuTier;\n}\n\n/**\n * Azure resource\n */\nexport interface Resource extends BaseResource {\n  /**\n   * Specifies the resource ID.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Specifies the name of the resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Specifies the location of the resource.\n   */\n  location?: string;\n  /**\n   * Specifies the type of the resource.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Contains resource tags defined as key/value pairs.\n   */\n  tags?: { [propertyName: string]: string };\n  /**\n   * Gets or sets the SKU of the resource.\n   */\n  sku?: Sku;\n  /**\n   * Required. Gets or sets the Kind of the resource. Possible values include: 'sdk', 'designer',\n   * 'bot', 'function'\n   */\n  kind?: Kind;\n  /**\n   * Entity Tag\n   */\n  etag?: string;\n}\n\n/**\n * The parameters to provide for the Bot.\n */\nexport interface BotProperties {\n  /**\n   * The Name of the bot\n   */\n  displayName: string;\n  /**\n   * The description of the bot\n   */\n  description?: string;\n  /**\n   * The Icon Url of the bot\n   */\n  iconUrl?: string;\n  /**\n   * The bot's endpoint\n   */\n  endpoint: string;\n  /**\n   * The bot's endpoint version\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly endpointVersion?: string;\n  /**\n   * Microsoft App Id for the bot\n   */\n  msaAppId: string;\n  /**\n   * Collection of channels for which the bot is configured\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly configuredChannels?: string[];\n  /**\n   * Collection of channels for which the bot is enabled\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly enabledChannels?: string[];\n  /**\n   * The Application Insights key\n   */\n  developerAppInsightKey?: string;\n  /**\n   * The Application Insights Api Key\n   */\n  developerAppInsightsApiKey?: string;\n  /**\n   * The Application Insights App Id\n   */\n  developerAppInsightsApplicationId?: string;\n  /**\n   * Collection of LUIS App Ids\n   */\n  luisAppIds?: string[];\n  /**\n   * The LUIS Key\n   */\n  luisKey?: string;\n}\n\n/**\n * Bot resource definition\n */\nexport interface Bot extends Resource {\n  /**\n   * The set of properties specific to bot resource\n   */\n  properties?: BotProperties;\n}\n\n/**\n * Contains the possible cases for Channel.\n */\nexport type ChannelUnion = Channel | AlexaChannel | FacebookChannel | EmailChannel | MsTeamsChannel | SkypeChannel | KikChannel | WebChatChannel | DirectLineChannel | TelegramChannel | SmsChannel | SlackChannel | LineChannel | DirectLineSpeechChannel;\n\n/**\n * Channel definition\n */\nexport interface Channel {\n  /**\n   * Polymorphic Discriminator\n   */\n  channelName: \"Channel\";\n}\n\n/**\n * Bot channel resource definition\n */\nexport interface BotChannel extends Resource {\n  /**\n   * The set of properties specific to bot channel resource\n   */\n  properties?: ChannelUnion;\n}\n\n/**\n * The parameters to provide for the Alexa channel.\n */\nexport interface AlexaChannelProperties {\n  /**\n   * The Alexa skill Id\n   */\n  alexaSkillId: string;\n  /**\n   * Url fragment used in part of the Uri configured in Alexa\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly urlFragment?: string;\n  /**\n   * Full Uri used to configured the skill in Alexa\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serviceEndpointUri?: string;\n  /**\n   * Whether this channel is enabled for the bot\n   */\n  isEnabled: boolean;\n}\n\n/**\n * Alexa channel definition\n */\nexport interface AlexaChannel {\n  /**\n   * Polymorphic Discriminator\n   */\n  channelName: \"AlexaChannel\";\n  /**\n   * The set of properties specific to Alexa channel resource\n   */\n  properties?: AlexaChannelProperties;\n}\n\n/**\n * A Facebook page for Facebook channel registration\n */\nexport interface FacebookPage {\n  /**\n   * Page id\n   */\n  id: string;\n  /**\n   * Facebook application access token. Value only returned through POST to the action Channel List\n   * API, otherwise empty.\n   */\n  accessToken: string;\n}\n\n/**\n * The parameters to provide for the Facebook channel.\n */\nexport interface FacebookChannelProperties {\n  /**\n   * Verify token. Value only returned through POST to the action Channel List API, otherwise\n   * empty.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly verifyToken?: string;\n  /**\n   * The list of Facebook pages\n   */\n  pages?: FacebookPage[];\n  /**\n   * Facebook application id\n   */\n  appId: string;\n  /**\n   * Facebook application secret. Value only returned through POST to the action Channel List API,\n   * otherwise empty.\n   */\n  appSecret: string;\n  /**\n   * Callback Url\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly callbackUrl?: string;\n  /**\n   * Whether this channel is enabled for the bot\n   */\n  isEnabled: boolean;\n}\n\n/**\n * Facebook channel definition\n */\nexport interface FacebookChannel {\n  /**\n   * Polymorphic Discriminator\n   */\n  channelName: \"FacebookChannel\";\n  /**\n   * The set of properties specific to bot facebook channel\n   */\n  properties?: FacebookChannelProperties;\n}\n\n/**\n * The parameters to provide for the Email channel.\n */\nexport interface EmailChannelProperties {\n  /**\n   * The email address\n   */\n  emailAddress: string;\n  /**\n   * The password for the email address. Value only returned through POST to the action Channel\n   * List API, otherwise empty.\n   */\n  password: string;\n  /**\n   * Whether this channel is enabled for the bot\n   */\n  isEnabled: boolean;\n}\n\n/**\n * Email channel definition\n */\nexport interface EmailChannel {\n  /**\n   * Polymorphic Discriminator\n   */\n  channelName: \"EmailChannel\";\n  /**\n   * The set of properties specific to email channel resource\n   */\n  properties?: EmailChannelProperties;\n}\n\n/**\n * The parameters to provide for the Microsoft Teams channel.\n */\nexport interface MsTeamsChannelProperties {\n  /**\n   * Enable calling for Microsoft Teams channel\n   */\n  enableCalling?: boolean;\n  /**\n   * Webhook for Microsoft Teams channel calls\n   */\n  callingWebHook?: string;\n  /**\n   * Whether this channel is enabled for the bot\n   */\n  isEnabled: boolean;\n}\n\n/**\n * Microsoft Teams channel definition\n */\nexport interface MsTeamsChannel {\n  /**\n   * Polymorphic Discriminator\n   */\n  channelName: \"MsTeamsChannel\";\n  /**\n   * The set of properties specific to Microsoft Teams channel resource\n   */\n  properties?: MsTeamsChannelProperties;\n}\n\n/**\n * The parameters to provide for the Microsoft Teams channel.\n */\nexport interface SkypeChannelProperties {\n  /**\n   * Enable messaging for Skype channel\n   */\n  enableMessaging?: boolean;\n  /**\n   * Enable media cards for Skype channel\n   */\n  enableMediaCards?: boolean;\n  /**\n   * Enable video for Skype channel\n   */\n  enableVideo?: boolean;\n  /**\n   * Enable calling for Skype channel\n   */\n  enableCalling?: boolean;\n  /**\n   * Enable screen sharing for Skype channel\n   */\n  enableScreenSharing?: boolean;\n  /**\n   * Enable groups for Skype channel\n   */\n  enableGroups?: boolean;\n  /**\n   * Group mode for Skype channel\n   */\n  groupsMode?: string;\n  /**\n   * Calling web hook for Skype channel\n   */\n  callingWebHook?: string;\n  /**\n   * Whether this channel is enabled for the bot\n   */\n  isEnabled: boolean;\n}\n\n/**\n * Skype channel definition\n */\nexport interface SkypeChannel {\n  /**\n   * Polymorphic Discriminator\n   */\n  channelName: \"SkypeChannel\";\n  /**\n   * The set of properties specific to Skype channel resource\n   */\n  properties?: SkypeChannelProperties;\n}\n\n/**\n * The parameters to provide for the Kik channel.\n */\nexport interface KikChannelProperties {\n  /**\n   * The Kik user name\n   */\n  userName: string;\n  /**\n   * Kik API key. Value only returned through POST to the action Channel List API, otherwise empty.\n   */\n  apiKey: string;\n  /**\n   * Whether this channel is validated for the bot\n   */\n  isValidated?: boolean;\n  /**\n   * Whether this channel is enabled for the bot\n   */\n  isEnabled: boolean;\n}\n\n/**\n * Kik channel definition\n */\nexport interface KikChannel {\n  /**\n   * Polymorphic Discriminator\n   */\n  channelName: \"KikChannel\";\n  /**\n   * The set of properties specific to Kik channel resource\n   */\n  properties?: KikChannelProperties;\n}\n\n/**\n * A site for the Webchat channel\n */\nexport interface WebChatSite {\n  /**\n   * Site Id\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly siteId?: string;\n  /**\n   * Site name\n   */\n  siteName: string;\n  /**\n   * Primary key. Value only returned through POST to the action Channel List API, otherwise empty.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly key?: string;\n  /**\n   * Secondary key. Value only returned through POST to the action Channel List API, otherwise\n   * empty.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly key2?: string;\n  /**\n   * Whether this site is enabled for DirectLine channel\n   */\n  isEnabled: boolean;\n  /**\n   * Whether this site is enabled for preview versions of Webchat\n   */\n  enablePreview: boolean;\n}\n\n/**\n * The parameters to provide for the Web Chat channel.\n */\nexport interface WebChatChannelProperties {\n  /**\n   * Web chat control embed code\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webChatEmbedCode?: string;\n  /**\n   * The list of Web Chat sites\n   */\n  sites?: WebChatSite[];\n}\n\n/**\n * Web Chat channel definition\n */\nexport interface WebChatChannel {\n  /**\n   * Polymorphic Discriminator\n   */\n  channelName: \"WebChatChannel\";\n  /**\n   * The set of properties specific to Web Chat channel resource\n   */\n  properties?: WebChatChannelProperties;\n}\n\n/**\n * A site for the Direct Line channel\n */\nexport interface DirectLineSite {\n  /**\n   * Site Id\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly siteId?: string;\n  /**\n   * Site name\n   */\n  siteName: string;\n  /**\n   * Primary key. Value only returned through POST to the action Channel List API, otherwise empty.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly key?: string;\n  /**\n   * Secondary key. Value only returned through POST to the action Channel List API, otherwise\n   * empty.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly key2?: string;\n  /**\n   * Whether this site is enabled for DirectLine channel.\n   */\n  isEnabled: boolean;\n  /**\n   * Whether this site is enabled for Bot Framework V1 protocol.\n   */\n  isV1Enabled: boolean;\n  /**\n   * Whether this site is enabled for Bot Framework V1 protocol.\n   */\n  isV3Enabled: boolean;\n  /**\n   * Whether this site is enabled for authentication with Bot Framework.\n   */\n  isSecureSiteEnabled?: boolean;\n  /**\n   * List of Trusted Origin URLs for this site. This field is applicable only if\n   * isSecureSiteEnabled is True.\n   */\n  trustedOrigins?: string[];\n}\n\n/**\n * The parameters to provide for the Direct Line channel.\n */\nexport interface DirectLineChannelProperties {\n  /**\n   * The list of Direct Line sites\n   */\n  sites?: DirectLineSite[];\n}\n\n/**\n * Direct Line channel definition\n */\nexport interface DirectLineChannel {\n  /**\n   * Polymorphic Discriminator\n   */\n  channelName: \"DirectLineChannel\";\n  /**\n   * The set of properties specific to Direct Line channel resource\n   */\n  properties?: DirectLineChannelProperties;\n}\n\n/**\n * The parameters to provide for the Telegram channel.\n */\nexport interface TelegramChannelProperties {\n  /**\n   * The Telegram access token. Value only returned through POST to the action Channel List API,\n   * otherwise empty.\n   */\n  accessToken: string;\n  /**\n   * Whether this channel is validated for the bot\n   */\n  isValidated?: boolean;\n  /**\n   * Whether this channel is enabled for the bot\n   */\n  isEnabled: boolean;\n}\n\n/**\n * Telegram channel definition\n */\nexport interface TelegramChannel {\n  /**\n   * Polymorphic Discriminator\n   */\n  channelName: \"TelegramChannel\";\n  /**\n   * The set of properties specific to Telegram channel resource\n   */\n  properties?: TelegramChannelProperties;\n}\n\n/**\n * The parameters to provide for the Sms channel.\n */\nexport interface SmsChannelProperties {\n  /**\n   * The Sms phone\n   */\n  phone: string;\n  /**\n   * The Sms account SID. Value only returned through POST to the action Channel List API,\n   * otherwise empty.\n   */\n  accountSID: string;\n  /**\n   * The Sms auth token. Value only returned through POST to the action Channel List API, otherwise\n   * empty.\n   */\n  authToken: string;\n  /**\n   * Whether this channel is validated for the bot\n   */\n  isValidated?: boolean;\n  /**\n   * Whether this channel is enabled for the bot\n   */\n  isEnabled: boolean;\n}\n\n/**\n * Sms channel definition\n */\nexport interface SmsChannel {\n  /**\n   * Polymorphic Discriminator\n   */\n  channelName: \"SmsChannel\";\n  /**\n   * The set of properties specific to Sms channel resource\n   */\n  properties?: SmsChannelProperties;\n}\n\n/**\n * The parameters to provide for the Slack channel.\n */\nexport interface SlackChannelProperties {\n  /**\n   * The Slack client id\n   */\n  clientId: string;\n  /**\n   * The Slack client secret. Value only returned through POST to the action Channel List API,\n   * otherwise empty.\n   */\n  clientSecret: string;\n  /**\n   * The Slack verification token. Value only returned through POST to the action Channel List API,\n   * otherwise empty.\n   */\n  verificationToken: string;\n  /**\n   * The Slack landing page Url\n   */\n  landingPageUrl?: string;\n  /**\n   * The Slack redirect action\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly redirectAction?: string;\n  /**\n   * The Sms auth token\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly lastSubmissionId?: string;\n  /**\n   * Whether to register the settings before OAuth validation is performed. Recommended to True.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly registerBeforeOAuthFlow?: boolean;\n  /**\n   * Whether this channel is validated for the bot\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isValidated?: boolean;\n  /**\n   * The Slack signing secret.\n   */\n  signingSecret?: string;\n  /**\n   * Whether this channel is enabled for the bot\n   */\n  isEnabled: boolean;\n}\n\n/**\n * Slack channel definition\n */\nexport interface SlackChannel {\n  /**\n   * Polymorphic Discriminator\n   */\n  channelName: \"SlackChannel\";\n  /**\n   * The set of properties specific to Slack channel resource\n   */\n  properties?: SlackChannelProperties;\n}\n\n/**\n * The properties corresponding to a line channel registration\n */\nexport interface LineRegistration {\n  /**\n   * Id generated for the line channel registration\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly generatedId?: string;\n  /**\n   * Secret for the line channel registration\n   */\n  channelSecret?: string;\n  /**\n   * Access token for the line channel registration\n   */\n  channelAccessToken?: string;\n}\n\n/**\n * The parameters to provide for the Line channel.\n */\nexport interface LineChannelProperties {\n  /**\n   * The list of line channel registrations\n   */\n  lineRegistrations: LineRegistration[];\n  /**\n   * Callback Url to enter in line registration.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly callbackUrl?: string;\n  /**\n   * Whether this channel is validated for the bot\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isValidated?: boolean;\n}\n\n/**\n * Line channel definition\n */\nexport interface LineChannel {\n  /**\n   * Polymorphic Discriminator\n   */\n  channelName: \"LineChannel\";\n  /**\n   * The set of properties specific to line channel resource\n   */\n  properties?: LineChannelProperties;\n}\n\n/**\n * The parameters to provide for the DirectLine Speech channel.\n */\nexport interface DirectLineSpeechChannelProperties {\n  /**\n   * The cognitive service subscription ID to use with this channel registration.\n   */\n  cognitiveServicesSubscriptionId: string;\n  /**\n   * Whether this channel is enabled or not.\n   */\n  isEnabled?: boolean;\n  /**\n   * Custom speech model id (optional).\n   */\n  customVoiceDeploymentId?: string;\n  /**\n   * Custom voice deployment id (optional).\n   */\n  customSpeechModelId?: string;\n  /**\n   * Make this a default bot for chosen cognitive service account.\n   */\n  isDefaultBotForCogSvcAccount?: boolean;\n}\n\n/**\n * DirectLine Speech channel definition\n */\nexport interface DirectLineSpeechChannel {\n  /**\n   * Polymorphic Discriminator\n   */\n  channelName: \"DirectLineSpeechChannel\";\n  /**\n   * The set of properties specific to DirectLine Speech channel resource\n   */\n  properties?: DirectLineSpeechChannelProperties;\n}\n\n/**\n * Site information for WebChat or DirectLine Channels to identify which site to regenerate keys\n * for.\n */\nexport interface SiteInfo {\n  /**\n   * The site name\n   */\n  siteName: string;\n  /**\n   * Determines which key is to be regenerated. Possible values include: 'key1', 'key2'\n   */\n  key: Key;\n}\n\n/**\n * The display name of a connection Item Setting registered with the Bot\n */\nexport interface ConnectionItemName {\n  /**\n   * Connection Item name that has been added in the API\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n}\n\n/**\n * Extra Parameter in a Connection Setting Properties to indicate service provider specific\n * properties\n */\nexport interface ConnectionSettingParameter {\n  /**\n   * Key for the Connection Setting Parameter.\n   */\n  key?: string;\n  /**\n   * Value associated with the Connection Setting Parameter.\n   */\n  value?: string;\n}\n\n/**\n * Properties for a Connection Setting Item\n */\nexport interface ConnectionSettingProperties {\n  /**\n   * Client Id associated with the Connection Setting.\n   */\n  clientId?: string;\n  /**\n   * Setting Id set by the service for the Connection Setting.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly settingId?: string;\n  /**\n   * Client Secret associated with the Connection Setting\n   */\n  clientSecret?: string;\n  /**\n   * Scopes associated with the Connection Setting\n   */\n  scopes?: string;\n  /**\n   * Service Provider Id associated with the Connection Setting\n   */\n  serviceProviderId?: string;\n  /**\n   * Service Provider Display Name associated with the Connection Setting\n   */\n  serviceProviderDisplayName?: string;\n  /**\n   * Service Provider Parameters associated with the Connection Setting\n   */\n  parameters?: ConnectionSettingParameter[];\n}\n\n/**\n * Bot channel resource definition\n */\nexport interface ConnectionSetting extends Resource {\n  /**\n   * The set of properties specific to bot channel resource\n   */\n  properties?: ConnectionSettingProperties;\n}\n\n/**\n * Extra Parameters specific to each Service Provider\n */\nexport interface ServiceProviderParameter {\n  /**\n   * Name of the Service Provider\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * Type of the Service Provider\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly type?: string;\n  /**\n   * Display Name of the Service Provider\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayName?: string;\n  /**\n   * Description of the Service Provider\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * Help Url for the  Service Provider\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly helpUrl?: string;\n  /**\n   * Default Name for the Service Provider\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly default?: string;\n}\n\n/**\n * The Object used to describe a Service Provider supported by Bot Service\n */\nexport interface ServiceProviderProperties {\n  /**\n   * Id for Service Provider\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * Display Name of the Service Provider\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayName?: string;\n  /**\n   * Display Name of the Service Provider\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serviceProviderName?: string;\n  /**\n   * Display Name of the Service Provider\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly devPortalUrl?: string;\n  /**\n   * Display Name of the Service Provider\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly iconUrl?: string;\n  /**\n   * The list of parameters for the Service Provider\n   */\n  parameters?: ServiceProviderParameter[];\n}\n\n/**\n * Service Provider Definition\n */\nexport interface ServiceProvider {\n  /**\n   * The Properties of a Service Provider Object\n   */\n  properties?: ServiceProviderProperties;\n}\n\n/**\n * The list of bot service providers response.\n */\nexport interface ServiceProviderResponseList {\n  /**\n   * The link used to get the next page of bot service providers.\n   */\n  nextLink?: string;\n  /**\n   * Gets the list of bot service providers and their properties.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: ServiceProvider[];\n}\n\n/**\n * Bot Service error body.\n */\nexport interface ErrorBody {\n  /**\n   * error code\n   */\n  code: string;\n  /**\n   * error message\n   */\n  message: string;\n}\n\n/**\n * Bot Service error object.\n */\nexport interface ErrorModel {\n  /**\n   * The error body.\n   */\n  error?: ErrorBody;\n}\n\n/**\n * The operation supported by Bot Service Management.\n */\nexport interface OperationDisplayInfo {\n  /**\n   * The description of the operation.\n   */\n  description?: string;\n  /**\n   * The action that users can perform, based on their permission level.\n   */\n  operation?: string;\n  /**\n   * Service provider: Microsoft Bot Service.\n   */\n  provider?: string;\n  /**\n   * Resource on which the operation is performed.\n   */\n  resource?: string;\n}\n\n/**\n * The operations supported by Bot Service Management.\n */\nexport interface OperationEntity {\n  /**\n   * Operation name: {provider}/{resource}/{operation}.\n   */\n  name?: string;\n  /**\n   * The operation supported by Bot Service Management.\n   */\n  display?: OperationDisplayInfo;\n  /**\n   * The origin of the operation.\n   */\n  origin?: string;\n  /**\n   * Additional properties.\n   */\n  properties?: any;\n}\n\n/**\n * The request body for a request to Bot Service Management to check availability of a bot name.\n */\nexport interface CheckNameAvailabilityRequestBody {\n  /**\n   * the name of the bot for which availability needs to be checked.\n   */\n  name?: string;\n  /**\n   * the type of the bot for which availability needs to be checked\n   */\n  type?: string;\n}\n\n/**\n * The response body returned for a request to Bot Service Management to check availability of a\n * bot name.\n */\nexport interface CheckNameAvailabilityResponseBody {\n  /**\n   * indicates if the bot name is valid.\n   */\n  valid?: boolean;\n  /**\n   * additional message from the bot management api showing why a bot name is not available\n   */\n  message?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface BotsUpdateOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Specifies the location of the resource.\n   */\n  location?: string;\n  /**\n   * Contains resource tags defined as key/value pairs.\n   */\n  tags?: { [propertyName: string]: string };\n  /**\n   * Gets or sets the SKU of the resource.\n   */\n  sku?: Sku;\n  /**\n   * Required. Gets or sets the Kind of the resource. Possible values include: 'sdk', 'designer',\n   * 'bot', 'function'\n   */\n  kind?: Kind;\n  /**\n   * Entity Tag\n   */\n  etag?: string;\n  /**\n   * The set of properties specific to bot resource\n   */\n  properties?: BotProperties;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ChannelsUpdateOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * Specifies the location of the resource.\n   */\n  location?: string;\n  /**\n   * Contains resource tags defined as key/value pairs.\n   */\n  tags?: { [propertyName: string]: string };\n  /**\n   * Gets or sets the SKU of the resource.\n   */\n  sku?: Sku;\n  /**\n   * Required. Gets or sets the Kind of the resource. Possible values include: 'sdk', 'designer',\n   * 'bot', 'function'\n   */\n  kind?: Kind;\n  /**\n   * Entity Tag\n   */\n  etag?: string;\n  /**\n   * The set of properties specific to bot channel resource\n   */\n  properties?: ChannelUnion;\n}\n\n/**\n * An interface representing AzureBotServiceOptions.\n */\nexport interface AzureBotServiceOptions extends AzureServiceClientOptions {\n  baseUri?: string;\n}\n\n/**\n * @interface\n * The list of  bot service operation response.\n * @extends Array<Bot>\n */\nexport interface BotResponseList extends Array<Bot> {\n  /**\n   * The link used to get the next page of bot service resources.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * The list of bot service channel operation response.\n * @extends Array<BotChannel>\n */\nexport interface ChannelResponseList extends Array<BotChannel> {\n  /**\n   * The link used to get the next page of bot service channel resources.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * The list of bot service operation response.\n * @extends Array<OperationEntity>\n */\nexport interface OperationEntityListResult extends Array<OperationEntity> {\n  /**\n   * The link used to get the next page of operations.\n   */\n  nextLink?: string;\n}\n\n/**\n * @interface\n * The list of bot service connection settings response.\n * @extends Array<ConnectionSetting>\n */\nexport interface ConnectionSettingResponseList extends Array<ConnectionSetting> {\n  /**\n   * The link used to get the next page of bot service connection setting resources.\n   */\n  nextLink?: string;\n}\n\n/**\n * Defines values for SkuName.\n * Possible values include: 'F0', 'S1'\n * @readonly\n * @enum {string}\n */\nexport type SkuName = 'F0' | 'S1';\n\n/**\n * Defines values for SkuTier.\n * Possible values include: 'Free', 'Standard'\n * @readonly\n * @enum {string}\n */\nexport type SkuTier = 'Free' | 'Standard';\n\n/**\n * Defines values for Kind.\n * Possible values include: 'sdk', 'designer', 'bot', 'function'\n * @readonly\n * @enum {string}\n */\nexport type Kind = 'sdk' | 'designer' | 'bot' | 'function';\n\n/**\n * Defines values for Key.\n * Possible values include: 'key1', 'key2'\n * @readonly\n * @enum {string}\n */\nexport type Key = 'key1' | 'key2';\n\n/**\n * Defines values for ChannelName.\n * Possible values include: 'AlexaChannel', 'FacebookChannel', 'EmailChannel', 'KikChannel',\n * 'TelegramChannel', 'SlackChannel', 'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel',\n * 'DirectLineChannel', 'SmsChannel', 'LineChannel', 'DirectLineSpeechChannel'\n * @readonly\n * @enum {string}\n */\nexport type ChannelName = 'AlexaChannel' | 'FacebookChannel' | 'EmailChannel' | 'KikChannel' | 'TelegramChannel' | 'SlackChannel' | 'MsTeamsChannel' | 'SkypeChannel' | 'WebChatChannel' | 'DirectLineChannel' | 'SmsChannel' | 'LineChannel' | 'DirectLineSpeechChannel';\n\n/**\n * Defines values for RegenerateKeysChannelName.\n * Possible values include: 'WebChatChannel', 'DirectLineChannel'\n * @readonly\n * @enum {string}\n */\nexport type RegenerateKeysChannelName = 'WebChatChannel' | 'DirectLineChannel';\n\n/**\n * Contains response data for the create operation.\n */\nexport type BotsCreateResponse = Bot & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Bot;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type BotsUpdateResponse = Bot & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Bot;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type BotsGetResponse = Bot & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: Bot;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroup operation.\n */\nexport type BotsListByResourceGroupResponse = BotResponseList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: BotResponseList;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type BotsListResponse = BotResponseList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: BotResponseList;\n    };\n};\n\n/**\n * Contains response data for the getCheckNameAvailability operation.\n */\nexport type BotsGetCheckNameAvailabilityResponse = CheckNameAvailabilityResponseBody & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: CheckNameAvailabilityResponseBody;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroupNext operation.\n */\nexport type BotsListByResourceGroupNextResponse = BotResponseList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: BotResponseList;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type BotsListNextResponse = BotResponseList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: BotResponseList;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type ChannelsCreateResponse = BotChannel & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: BotChannel;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type ChannelsUpdateResponse = BotChannel & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: BotChannel;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type ChannelsGetResponse = BotChannel & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: BotChannel;\n    };\n};\n\n/**\n * Contains response data for the listWithKeys operation.\n */\nexport type ChannelsListWithKeysResponse = BotChannel & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: BotChannel;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroup operation.\n */\nexport type ChannelsListByResourceGroupResponse = ChannelResponseList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ChannelResponseList;\n    };\n};\n\n/**\n * Contains response data for the listByResourceGroupNext operation.\n */\nexport type ChannelsListByResourceGroupNextResponse = ChannelResponseList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ChannelResponseList;\n    };\n};\n\n/**\n * Contains response data for the regenerateKeys operation.\n */\nexport type DirectLineRegenerateKeysResponse = BotChannel & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: BotChannel;\n    };\n};\n\n/**\n * Contains response data for the list operation.\n */\nexport type OperationsListResponse = OperationEntityListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: OperationEntityListResult;\n    };\n};\n\n/**\n * Contains response data for the listNext operation.\n */\nexport type OperationsListNextResponse = OperationEntityListResult & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: OperationEntityListResult;\n    };\n};\n\n/**\n * Contains response data for the listServiceProviders operation.\n */\nexport type BotConnectionListServiceProvidersResponse = ServiceProviderResponseList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ServiceProviderResponseList;\n    };\n};\n\n/**\n * Contains response data for the listWithSecrets operation.\n */\nexport type BotConnectionListWithSecretsResponse = ConnectionSetting & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ConnectionSetting;\n    };\n};\n\n/**\n * Contains response data for the create operation.\n */\nexport type BotConnectionCreateResponse = ConnectionSetting & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ConnectionSetting;\n    };\n};\n\n/**\n * Contains response data for the update operation.\n */\nexport type BotConnectionUpdateResponse = ConnectionSetting & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ConnectionSetting;\n    };\n};\n\n/**\n * Contains response data for the get operation.\n */\nexport type BotConnectionGetResponse = ConnectionSetting & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ConnectionSetting;\n    };\n};\n\n/**\n * Contains response data for the listByBotService operation.\n */\nexport type BotConnectionListByBotServiceResponse = ConnectionSettingResponseList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ConnectionSettingResponseList;\n    };\n};\n\n/**\n * Contains response data for the listByBotServiceNext operation.\n */\nexport type BotConnectionListByBotServiceNextResponse = ConnectionSettingResponseList & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ConnectionSettingResponseList;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { CloudErrorMapper, BaseResourceMapper } from \"@azure/ms-rest-azure-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const CloudError = CloudErrorMapper;\nexport const BaseResource = BaseResourceMapper;\n\nexport const Sku: msRest.CompositeMapper = {\n  serializedName: \"Sku\",\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        required: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        readOnly: true,\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: msRest.CompositeMapper = {\n  serializedName: \"Resource\",\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BotProperties: msRest.CompositeMapper = {\n  serializedName: \"BotProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"BotProperties\",\n    modelProperties: {\n      displayName: {\n        required: true,\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      iconUrl: {\n        serializedName: \"iconUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpoint: {\n        required: true,\n        serializedName: \"endpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endpointVersion: {\n        readOnly: true,\n        serializedName: \"endpointVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      msaAppId: {\n        required: true,\n        serializedName: \"msaAppId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      configuredChannels: {\n        readOnly: true,\n        serializedName: \"configuredChannels\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      enabledChannels: {\n        readOnly: true,\n        serializedName: \"enabledChannels\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      developerAppInsightKey: {\n        serializedName: \"developerAppInsightKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      developerAppInsightsApiKey: {\n        serializedName: \"developerAppInsightsApiKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      developerAppInsightsApplicationId: {\n        serializedName: \"developerAppInsightsApplicationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      luisAppIds: {\n        serializedName: \"luisAppIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      luisKey: {\n        serializedName: \"luisKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Bot: msRest.CompositeMapper = {\n  serializedName: \"Bot\",\n  type: {\n    name: \"Composite\",\n    className: \"Bot\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BotProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const Channel: msRest.CompositeMapper = {\n  serializedName: \"Channel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"channelName\",\n      clientName: \"channelName\"\n    },\n    uberParent: \"Channel\",\n    className: \"Channel\",\n    modelProperties: {\n      channelName: {\n        required: true,\n        serializedName: \"channelName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BotChannel: msRest.CompositeMapper = {\n  serializedName: \"BotChannel\",\n  type: {\n    name: \"Composite\",\n    className: \"BotChannel\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"Channel\"\n        }\n      }\n    }\n  }\n};\n\nexport const AlexaChannelProperties: msRest.CompositeMapper = {\n  serializedName: \"AlexaChannelProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"AlexaChannelProperties\",\n    modelProperties: {\n      alexaSkillId: {\n        required: true,\n        serializedName: \"alexaSkillId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      urlFragment: {\n        readOnly: true,\n        serializedName: \"urlFragment\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceEndpointUri: {\n        readOnly: true,\n        serializedName: \"serviceEndpointUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isEnabled: {\n        required: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const AlexaChannel: msRest.CompositeMapper = {\n  serializedName: \"AlexaChannel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: Channel.type.polymorphicDiscriminator,\n    uberParent: \"Channel\",\n    className: \"AlexaChannel\",\n    modelProperties: {\n      ...Channel.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"AlexaChannelProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const FacebookPage: msRest.CompositeMapper = {\n  serializedName: \"FacebookPage\",\n  type: {\n    name: \"Composite\",\n    className: \"FacebookPage\",\n    modelProperties: {\n      id: {\n        required: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessToken: {\n        required: true,\n        serializedName: \"accessToken\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FacebookChannelProperties: msRest.CompositeMapper = {\n  serializedName: \"FacebookChannelProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"FacebookChannelProperties\",\n    modelProperties: {\n      verifyToken: {\n        readOnly: true,\n        serializedName: \"verifyToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pages: {\n        serializedName: \"pages\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FacebookPage\"\n            }\n          }\n        }\n      },\n      appId: {\n        required: true,\n        serializedName: \"appId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appSecret: {\n        required: true,\n        serializedName: \"appSecret\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callbackUrl: {\n        readOnly: true,\n        serializedName: \"callbackUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isEnabled: {\n        required: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const FacebookChannel: msRest.CompositeMapper = {\n  serializedName: \"FacebookChannel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: Channel.type.polymorphicDiscriminator,\n    uberParent: \"Channel\",\n    className: \"FacebookChannel\",\n    modelProperties: {\n      ...Channel.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"FacebookChannelProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const EmailChannelProperties: msRest.CompositeMapper = {\n  serializedName: \"EmailChannelProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"EmailChannelProperties\",\n    modelProperties: {\n      emailAddress: {\n        required: true,\n        serializedName: \"emailAddress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        required: true,\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isEnabled: {\n        required: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const EmailChannel: msRest.CompositeMapper = {\n  serializedName: \"EmailChannel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: Channel.type.polymorphicDiscriminator,\n    uberParent: \"Channel\",\n    className: \"EmailChannel\",\n    modelProperties: {\n      ...Channel.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"EmailChannelProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const MsTeamsChannelProperties: msRest.CompositeMapper = {\n  serializedName: \"MsTeamsChannelProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"MsTeamsChannelProperties\",\n    modelProperties: {\n      enableCalling: {\n        serializedName: \"enableCalling\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      callingWebHook: {\n        serializedName: \"callingWebHook\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isEnabled: {\n        required: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const MsTeamsChannel: msRest.CompositeMapper = {\n  serializedName: \"MsTeamsChannel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: Channel.type.polymorphicDiscriminator,\n    uberParent: \"Channel\",\n    className: \"MsTeamsChannel\",\n    modelProperties: {\n      ...Channel.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"MsTeamsChannelProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SkypeChannelProperties: msRest.CompositeMapper = {\n  serializedName: \"SkypeChannelProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"SkypeChannelProperties\",\n    modelProperties: {\n      enableMessaging: {\n        serializedName: \"enableMessaging\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableMediaCards: {\n        serializedName: \"enableMediaCards\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableVideo: {\n        serializedName: \"enableVideo\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableCalling: {\n        serializedName: \"enableCalling\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableScreenSharing: {\n        serializedName: \"enableScreenSharing\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableGroups: {\n        serializedName: \"enableGroups\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      groupsMode: {\n        serializedName: \"groupsMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callingWebHook: {\n        serializedName: \"callingWebHook\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isEnabled: {\n        required: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const SkypeChannel: msRest.CompositeMapper = {\n  serializedName: \"SkypeChannel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: Channel.type.polymorphicDiscriminator,\n    uberParent: \"Channel\",\n    className: \"SkypeChannel\",\n    modelProperties: {\n      ...Channel.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SkypeChannelProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const KikChannelProperties: msRest.CompositeMapper = {\n  serializedName: \"KikChannelProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"KikChannelProperties\",\n    modelProperties: {\n      userName: {\n        required: true,\n        serializedName: \"userName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      apiKey: {\n        required: true,\n        serializedName: \"apiKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isValidated: {\n        serializedName: \"isValidated\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isEnabled: {\n        required: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const KikChannel: msRest.CompositeMapper = {\n  serializedName: \"KikChannel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: Channel.type.polymorphicDiscriminator,\n    uberParent: \"Channel\",\n    className: \"KikChannel\",\n    modelProperties: {\n      ...Channel.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"KikChannelProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const WebChatSite: msRest.CompositeMapper = {\n  serializedName: \"WebChatSite\",\n  type: {\n    name: \"Composite\",\n    className: \"WebChatSite\",\n    modelProperties: {\n      siteId: {\n        readOnly: true,\n        serializedName: \"siteId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      siteName: {\n        required: true,\n        serializedName: \"siteName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        readOnly: true,\n        serializedName: \"key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      key2: {\n        readOnly: true,\n        serializedName: \"key2\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isEnabled: {\n        required: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enablePreview: {\n        required: true,\n        serializedName: \"enablePreview\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const WebChatChannelProperties: msRest.CompositeMapper = {\n  serializedName: \"WebChatChannelProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"WebChatChannelProperties\",\n    modelProperties: {\n      webChatEmbedCode: {\n        readOnly: true,\n        serializedName: \"webChatEmbedCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sites: {\n        serializedName: \"sites\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WebChatSite\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const WebChatChannel: msRest.CompositeMapper = {\n  serializedName: \"WebChatChannel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: Channel.type.polymorphicDiscriminator,\n    uberParent: \"Channel\",\n    className: \"WebChatChannel\",\n    modelProperties: {\n      ...Channel.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"WebChatChannelProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectLineSite: msRest.CompositeMapper = {\n  serializedName: \"DirectLineSite\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectLineSite\",\n    modelProperties: {\n      siteId: {\n        readOnly: true,\n        serializedName: \"siteId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      siteName: {\n        required: true,\n        serializedName: \"siteName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        readOnly: true,\n        serializedName: \"key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      key2: {\n        readOnly: true,\n        serializedName: \"key2\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isEnabled: {\n        required: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isV1Enabled: {\n        required: true,\n        serializedName: \"isV1Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isV3Enabled: {\n        required: true,\n        serializedName: \"isV3Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isSecureSiteEnabled: {\n        serializedName: \"isSecureSiteEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      trustedOrigins: {\n        serializedName: \"trustedOrigins\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DirectLineChannelProperties: msRest.CompositeMapper = {\n  serializedName: \"DirectLineChannelProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectLineChannelProperties\",\n    modelProperties: {\n      sites: {\n        serializedName: \"sites\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DirectLineSite\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DirectLineChannel: msRest.CompositeMapper = {\n  serializedName: \"DirectLineChannel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: Channel.type.polymorphicDiscriminator,\n    uberParent: \"Channel\",\n    className: \"DirectLineChannel\",\n    modelProperties: {\n      ...Channel.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DirectLineChannelProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const TelegramChannelProperties: msRest.CompositeMapper = {\n  serializedName: \"TelegramChannelProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"TelegramChannelProperties\",\n    modelProperties: {\n      accessToken: {\n        required: true,\n        serializedName: \"accessToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isValidated: {\n        serializedName: \"isValidated\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isEnabled: {\n        required: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const TelegramChannel: msRest.CompositeMapper = {\n  serializedName: \"TelegramChannel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: Channel.type.polymorphicDiscriminator,\n    uberParent: \"Channel\",\n    className: \"TelegramChannel\",\n    modelProperties: {\n      ...Channel.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"TelegramChannelProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SmsChannelProperties: msRest.CompositeMapper = {\n  serializedName: \"SmsChannelProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"SmsChannelProperties\",\n    modelProperties: {\n      phone: {\n        required: true,\n        serializedName: \"phone\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountSID: {\n        required: true,\n        serializedName: \"accountSID\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authToken: {\n        required: true,\n        serializedName: \"authToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isValidated: {\n        serializedName: \"isValidated\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isEnabled: {\n        required: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const SmsChannel: msRest.CompositeMapper = {\n  serializedName: \"SmsChannel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: Channel.type.polymorphicDiscriminator,\n    uberParent: \"Channel\",\n    className: \"SmsChannel\",\n    modelProperties: {\n      ...Channel.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SmsChannelProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SlackChannelProperties: msRest.CompositeMapper = {\n  serializedName: \"SlackChannelProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"SlackChannelProperties\",\n    modelProperties: {\n      clientId: {\n        required: true,\n        serializedName: \"clientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecret: {\n        required: true,\n        serializedName: \"clientSecret\",\n        type: {\n          name: \"String\"\n        }\n      },\n      verificationToken: {\n        required: true,\n        serializedName: \"verificationToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      landingPageUrl: {\n        serializedName: \"landingPageUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      redirectAction: {\n        readOnly: true,\n        serializedName: \"redirectAction\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastSubmissionId: {\n        readOnly: true,\n        serializedName: \"lastSubmissionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      registerBeforeOAuthFlow: {\n        readOnly: true,\n        serializedName: \"registerBeforeOAuthFlow\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isValidated: {\n        readOnly: true,\n        serializedName: \"isValidated\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      signingSecret: {\n        serializedName: \"signingSecret\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isEnabled: {\n        required: true,\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const SlackChannel: msRest.CompositeMapper = {\n  serializedName: \"SlackChannel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: Channel.type.polymorphicDiscriminator,\n    uberParent: \"Channel\",\n    className: \"SlackChannel\",\n    modelProperties: {\n      ...Channel.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SlackChannelProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const LineRegistration: msRest.CompositeMapper = {\n  serializedName: \"LineRegistration\",\n  type: {\n    name: \"Composite\",\n    className: \"LineRegistration\",\n    modelProperties: {\n      generatedId: {\n        readOnly: true,\n        serializedName: \"generatedId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      channelSecret: {\n        serializedName: \"channelSecret\",\n        type: {\n          name: \"String\"\n        }\n      },\n      channelAccessToken: {\n        serializedName: \"channelAccessToken\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LineChannelProperties: msRest.CompositeMapper = {\n  serializedName: \"LineChannelProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"LineChannelProperties\",\n    modelProperties: {\n      lineRegistrations: {\n        required: true,\n        serializedName: \"lineRegistrations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LineRegistration\"\n            }\n          }\n        }\n      },\n      callbackUrl: {\n        readOnly: true,\n        serializedName: \"callbackUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isValidated: {\n        readOnly: true,\n        serializedName: \"isValidated\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const LineChannel: msRest.CompositeMapper = {\n  serializedName: \"LineChannel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: Channel.type.polymorphicDiscriminator,\n    uberParent: \"Channel\",\n    className: \"LineChannel\",\n    modelProperties: {\n      ...Channel.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"LineChannelProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectLineSpeechChannelProperties: msRest.CompositeMapper = {\n  serializedName: \"DirectLineSpeechChannelProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectLineSpeechChannelProperties\",\n    modelProperties: {\n      cognitiveServicesSubscriptionId: {\n        required: true,\n        serializedName: \"cognitiveServicesSubscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isEnabled: {\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      customVoiceDeploymentId: {\n        serializedName: \"customVoiceDeploymentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      customSpeechModelId: {\n        serializedName: \"customSpeechModelId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isDefaultBotForCogSvcAccount: {\n        serializedName: \"isDefaultBotForCogSvcAccount\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectLineSpeechChannel: msRest.CompositeMapper = {\n  serializedName: \"DirectLineSpeechChannel\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: Channel.type.polymorphicDiscriminator,\n    uberParent: \"Channel\",\n    className: \"DirectLineSpeechChannel\",\n    modelProperties: {\n      ...Channel.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DirectLineSpeechChannelProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SiteInfo: msRest.CompositeMapper = {\n  serializedName: \"SiteInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"SiteInfo\",\n    modelProperties: {\n      siteName: {\n        required: true,\n        serializedName: \"siteName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        required: true,\n        serializedName: \"key\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"key1\",\n            \"key2\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectionItemName: msRest.CompositeMapper = {\n  serializedName: \"ConnectionItemName\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectionItemName\",\n    modelProperties: {\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectionSettingParameter: msRest.CompositeMapper = {\n  serializedName: \"ConnectionSettingParameter\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectionSettingParameter\",\n    modelProperties: {\n      key: {\n        serializedName: \"key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectionSettingProperties: msRest.CompositeMapper = {\n  serializedName: \"ConnectionSettingProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectionSettingProperties\",\n    modelProperties: {\n      clientId: {\n        serializedName: \"clientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      settingId: {\n        readOnly: true,\n        serializedName: \"settingId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecret: {\n        serializedName: \"clientSecret\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scopes: {\n        serializedName: \"scopes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceProviderId: {\n        serializedName: \"serviceProviderId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceProviderDisplayName: {\n        serializedName: \"serviceProviderDisplayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectionSettingParameter\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectionSetting: msRest.CompositeMapper = {\n  serializedName: \"ConnectionSetting\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectionSetting\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ConnectionSettingProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceProviderParameter: msRest.CompositeMapper = {\n  serializedName: \"ServiceProviderParameter\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceProviderParameter\",\n    modelProperties: {\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        readOnly: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        readOnly: true,\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        readOnly: true,\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      helpUrl: {\n        readOnly: true,\n        serializedName: \"helpUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      default: {\n        readOnly: true,\n        serializedName: \"default\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceProviderProperties: msRest.CompositeMapper = {\n  serializedName: \"ServiceProviderProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceProviderProperties\",\n    modelProperties: {\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        readOnly: true,\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceProviderName: {\n        readOnly: true,\n        serializedName: \"serviceProviderName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      devPortalUrl: {\n        readOnly: true,\n        serializedName: \"devPortalUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      iconUrl: {\n        readOnly: true,\n        serializedName: \"iconUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parameters: {\n        serializedName: \"parameters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServiceProviderParameter\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceProvider: msRest.CompositeMapper = {\n  serializedName: \"ServiceProvider\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceProvider\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceProviderProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceProviderResponseList: msRest.CompositeMapper = {\n  serializedName: \"ServiceProviderResponseList\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceProviderResponseList\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServiceProvider\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorBody: msRest.CompositeMapper = {\n  serializedName: \"ErrorBody\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorBody\",\n    modelProperties: {\n      code: {\n        required: true,\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        required: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: msRest.CompositeMapper = {\n  serializedName: \"Error\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorBody\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplayInfo: msRest.CompositeMapper = {\n  serializedName: \"OperationDisplayInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplayInfo\",\n    modelProperties: {\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationEntity: msRest.CompositeMapper = {\n  serializedName: \"OperationEntity\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationEntity\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplayInfo\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Object\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameAvailabilityRequestBody: msRest.CompositeMapper = {\n  serializedName: \"CheckNameAvailabilityRequestBody\",\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameAvailabilityRequestBody\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameAvailabilityResponseBody: msRest.CompositeMapper = {\n  serializedName: \"CheckNameAvailabilityResponseBody\",\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameAvailabilityResponseBody\",\n    modelProperties: {\n      valid: {\n        serializedName: \"valid\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BotResponseList: msRest.CompositeMapper = {\n  serializedName: \"BotResponseList\",\n  type: {\n    name: \"Composite\",\n    className: \"BotResponseList\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        readOnly: true,\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Bot\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelResponseList: msRest.CompositeMapper = {\n  serializedName: \"ChannelResponseList\",\n  type: {\n    name: \"Composite\",\n    className: \"ChannelResponseList\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        readOnly: true,\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BotChannel\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OperationEntityListResult: msRest.CompositeMapper = {\n  serializedName: \"OperationEntityListResult\",\n  type: {\n    name: \"Composite\",\n    className: \"OperationEntityListResult\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OperationEntity\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConnectionSettingResponseList: msRest.CompositeMapper = {\n  serializedName: \"ConnectionSettingResponseList\",\n  type: {\n    name: \"Composite\",\n    className: \"ConnectionSettingResponseList\",\n    modelProperties: {\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        readOnly: true,\n        serializedName: \"\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConnectionSetting\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const discriminators = {\n  'Channel' : Channel,\n  'Channel.AlexaChannel' : AlexaChannel,\n  'Channel.FacebookChannel' : FacebookChannel,\n  'Channel.EmailChannel' : EmailChannel,\n  'Channel.MsTeamsChannel' : MsTeamsChannel,\n  'Channel.SkypeChannel' : SkypeChannel,\n  'Channel.KikChannel' : KikChannel,\n  'Channel.WebChatChannel' : WebChatChannel,\n  'Channel.DirectLineChannel' : DirectLineChannel,\n  'Channel.TelegramChannel' : TelegramChannel,\n  'Channel.SmsChannel' : SmsChannel,\n  'Channel.SlackChannel' : SlackChannel,\n  'Channel.LineChannel' : LineChannel,\n  'Channel.DirectLineSpeechChannel' : DirectLineSpeechChannel\n\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  AlexaChannel,\n  AlexaChannelProperties,\n  BaseResource,\n  Bot,\n  BotChannel,\n  BotProperties,\n  BotResponseList,\n  Channel,\n  CheckNameAvailabilityRequestBody,\n  CheckNameAvailabilityResponseBody,\n  ConnectionSetting,\n  ConnectionSettingParameter,\n  ConnectionSettingProperties,\n  DirectLineChannel,\n  DirectLineChannelProperties,\n  DirectLineSite,\n  DirectLineSpeechChannel,\n  DirectLineSpeechChannelProperties,\n  EmailChannel,\n  EmailChannelProperties,\n  ErrorBody,\n  ErrorModel,\n  FacebookChannel,\n  FacebookChannelProperties,\n  FacebookPage,\n  KikChannel,\n  KikChannelProperties,\n  LineChannel,\n  LineChannelProperties,\n  LineRegistration,\n  MsTeamsChannel,\n  MsTeamsChannelProperties,\n  Resource,\n  Sku,\n  SkypeChannel,\n  SkypeChannelProperties,\n  SlackChannel,\n  SlackChannelProperties,\n  SmsChannel,\n  SmsChannelProperties,\n  TelegramChannel,\n  TelegramChannelProperties,\n  WebChatChannel,\n  WebChatChannelProperties,\n  WebChatSite\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const acceptLanguage: msRest.OperationParameter = {\n  parameterPath: \"acceptLanguage\",\n  mapper: {\n    serializedName: \"accept-language\",\n    defaultValue: 'en-US',\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const apiVersion: msRest.OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    required: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const channelName0: msRest.OperationURLParameter = {\n  parameterPath: \"channelName\",\n  mapper: {\n    required: true,\n    serializedName: \"channelName\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"AlexaChannel\",\n        \"FacebookChannel\",\n        \"EmailChannel\",\n        \"KikChannel\",\n        \"TelegramChannel\",\n        \"SlackChannel\",\n        \"MsTeamsChannel\",\n        \"SkypeChannel\",\n        \"WebChatChannel\",\n        \"DirectLineChannel\",\n        \"SmsChannel\",\n        \"LineChannel\",\n        \"DirectLineSpeechChannel\"\n      ]\n    }\n  }\n};\nexport const channelName1: msRest.OperationURLParameter = {\n  parameterPath: \"channelName\",\n  mapper: {\n    required: true,\n    serializedName: \"channelName\",\n    constraints: {\n      MaxLength: 64,\n      MinLength: 2,\n      Pattern: /^[a-zA-Z0-9][a-zA-Z0-9_.-]*$/\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const channelName2: msRest.OperationURLParameter = {\n  parameterPath: \"channelName\",\n  mapper: {\n    required: true,\n    serializedName: \"channelName\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\n        \"WebChatChannel\",\n        \"DirectLineChannel\"\n      ]\n    }\n  }\n};\nexport const connectionName: msRest.OperationURLParameter = {\n  parameterPath: \"connectionName\",\n  mapper: {\n    required: true,\n    serializedName: \"connectionName\",\n    constraints: {\n      MaxLength: 64,\n      MinLength: 2,\n      Pattern: /^[a-zA-Z0-9][\\sa-zA-Z0-9_.-]*$/\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const nextPageLink: msRest.OperationURLParameter = {\n  parameterPath: \"nextPageLink\",\n  mapper: {\n    required: true,\n    serializedName: \"nextLink\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const resourceGroupName: msRest.OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceGroupName\",\n    constraints: {\n      MaxLength: 64,\n      MinLength: 2,\n      Pattern: /^[a-zA-Z0-9][a-zA-Z0-9_.-]*$/\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const resourceName: msRest.OperationURLParameter = {\n  parameterPath: \"resourceName\",\n  mapper: {\n    required: true,\n    serializedName: \"resourceName\",\n    constraints: {\n      MaxLength: 64,\n      MinLength: 2,\n      Pattern: /^[a-zA-Z0-9][a-zA-Z0-9_.-]*$/\n    },\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const subscriptionId: msRest.OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    required: true,\n    serializedName: \"subscriptionId\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/botsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureBotServiceContext } from \"../azureBotServiceContext\";\n\n/** Class representing a Bots. */\nexport class Bots {\n  private readonly client: AzureBotServiceContext;\n\n  /**\n   * Create a Bots.\n   * @param {AzureBotServiceContext} client Reference to the service client.\n   */\n  constructor(client: AzureBotServiceContext) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a Bot Service. Bot Service is a resource group wide resource type.\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param parameters The parameters to provide for the created bot.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotsCreateResponse>\n   */\n  create(resourceGroupName: string, resourceName: string, parameters: Models.Bot, options?: msRest.RequestOptionsBase): Promise<Models.BotsCreateResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param parameters The parameters to provide for the created bot.\n   * @param callback The callback\n   */\n  create(resourceGroupName: string, resourceName: string, parameters: Models.Bot, callback: msRest.ServiceCallback<Models.Bot>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param parameters The parameters to provide for the created bot.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(resourceGroupName: string, resourceName: string, parameters: Models.Bot, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Bot>): void;\n  create(resourceGroupName: string, resourceName: string, parameters: Models.Bot, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Bot>, callback?: msRest.ServiceCallback<Models.Bot>): Promise<Models.BotsCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        parameters,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.BotsCreateResponse>;\n  }\n\n  /**\n   * Updates a Bot Service\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotsUpdateResponse>\n   */\n  update(resourceGroupName: string, resourceName: string, options?: Models.BotsUpdateOptionalParams): Promise<Models.BotsUpdateResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.Bot>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, resourceName: string, options: Models.BotsUpdateOptionalParams, callback: msRest.ServiceCallback<Models.Bot>): void;\n  update(resourceGroupName: string, resourceName: string, options?: Models.BotsUpdateOptionalParams | msRest.ServiceCallback<Models.Bot>, callback?: msRest.ServiceCallback<Models.Bot>): Promise<Models.BotsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.BotsUpdateResponse>;\n  }\n\n  /**\n   * Deletes a Bot Service from the resource group.\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param callback The callback\n   */\n  deleteMethod(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback);\n  }\n\n  /**\n   * Returns a BotService specified by the parameters.\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotsGetResponse>\n   */\n  get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.BotsGetResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.Bot>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.Bot>): void;\n  get(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.Bot>, callback?: msRest.ServiceCallback<Models.Bot>): Promise<Models.BotsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.BotsGetResponse>;\n  }\n\n  /**\n   * Returns all the resources of a particular type belonging to a resource group\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotsListByResourceGroupResponse>\n   */\n  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.BotsListByResourceGroupResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, callback: msRest.ServiceCallback<Models.BotResponseList>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BotResponseList>): void;\n  listByResourceGroup(resourceGroupName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BotResponseList>, callback?: msRest.ServiceCallback<Models.BotResponseList>): Promise<Models.BotsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        options\n      },\n      listByResourceGroupOperationSpec,\n      callback) as Promise<Models.BotsListByResourceGroupResponse>;\n  }\n\n  /**\n   * Returns all the resources of a particular type belonging to a subscription.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.BotsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.BotResponseList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BotResponseList>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BotResponseList>, callback?: msRest.ServiceCallback<Models.BotResponseList>): Promise<Models.BotsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.BotsListResponse>;\n  }\n\n  /**\n   * Check whether a bot name is available.\n   * @param parameters The request body parameters to provide for the check name availability request\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotsGetCheckNameAvailabilityResponse>\n   */\n  getCheckNameAvailability(parameters: Models.CheckNameAvailabilityRequestBody, options?: msRest.RequestOptionsBase): Promise<Models.BotsGetCheckNameAvailabilityResponse>;\n  /**\n   * @param parameters The request body parameters to provide for the check name availability request\n   * @param callback The callback\n   */\n  getCheckNameAvailability(parameters: Models.CheckNameAvailabilityRequestBody, callback: msRest.ServiceCallback<Models.CheckNameAvailabilityResponseBody>): void;\n  /**\n   * @param parameters The request body parameters to provide for the check name availability request\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  getCheckNameAvailability(parameters: Models.CheckNameAvailabilityRequestBody, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.CheckNameAvailabilityResponseBody>): void;\n  getCheckNameAvailability(parameters: Models.CheckNameAvailabilityRequestBody, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.CheckNameAvailabilityResponseBody>, callback?: msRest.ServiceCallback<Models.CheckNameAvailabilityResponseBody>): Promise<Models.BotsGetCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      {\n        parameters,\n        options\n      },\n      getCheckNameAvailabilityOperationSpec,\n      callback) as Promise<Models.BotsGetCheckNameAvailabilityResponse>;\n  }\n\n  /**\n   * Returns all the resources of a particular type belonging to a resource group\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotsListByResourceGroupNextResponse>\n   */\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.BotsListByResourceGroupNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.BotResponseList>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BotResponseList>): void;\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BotResponseList>, callback?: msRest.ServiceCallback<Models.BotResponseList>): Promise<Models.BotsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listByResourceGroupNextOperationSpec,\n      callback) as Promise<Models.BotsListByResourceGroupNextResponse>;\n  }\n\n  /**\n   * Returns all the resources of a particular type belonging to a subscription.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotsListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.BotsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.BotResponseList>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BotResponseList>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BotResponseList>, callback?: msRest.ServiceCallback<Models.BotResponseList>): Promise<Models.BotsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.BotsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst createOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.Bot,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.Bot\n    },\n    201: {\n      bodyMapper: Mappers.Bot\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: {\n      location: [\n        \"options\",\n        \"location\"\n      ],\n      tags: [\n        \"options\",\n        \"tags\"\n      ],\n      sku: [\n        \"options\",\n        \"sku\"\n      ],\n      kind: [\n        \"options\",\n        \"kind\"\n      ],\n      etag: [\n        \"options\",\n        \"etag\"\n      ],\n      properties: [\n        \"options\",\n        \"properties\"\n      ]\n    },\n    mapper: {\n      ...Mappers.Bot,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.Bot\n    },\n    201: {\n      bodyMapper: Mappers.Bot\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.Bot\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.BotResponseList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.BotService/botServices\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.BotResponseList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst getCheckNameAvailabilityOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"providers/Microsoft.BotService/checkNameAvailability\",\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.CheckNameAvailabilityRequestBody,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameAvailabilityResponseBody\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.BotResponseList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.BotResponseList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  AlexaChannel,\n  AlexaChannelProperties,\n  BaseResource,\n  Bot,\n  BotChannel,\n  BotProperties,\n  Channel,\n  ChannelResponseList,\n  ConnectionSetting,\n  ConnectionSettingParameter,\n  ConnectionSettingProperties,\n  DirectLineChannel,\n  DirectLineChannelProperties,\n  DirectLineSite,\n  DirectLineSpeechChannel,\n  DirectLineSpeechChannelProperties,\n  EmailChannel,\n  EmailChannelProperties,\n  ErrorBody,\n  ErrorModel,\n  FacebookChannel,\n  FacebookChannelProperties,\n  FacebookPage,\n  KikChannel,\n  KikChannelProperties,\n  LineChannel,\n  LineChannelProperties,\n  LineRegistration,\n  MsTeamsChannel,\n  MsTeamsChannelProperties,\n  Resource,\n  Sku,\n  SkypeChannel,\n  SkypeChannelProperties,\n  SlackChannel,\n  SlackChannelProperties,\n  SmsChannel,\n  SmsChannelProperties,\n  TelegramChannel,\n  TelegramChannelProperties,\n  WebChatChannel,\n  WebChatChannelProperties,\n  WebChatSite\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/channelsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureBotServiceContext } from \"../azureBotServiceContext\";\n\n/** Class representing a Channels. */\nexport class Channels {\n  private readonly client: AzureBotServiceContext;\n\n  /**\n   * Create a Channels.\n   * @param {AzureBotServiceContext} client Reference to the service client.\n   */\n  constructor(client: AzureBotServiceContext) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a Channel registration for a Bot Service\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Channel resource. Possible values include: 'AlexaChannel',\n   * 'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel', 'SlackChannel',\n   * 'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel', 'DirectLineChannel', 'SmsChannel',\n   * 'LineChannel', 'DirectLineSpeechChannel'\n   * @param parameters The parameters to provide for the created bot.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ChannelsCreateResponse>\n   */\n  create(resourceGroupName: string, resourceName: string, channelName: Models.ChannelName, parameters: Models.BotChannel, options?: msRest.RequestOptionsBase): Promise<Models.ChannelsCreateResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Channel resource. Possible values include: 'AlexaChannel',\n   * 'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel', 'SlackChannel',\n   * 'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel', 'DirectLineChannel', 'SmsChannel',\n   * 'LineChannel', 'DirectLineSpeechChannel'\n   * @param parameters The parameters to provide for the created bot.\n   * @param callback The callback\n   */\n  create(resourceGroupName: string, resourceName: string, channelName: Models.ChannelName, parameters: Models.BotChannel, callback: msRest.ServiceCallback<Models.BotChannel>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Channel resource. Possible values include: 'AlexaChannel',\n   * 'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel', 'SlackChannel',\n   * 'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel', 'DirectLineChannel', 'SmsChannel',\n   * 'LineChannel', 'DirectLineSpeechChannel'\n   * @param parameters The parameters to provide for the created bot.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(resourceGroupName: string, resourceName: string, channelName: Models.ChannelName, parameters: Models.BotChannel, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BotChannel>): void;\n  create(resourceGroupName: string, resourceName: string, channelName: Models.ChannelName, parameters: Models.BotChannel, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BotChannel>, callback?: msRest.ServiceCallback<Models.BotChannel>): Promise<Models.ChannelsCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        channelName,\n        parameters,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.ChannelsCreateResponse>;\n  }\n\n  /**\n   * Updates a Channel registration for a Bot Service\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Channel resource. Possible values include: 'AlexaChannel',\n   * 'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel', 'SlackChannel',\n   * 'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel', 'DirectLineChannel', 'SmsChannel',\n   * 'LineChannel', 'DirectLineSpeechChannel'\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ChannelsUpdateResponse>\n   */\n  update(resourceGroupName: string, resourceName: string, channelName: Models.ChannelName, options?: Models.ChannelsUpdateOptionalParams): Promise<Models.ChannelsUpdateResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Channel resource. Possible values include: 'AlexaChannel',\n   * 'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel', 'SlackChannel',\n   * 'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel', 'DirectLineChannel', 'SmsChannel',\n   * 'LineChannel', 'DirectLineSpeechChannel'\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, resourceName: string, channelName: Models.ChannelName, callback: msRest.ServiceCallback<Models.BotChannel>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Channel resource. Possible values include: 'AlexaChannel',\n   * 'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel', 'SlackChannel',\n   * 'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel', 'DirectLineChannel', 'SmsChannel',\n   * 'LineChannel', 'DirectLineSpeechChannel'\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, resourceName: string, channelName: Models.ChannelName, options: Models.ChannelsUpdateOptionalParams, callback: msRest.ServiceCallback<Models.BotChannel>): void;\n  update(resourceGroupName: string, resourceName: string, channelName: Models.ChannelName, options?: Models.ChannelsUpdateOptionalParams | msRest.ServiceCallback<Models.BotChannel>, callback?: msRest.ServiceCallback<Models.BotChannel>): Promise<Models.ChannelsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        channelName,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.ChannelsUpdateResponse>;\n  }\n\n  /**\n   * Deletes a Channel registration from a Bot Service\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Bot resource.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(resourceGroupName: string, resourceName: string, channelName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Bot resource.\n   * @param callback The callback\n   */\n  deleteMethod(resourceGroupName: string, resourceName: string, channelName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Bot resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(resourceGroupName: string, resourceName: string, channelName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(resourceGroupName: string, resourceName: string, channelName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        channelName,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback);\n  }\n\n  /**\n   * Returns a BotService Channel registration specified by the parameters.\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Bot resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ChannelsGetResponse>\n   */\n  get(resourceGroupName: string, resourceName: string, channelName: string, options?: msRest.RequestOptionsBase): Promise<Models.ChannelsGetResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Bot resource.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceName: string, channelName: string, callback: msRest.ServiceCallback<Models.BotChannel>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Bot resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceName: string, channelName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BotChannel>): void;\n  get(resourceGroupName: string, resourceName: string, channelName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BotChannel>, callback?: msRest.ServiceCallback<Models.BotChannel>): Promise<Models.ChannelsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        channelName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.ChannelsGetResponse>;\n  }\n\n  /**\n   * Lists a Channel registration for a Bot Service including secrets\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Channel resource. Possible values include: 'AlexaChannel',\n   * 'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel', 'SlackChannel',\n   * 'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel', 'DirectLineChannel', 'SmsChannel',\n   * 'LineChannel', 'DirectLineSpeechChannel'\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ChannelsListWithKeysResponse>\n   */\n  listWithKeys(resourceGroupName: string, resourceName: string, channelName: Models.ChannelName, options?: msRest.RequestOptionsBase): Promise<Models.ChannelsListWithKeysResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Channel resource. Possible values include: 'AlexaChannel',\n   * 'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel', 'SlackChannel',\n   * 'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel', 'DirectLineChannel', 'SmsChannel',\n   * 'LineChannel', 'DirectLineSpeechChannel'\n   * @param callback The callback\n   */\n  listWithKeys(resourceGroupName: string, resourceName: string, channelName: Models.ChannelName, callback: msRest.ServiceCallback<Models.BotChannel>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Channel resource. Possible values include: 'AlexaChannel',\n   * 'FacebookChannel', 'EmailChannel', 'KikChannel', 'TelegramChannel', 'SlackChannel',\n   * 'MsTeamsChannel', 'SkypeChannel', 'WebChatChannel', 'DirectLineChannel', 'SmsChannel',\n   * 'LineChannel', 'DirectLineSpeechChannel'\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listWithKeys(resourceGroupName: string, resourceName: string, channelName: Models.ChannelName, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BotChannel>): void;\n  listWithKeys(resourceGroupName: string, resourceName: string, channelName: Models.ChannelName, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BotChannel>, callback?: msRest.ServiceCallback<Models.BotChannel>): Promise<Models.ChannelsListWithKeysResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        channelName,\n        options\n      },\n      listWithKeysOperationSpec,\n      callback) as Promise<Models.ChannelsListWithKeysResponse>;\n  }\n\n  /**\n   * Returns all the Channel registrations of a particular BotService resource\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ChannelsListByResourceGroupResponse>\n   */\n  listByResourceGroup(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ChannelsListByResourceGroupResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.ChannelResponseList>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroup(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ChannelResponseList>): void;\n  listByResourceGroup(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ChannelResponseList>, callback?: msRest.ServiceCallback<Models.ChannelResponseList>): Promise<Models.ChannelsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      listByResourceGroupOperationSpec,\n      callback) as Promise<Models.ChannelsListByResourceGroupResponse>;\n  }\n\n  /**\n   * Returns all the Channel registrations of a particular BotService resource\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ChannelsListByResourceGroupNextResponse>\n   */\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ChannelsListByResourceGroupNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ChannelResponseList>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByResourceGroupNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ChannelResponseList>): void;\n  listByResourceGroupNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ChannelResponseList>, callback?: msRest.ServiceCallback<Models.ChannelResponseList>): Promise<Models.ChannelsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listByResourceGroupNextOperationSpec,\n      callback) as Promise<Models.ChannelsListByResourceGroupNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst createOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.channelName0,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.BotChannel,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.BotChannel\n    },\n    201: {\n      bodyMapper: Mappers.BotChannel\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.channelName0,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: {\n      location: [\n        \"options\",\n        \"location\"\n      ],\n      tags: [\n        \"options\",\n        \"tags\"\n      ],\n      sku: [\n        \"options\",\n        \"sku\"\n      ],\n      kind: [\n        \"options\",\n        \"kind\"\n      ],\n      etag: [\n        \"options\",\n        \"etag\"\n      ],\n      properties: [\n        \"options\",\n        \"properties\"\n      ]\n    },\n    mapper: {\n      ...Mappers.BotChannel,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.BotChannel\n    },\n    201: {\n      bodyMapper: Mappers.BotChannel\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.channelName1,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.channelName1,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.BotChannel\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst listWithKeysOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}/listChannelWithKeys\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.channelName0,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.BotChannel\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ChannelResponseList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst listByResourceGroupNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ChannelResponseList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  AlexaChannel,\n  AlexaChannelProperties,\n  BaseResource,\n  Bot,\n  BotChannel,\n  BotProperties,\n  Channel,\n  ConnectionSetting,\n  ConnectionSettingParameter,\n  ConnectionSettingProperties,\n  DirectLineChannel,\n  DirectLineChannelProperties,\n  DirectLineSite,\n  DirectLineSpeechChannel,\n  DirectLineSpeechChannelProperties,\n  EmailChannel,\n  EmailChannelProperties,\n  ErrorBody,\n  ErrorModel,\n  FacebookChannel,\n  FacebookChannelProperties,\n  FacebookPage,\n  KikChannel,\n  KikChannelProperties,\n  LineChannel,\n  LineChannelProperties,\n  LineRegistration,\n  MsTeamsChannel,\n  MsTeamsChannelProperties,\n  Resource,\n  SiteInfo,\n  Sku,\n  SkypeChannel,\n  SkypeChannelProperties,\n  SlackChannel,\n  SlackChannelProperties,\n  SmsChannel,\n  SmsChannelProperties,\n  TelegramChannel,\n  TelegramChannelProperties,\n  WebChatChannel,\n  WebChatChannelProperties,\n  WebChatSite\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/directLineMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureBotServiceContext } from \"../azureBotServiceContext\";\n\n/** Class representing a DirectLine. */\nexport class DirectLine {\n  private readonly client: AzureBotServiceContext;\n\n  /**\n   * Create a DirectLine.\n   * @param {AzureBotServiceContext} client Reference to the service client.\n   */\n  constructor(client: AzureBotServiceContext) {\n    this.client = client;\n  }\n\n  /**\n   * Regenerates secret keys and returns them for the DirectLine Channel of a particular BotService\n   * resource\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Channel resource for which keys are to be regenerated.\n   * Possible values include: 'WebChatChannel', 'DirectLineChannel'\n   * @param parameters The parameters to provide for the created bot.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.DirectLineRegenerateKeysResponse>\n   */\n  regenerateKeys(resourceGroupName: string, resourceName: string, channelName: Models.RegenerateKeysChannelName, parameters: Models.SiteInfo, options?: msRest.RequestOptionsBase): Promise<Models.DirectLineRegenerateKeysResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Channel resource for which keys are to be regenerated.\n   * Possible values include: 'WebChatChannel', 'DirectLineChannel'\n   * @param parameters The parameters to provide for the created bot.\n   * @param callback The callback\n   */\n  regenerateKeys(resourceGroupName: string, resourceName: string, channelName: Models.RegenerateKeysChannelName, parameters: Models.SiteInfo, callback: msRest.ServiceCallback<Models.BotChannel>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param channelName The name of the Channel resource for which keys are to be regenerated.\n   * Possible values include: 'WebChatChannel', 'DirectLineChannel'\n   * @param parameters The parameters to provide for the created bot.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  regenerateKeys(resourceGroupName: string, resourceName: string, channelName: Models.RegenerateKeysChannelName, parameters: Models.SiteInfo, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BotChannel>): void;\n  regenerateKeys(resourceGroupName: string, resourceName: string, channelName: Models.RegenerateKeysChannelName, parameters: Models.SiteInfo, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.BotChannel>, callback?: msRest.ServiceCallback<Models.BotChannel>): Promise<Models.DirectLineRegenerateKeysResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        channelName,\n        parameters,\n        options\n      },\n      regenerateKeysOperationSpec,\n      callback) as Promise<Models.DirectLineRegenerateKeysResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst regenerateKeysOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/channels/{channelName}/regeneratekeys\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.subscriptionId,\n    Parameters.channelName2\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.SiteInfo,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.BotChannel\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  CloudError,\n  OperationDisplayInfo,\n  OperationEntity,\n  OperationEntityListResult\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/operationsMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureBotServiceContext } from \"../azureBotServiceContext\";\n\n/** Class representing a Operations. */\nexport class Operations {\n  private readonly client: AzureBotServiceContext;\n\n  /**\n   * Create a Operations.\n   * @param {AzureBotServiceContext} client Reference to the service client.\n   */\n  constructor(client: AzureBotServiceContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the available BotService operations.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListResponse>\n   */\n  list(options?: msRest.RequestOptionsBase): Promise<Models.OperationsListResponse>;\n  /**\n   * @param callback The callback\n   */\n  list(callback: msRest.ServiceCallback<Models.OperationEntityListResult>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  list(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationEntityListResult>): void;\n  list(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationEntityListResult>, callback?: msRest.ServiceCallback<Models.OperationEntityListResult>): Promise<Models.OperationsListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listOperationSpec,\n      callback) as Promise<Models.OperationsListResponse>;\n  }\n\n  /**\n   * Lists all the available BotService operations.\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.OperationsListNextResponse>\n   */\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.OperationsListNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.OperationEntityListResult>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.OperationEntityListResult>): void;\n  listNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.OperationEntityListResult>, callback?: msRest.ServiceCallback<Models.OperationEntityListResult>): Promise<Models.OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listNextOperationSpec,\n      callback) as Promise<Models.OperationsListNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"providers/Microsoft.BotService/operations\",\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationEntityListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n\nconst listNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationEntityListResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  AlexaChannel,\n  AlexaChannelProperties,\n  BaseResource,\n  Bot,\n  BotChannel,\n  BotProperties,\n  Channel,\n  ConnectionSetting,\n  ConnectionSettingParameter,\n  ConnectionSettingProperties,\n  ConnectionSettingResponseList,\n  DirectLineChannel,\n  DirectLineChannelProperties,\n  DirectLineSite,\n  DirectLineSpeechChannel,\n  DirectLineSpeechChannelProperties,\n  EmailChannel,\n  EmailChannelProperties,\n  ErrorBody,\n  ErrorModel,\n  FacebookChannel,\n  FacebookChannelProperties,\n  FacebookPage,\n  KikChannel,\n  KikChannelProperties,\n  LineChannel,\n  LineChannelProperties,\n  LineRegistration,\n  MsTeamsChannel,\n  MsTeamsChannelProperties,\n  Resource,\n  ServiceProvider,\n  ServiceProviderParameter,\n  ServiceProviderProperties,\n  ServiceProviderResponseList,\n  Sku,\n  SkypeChannel,\n  SkypeChannelProperties,\n  SlackChannel,\n  SlackChannelProperties,\n  SmsChannel,\n  SmsChannelProperties,\n  TelegramChannel,\n  TelegramChannelProperties,\n  WebChatChannel,\n  WebChatChannelProperties,\n  WebChatSite\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/botConnectionMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AzureBotServiceContext } from \"../azureBotServiceContext\";\n\n/** Class representing a BotConnection. */\nexport class BotConnection {\n  private readonly client: AzureBotServiceContext;\n\n  /**\n   * Create a BotConnection.\n   * @param {AzureBotServiceContext} client Reference to the service client.\n   */\n  constructor(client: AzureBotServiceContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the available Service Providers for creating Connection Settings\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotConnectionListServiceProvidersResponse>\n   */\n  listServiceProviders(options?: msRest.RequestOptionsBase): Promise<Models.BotConnectionListServiceProvidersResponse>;\n  /**\n   * @param callback The callback\n   */\n  listServiceProviders(callback: msRest.ServiceCallback<Models.ServiceProviderResponseList>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listServiceProviders(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceProviderResponseList>): void;\n  listServiceProviders(options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ServiceProviderResponseList>, callback?: msRest.ServiceCallback<Models.ServiceProviderResponseList>): Promise<Models.BotConnectionListServiceProvidersResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      listServiceProvidersOperationSpec,\n      callback) as Promise<Models.BotConnectionListServiceProvidersResponse>;\n  }\n\n  /**\n   * Get a Connection Setting registration for a Bot Service\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotConnectionListWithSecretsResponse>\n   */\n  listWithSecrets(resourceGroupName: string, resourceName: string, connectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.BotConnectionListWithSecretsResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param callback The callback\n   */\n  listWithSecrets(resourceGroupName: string, resourceName: string, connectionName: string, callback: msRest.ServiceCallback<Models.ConnectionSetting>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listWithSecrets(resourceGroupName: string, resourceName: string, connectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ConnectionSetting>): void;\n  listWithSecrets(resourceGroupName: string, resourceName: string, connectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ConnectionSetting>, callback?: msRest.ServiceCallback<Models.ConnectionSetting>): Promise<Models.BotConnectionListWithSecretsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        connectionName,\n        options\n      },\n      listWithSecretsOperationSpec,\n      callback) as Promise<Models.BotConnectionListWithSecretsResponse>;\n  }\n\n  /**\n   * Register a new Auth Connection for a Bot Service\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param parameters The parameters to provide for creating the Connection Setting.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotConnectionCreateResponse>\n   */\n  create(resourceGroupName: string, resourceName: string, connectionName: string, parameters: Models.ConnectionSetting, options?: msRest.RequestOptionsBase): Promise<Models.BotConnectionCreateResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param parameters The parameters to provide for creating the Connection Setting.\n   * @param callback The callback\n   */\n  create(resourceGroupName: string, resourceName: string, connectionName: string, parameters: Models.ConnectionSetting, callback: msRest.ServiceCallback<Models.ConnectionSetting>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param parameters The parameters to provide for creating the Connection Setting.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  create(resourceGroupName: string, resourceName: string, connectionName: string, parameters: Models.ConnectionSetting, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ConnectionSetting>): void;\n  create(resourceGroupName: string, resourceName: string, connectionName: string, parameters: Models.ConnectionSetting, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ConnectionSetting>, callback?: msRest.ServiceCallback<Models.ConnectionSetting>): Promise<Models.BotConnectionCreateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        connectionName,\n        parameters,\n        options\n      },\n      createOperationSpec,\n      callback) as Promise<Models.BotConnectionCreateResponse>;\n  }\n\n  /**\n   * Updates a Connection Setting registration for a Bot Service\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param parameters The parameters to provide for updating the Connection Setting.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotConnectionUpdateResponse>\n   */\n  update(resourceGroupName: string, resourceName: string, connectionName: string, parameters: Models.ConnectionSetting, options?: msRest.RequestOptionsBase): Promise<Models.BotConnectionUpdateResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param parameters The parameters to provide for updating the Connection Setting.\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, resourceName: string, connectionName: string, parameters: Models.ConnectionSetting, callback: msRest.ServiceCallback<Models.ConnectionSetting>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param parameters The parameters to provide for updating the Connection Setting.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  update(resourceGroupName: string, resourceName: string, connectionName: string, parameters: Models.ConnectionSetting, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ConnectionSetting>): void;\n  update(resourceGroupName: string, resourceName: string, connectionName: string, parameters: Models.ConnectionSetting, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ConnectionSetting>, callback?: msRest.ServiceCallback<Models.ConnectionSetting>): Promise<Models.BotConnectionUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        connectionName,\n        parameters,\n        options\n      },\n      updateOperationSpec,\n      callback) as Promise<Models.BotConnectionUpdateResponse>;\n  }\n\n  /**\n   * Get a Connection Setting registration for a Bot Service\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotConnectionGetResponse>\n   */\n  get(resourceGroupName: string, resourceName: string, connectionName: string, options?: msRest.RequestOptionsBase): Promise<Models.BotConnectionGetResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceName: string, connectionName: string, callback: msRest.ServiceCallback<Models.ConnectionSetting>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  get(resourceGroupName: string, resourceName: string, connectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ConnectionSetting>): void;\n  get(resourceGroupName: string, resourceName: string, connectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ConnectionSetting>, callback?: msRest.ServiceCallback<Models.ConnectionSetting>): Promise<Models.BotConnectionGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        connectionName,\n        options\n      },\n      getOperationSpec,\n      callback) as Promise<Models.BotConnectionGetResponse>;\n  }\n\n  /**\n   * Deletes a Connection Setting registration for a Bot Service\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param [options] The optional parameters\n   * @returns Promise<msRest.RestResponse>\n   */\n  deleteMethod(resourceGroupName: string, resourceName: string, connectionName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param callback The callback\n   */\n  deleteMethod(resourceGroupName: string, resourceName: string, connectionName: string, callback: msRest.ServiceCallback<void>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param connectionName The name of the Bot Service Connection Setting resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  deleteMethod(resourceGroupName: string, resourceName: string, connectionName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;\n  deleteMethod(resourceGroupName: string, resourceName: string, connectionName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<void>, callback?: msRest.ServiceCallback<void>): Promise<msRest.RestResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        connectionName,\n        options\n      },\n      deleteMethodOperationSpec,\n      callback);\n  }\n\n  /**\n   * Returns all the Connection Settings registered to a particular BotService resource\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotConnectionListByBotServiceResponse>\n   */\n  listByBotService(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase): Promise<Models.BotConnectionListByBotServiceResponse>;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param callback The callback\n   */\n  listByBotService(resourceGroupName: string, resourceName: string, callback: msRest.ServiceCallback<Models.ConnectionSettingResponseList>): void;\n  /**\n   * @param resourceGroupName The name of the Bot resource group in the user subscription.\n   * @param resourceName The name of the Bot resource.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByBotService(resourceGroupName: string, resourceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ConnectionSettingResponseList>): void;\n  listByBotService(resourceGroupName: string, resourceName: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ConnectionSettingResponseList>, callback?: msRest.ServiceCallback<Models.ConnectionSettingResponseList>): Promise<Models.BotConnectionListByBotServiceResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        resourceName,\n        options\n      },\n      listByBotServiceOperationSpec,\n      callback) as Promise<Models.BotConnectionListByBotServiceResponse>;\n  }\n\n  /**\n   * Returns all the Connection Settings registered to a particular BotService resource\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param [options] The optional parameters\n   * @returns Promise<Models.BotConnectionListByBotServiceNextResponse>\n   */\n  listByBotServiceNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.BotConnectionListByBotServiceNextResponse>;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param callback The callback\n   */\n  listByBotServiceNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ConnectionSettingResponseList>): void;\n  /**\n   * @param nextPageLink The NextLink from the previous successful call to List operation.\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  listByBotServiceNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ConnectionSettingResponseList>): void;\n  listByBotServiceNext(nextPageLink: string, options?: msRest.RequestOptionsBase | msRest.ServiceCallback<Models.ConnectionSettingResponseList>, callback?: msRest.ServiceCallback<Models.ConnectionSettingResponseList>): Promise<Models.BotConnectionListByBotServiceNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        nextPageLink,\n        options\n      },\n      listByBotServiceNextOperationSpec,\n      callback) as Promise<Models.BotConnectionListByBotServiceNextResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst listServiceProvidersOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/providers/Microsoft.BotService/listAuthServiceProviders\",\n  urlParameters: [\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceProviderResponseList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst listWithSecretsOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}/listWithSecrets\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.connectionName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionSetting\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst createOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PUT\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.connectionName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ConnectionSetting,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionSetting\n    },\n    201: {\n      bodyMapper: Mappers.ConnectionSetting\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst updateOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"PATCH\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.connectionName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  requestBody: {\n    parameterPath: \"parameters\",\n    mapper: {\n      ...Mappers.ConnectionSetting,\n      required: true\n    }\n  },\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionSetting\n    },\n    201: {\n      bodyMapper: Mappers.ConnectionSetting\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst getOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.connectionName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionSetting\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst deleteMethodOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"DELETE\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/Connections/{connectionName}\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.connectionName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst listByBotServiceOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  path: \"subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BotService/botServices/{resourceName}/connections\",\n  urlParameters: [\n    Parameters.resourceGroupName,\n    Parameters.resourceName,\n    Parameters.subscriptionId\n  ],\n  queryParameters: [\n    Parameters.apiVersion\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionSettingResponseList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n\nconst listByBotServiceNextOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"GET\",\n  baseUrl: \"https://management.azure.com\",\n  path: \"{nextLink}\",\n  urlParameters: [\n    Parameters.nextPageLink\n  ],\n  headerParameters: [\n    Parameters.acceptLanguage\n  ],\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConnectionSettingResponseList\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as Models from \"./models\";\nimport * as msRest from \"@azure/ms-rest-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport * as msRestAzure from \"@azure/ms-rest-azure-js\";\n\nconst packageName = \"@azure/arm-botservice\";\nconst packageVersion = \"2.1.0\";\n\nexport class AzureBotServiceContext extends msRestAzure.AzureServiceClient {\n  credentials: msRest.ServiceClientCredentials | TokenCredential;\n  subscriptionId: string;\n  apiVersion?: string;\n\n  /**\n   * Initializes a new instance of the AzureBotService class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param subscriptionId Azure Subscription ID.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.AzureBotServiceOptions) {\n    if (credentials == undefined) {\n      throw new Error('\\'credentials\\' cannot be null.');\n    }\n    if (subscriptionId == undefined) {\n      throw new Error('\\'subscriptionId\\' cannot be null.');\n    }\n\n    if (!options) {\n      options = {};\n    }\n    if (!options.userAgent) {\n      const defaultUserAgent = msRestAzure.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.apiVersion = '2020-06-02';\n    this.acceptLanguage = 'en-US';\n    this.longRunningOperationRetryTimeout = 30;\n    this.baseUri = options.baseUri || this.baseUri || \"https://management.azure.com\";\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.credentials = credentials;\n    this.subscriptionId = subscriptionId;\n\n    if (options.acceptLanguage !== null && options.acceptLanguage !== undefined) {\n      this.acceptLanguage = options.acceptLanguage;\n    }\n    if (options.longRunningOperationRetryTimeout !== null && options.longRunningOperationRetryTimeout !== undefined) {\n      this.longRunningOperationRetryTimeout = options.longRunningOperationRetryTimeout;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport { TokenCredential } from \"@azure/core-auth\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { AzureBotServiceContext } from \"./azureBotServiceContext\";\n\n\nclass AzureBotService extends AzureBotServiceContext {\n  // Operation groups\n  bots: operations.Bots;\n  channels: operations.Channels;\n  directLine: operations.DirectLine;\n  operations: operations.Operations;\n  botConnection: operations.BotConnection;\n\n  /**\n   * Initializes a new instance of the AzureBotService class.\n   * @param credentials Credentials needed for the client to connect to Azure. Credentials\n   * implementing the TokenCredential interface from the @azure/identity package are recommended. For\n   * more information about these credentials, see\n   * {@link https://www.npmjs.com/package/@azure/identity}. Credentials implementing the\n   * ServiceClientCredentials interface from the older packages @azure/ms-rest-nodeauth and\n   * @azure/ms-rest-browserauth are also supported.\n   * @param subscriptionId Azure Subscription ID.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials | TokenCredential, subscriptionId: string, options?: Models.AzureBotServiceOptions) {\n    super(credentials, subscriptionId, options);\n    this.bots = new operations.Bots(this);\n    this.channels = new operations.Channels(this);\n    this.directLine = new operations.DirectLine(this);\n    this.operations = new operations.Operations(this);\n    this.botConnection = new operations.BotConnection(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  AzureBotService,\n  AzureBotServiceContext,\n  Models as AzureBotServiceModels,\n  Mappers as AzureBotServiceMappers\n};\nexport * from \"./operations\";\n"],"names":["CloudErrorMapper","BaseResourceMapper","msRest.Serializer","Parameters.resourceGroupName","Parameters.resourceName","Parameters.subscriptionId","Parameters.apiVersion","Parameters.acceptLanguage","Mappers.Bot","Mappers.ErrorModel","Mappers.BotResponseList","Mappers.CheckNameAvailabilityRequestBody","Mappers.CheckNameAvailabilityResponseBody","Parameters.nextPageLink","createOperationSpec","updateOperationSpec","deleteMethodOperationSpec","getOperationSpec","listByResourceGroupOperationSpec","listByResourceGroupNextOperationSpec","serializer","Mappers","Parameters.channelName0","Mappers.BotChannel","Parameters.channelName1","Mappers.ChannelResponseList","Parameters.channelName2","Mappers.SiteInfo","listOperationSpec","listNextOperationSpec","Mappers.OperationEntityListResult","Mappers.CloudError","Mappers.ServiceProviderResponseList","Parameters.connectionName","Mappers.ConnectionSetting","Mappers.ConnectionSettingResponseList","msRestAzure.getDefaultUserAgentValue","msRestAzure.AzureServiceClient","operations.Bots","operations.Channels","operations.DirectLine","operations.Operations","operations.BotConnection"],"mappings":";;;;;;;;;;;;;IAAA;IACA;AACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,IAAI,aAAa,GAAG,SAAS,CAAC,EAAE,CAAC,EAAE;IACnC,IAAI,aAAa,GAAG,MAAM,CAAC,cAAc;IACzC,SAAS,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;IACpF,QAAQ,UAAU,CAAC,EAAE,CAAC,EAAE,EAAE,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACnF,IAAI,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/B,CAAC,CAAC;AACF;IACO,SAAS,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE;IAChC,IAAI,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,IAAI,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;IAC3C,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;IACzF,CAAC;AACD;IACO,IAAI,QAAQ,GAAG,WAAW;IACjC,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC,EAAE;IACrD,QAAQ,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC7D,YAAY,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IAC7B,YAAY,KAAK,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACzF,SAAS;IACT,QAAQ,OAAO,CAAC,CAAC;IACjB,MAAK;IACL,IAAI,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC3C;;ICtCA;;;;;;OAMG;;;;;;ICNH;;;;;;;IAWO,IAAM,UAAU,GAAGA,4BAAgB,CAAC;AAC3C,IAAO,IAAM,YAAY,GAAGC,8BAAkB,CAAC;AAE/C,IAAO,IAAM,GAAG,GAA2B;QACzC,cAAc,EAAE,KAAK;QACrB,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,KAAK;YAChB,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,QAAQ,GAA2B;QAC9C,cAAc,EAAE,UAAU;QAC1B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,UAAU;YACrB,eAAe,EAAE;gBACf,EAAE,EAAE;oBACF,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,IAAI;oBACpB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,YAAY;wBAClB,KAAK,EAAE;4BACL,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,GAAG,EAAE;oBACH,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,KAAK;qBACjB;iBACF;gBACD,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,aAAa,GAA2B;QACnD,cAAc,EAAE,eAAe;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,eAAe;YAC1B,eAAe,EAAE;gBACf,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,eAAe,EAAE;oBACf,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,iBAAiB;oBACjC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,kBAAkB,EAAE;oBAClB,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,oBAAoB;oBACpC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,eAAe,EAAE;oBACf,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,iBAAiB;oBACjC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,sBAAsB,EAAE;oBACtB,cAAc,EAAE,wBAAwB;oBACxC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,0BAA0B,EAAE;oBAC1B,cAAc,EAAE,4BAA4B;oBAC5C,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,iCAAiC,EAAE;oBACjC,cAAc,EAAE,mCAAmC;oBACnD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,GAAG,GAA2B;QACzC,cAAc,EAAE,KAAK;QACrB,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,KAAK;YAChB,eAAe,wBACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,eAAe;qBAC3B;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,OAAO,GAA2B;QAC7C,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,wBAAwB,EAAE;gBACxB,cAAc,EAAE,aAAa;gBAC7B,UAAU,EAAE,aAAa;aAC1B;YACD,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,SAAS;YACpB,eAAe,EAAE;gBACf,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,UAAU,GAA2B;QAChD,cAAc,EAAE,YAAY;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,YAAY;YACvB,eAAe,wBACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,SAAS;qBACrB;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,sBAAsB,GAA2B;QAC5D,cAAc,EAAE,wBAAwB;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,wBAAwB;YACnC,eAAe,EAAE;gBACf,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,kBAAkB,EAAE;oBAClB,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,oBAAoB;oBACpC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,YAAY,GAA2B;QAClD,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,wBAAwB,EAAE,OAAO,CAAC,IAAI,CAAC,wBAAwB;YAC/D,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,cAAc;YACzB,eAAe,wBACV,OAAO,CAAC,IAAI,CAAC,eAAe,KAC/B,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,wBAAwB;qBACpC;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,YAAY,GAA2B;QAClD,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,cAAc;YACzB,eAAe,EAAE;gBACf,EAAE,EAAE;oBACF,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,IAAI;oBACpB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,yBAAyB,GAA2B;QAC/D,cAAc,EAAE,2BAA2B;QAC3C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,2BAA2B;YACtC,eAAe,EAAE;gBACf,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,cAAc;6BAC1B;yBACF;qBACF;iBACF;gBACD,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,eAAe,GAA2B;QACrD,cAAc,EAAE,iBAAiB;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,wBAAwB,EAAE,OAAO,CAAC,IAAI,CAAC,wBAAwB;YAC/D,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,iBAAiB;YAC5B,eAAe,wBACV,OAAO,CAAC,IAAI,CAAC,eAAe,KAC/B,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,2BAA2B;qBACvC;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,sBAAsB,GAA2B;QAC5D,cAAc,EAAE,wBAAwB;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,wBAAwB;YACnC,eAAe,EAAE;gBACf,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,YAAY,GAA2B;QAClD,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,wBAAwB,EAAE,OAAO,CAAC,IAAI,CAAC,wBAAwB;YAC/D,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,cAAc;YACzB,eAAe,wBACV,OAAO,CAAC,IAAI,CAAC,eAAe,KAC/B,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,wBAAwB;qBACpC;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,wBAAwB,GAA2B;QAC9D,cAAc,EAAE,0BAA0B;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,0BAA0B;YACrC,eAAe,EAAE;gBACf,aAAa,EAAE;oBACb,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,cAAc,EAAE;oBACd,cAAc,EAAE,gBAAgB;oBAChC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,cAAc,GAA2B;QACpD,cAAc,EAAE,gBAAgB;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,wBAAwB,EAAE,OAAO,CAAC,IAAI,CAAC,wBAAwB;YAC/D,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,gBAAgB;YAC3B,eAAe,wBACV,OAAO,CAAC,IAAI,CAAC,eAAe,KAC/B,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,0BAA0B;qBACtC;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,sBAAsB,GAA2B;QAC5D,cAAc,EAAE,wBAAwB;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,wBAAwB;YACnC,eAAe,EAAE;gBACf,eAAe,EAAE;oBACf,cAAc,EAAE,iBAAiB;oBACjC,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,gBAAgB,EAAE;oBAChB,cAAc,EAAE,kBAAkB;oBAClC,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,WAAW,EAAE;oBACX,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,aAAa,EAAE;oBACb,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,mBAAmB,EAAE;oBACnB,cAAc,EAAE,qBAAqB;oBACrC,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,YAAY,EAAE;oBACZ,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,cAAc,EAAE;oBACd,cAAc,EAAE,gBAAgB;oBAChC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,YAAY,GAA2B;QAClD,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,wBAAwB,EAAE,OAAO,CAAC,IAAI,CAAC,wBAAwB;YAC/D,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,cAAc;YACzB,eAAe,wBACV,OAAO,CAAC,IAAI,CAAC,eAAe,KAC/B,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,wBAAwB;qBACpC;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,oBAAoB,GAA2B;QAC1D,cAAc,EAAE,sBAAsB;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,sBAAsB;YACjC,eAAe,EAAE;gBACf,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,MAAM,EAAE;oBACN,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,UAAU,GAA2B;QAChD,cAAc,EAAE,YAAY;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,wBAAwB,EAAE,OAAO,CAAC,IAAI,CAAC,wBAAwB;YAC/D,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,YAAY;YACvB,eAAe,wBACV,OAAO,CAAC,IAAI,CAAC,eAAe,KAC/B,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,sBAAsB;qBAClC;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,WAAW,GAA2B;QACjD,cAAc,EAAE,aAAa;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,aAAa;YACxB,eAAe,EAAE;gBACf,MAAM,EAAE;oBACN,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,GAAG,EAAE;oBACH,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,aAAa,EAAE;oBACb,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,wBAAwB,GAA2B;QAC9D,cAAc,EAAE,0BAA0B;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,0BAA0B;YACrC,eAAe,EAAE;gBACf,gBAAgB,EAAE;oBAChB,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,kBAAkB;oBAClC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,aAAa;6BACzB;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,cAAc,GAA2B;QACpD,cAAc,EAAE,gBAAgB;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,wBAAwB,EAAE,OAAO,CAAC,IAAI,CAAC,wBAAwB;YAC/D,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,gBAAgB;YAC3B,eAAe,wBACV,OAAO,CAAC,IAAI,CAAC,eAAe,KAC/B,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,0BAA0B;qBACtC;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,cAAc,GAA2B;QACpD,cAAc,EAAE,gBAAgB;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,gBAAgB;YAC3B,eAAe,EAAE;gBACf,MAAM,EAAE;oBACN,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,GAAG,EAAE;oBACH,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,mBAAmB,EAAE;oBACnB,cAAc,EAAE,qBAAqB;oBACrC,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,cAAc,EAAE;oBACd,cAAc,EAAE,gBAAgB;oBAChC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,QAAQ;6BACf;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,2BAA2B,GAA2B;QACjE,cAAc,EAAE,6BAA6B;QAC7C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,6BAA6B;YACxC,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,gBAAgB;6BAC5B;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,iBAAiB,GAA2B;QACvD,cAAc,EAAE,mBAAmB;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,wBAAwB,EAAE,OAAO,CAAC,IAAI,CAAC,wBAAwB;YAC/D,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,mBAAmB;YAC9B,eAAe,wBACV,OAAO,CAAC,IAAI,CAAC,eAAe,KAC/B,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,6BAA6B;qBACzC;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,yBAAyB,GAA2B;QAC/D,cAAc,EAAE,2BAA2B;QAC3C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,2BAA2B;YACtC,eAAe,EAAE;gBACf,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,eAAe,GAA2B;QACrD,cAAc,EAAE,iBAAiB;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,wBAAwB,EAAE,OAAO,CAAC,IAAI,CAAC,wBAAwB;YAC/D,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,iBAAiB;YAC5B,eAAe,wBACV,OAAO,CAAC,IAAI,CAAC,eAAe,KAC/B,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,2BAA2B;qBACvC;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,oBAAoB,GAA2B;QAC1D,cAAc,EAAE,sBAAsB;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,sBAAsB;YACjC,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,UAAU,EAAE;oBACV,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,UAAU,GAA2B;QAChD,cAAc,EAAE,YAAY;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,wBAAwB,EAAE,OAAO,CAAC,IAAI,CAAC,wBAAwB;YAC/D,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,YAAY;YACvB,eAAe,wBACV,OAAO,CAAC,IAAI,CAAC,eAAe,KAC/B,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,sBAAsB;qBAClC;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,sBAAsB,GAA2B;QAC5D,cAAc,EAAE,wBAAwB;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,wBAAwB;YACnC,eAAe,EAAE;gBACf,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,iBAAiB,EAAE;oBACjB,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,mBAAmB;oBACnC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,cAAc,EAAE;oBACd,cAAc,EAAE,gBAAgB;oBAChC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,cAAc,EAAE;oBACd,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,gBAAgB;oBAChC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,gBAAgB,EAAE;oBAChB,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,kBAAkB;oBAClC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,uBAAuB,EAAE;oBACvB,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,yBAAyB;oBACzC,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,aAAa,EAAE;oBACb,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,YAAY,GAA2B;QAClD,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,wBAAwB,EAAE,OAAO,CAAC,IAAI,CAAC,wBAAwB;YAC/D,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,cAAc;YACzB,eAAe,wBACV,OAAO,CAAC,IAAI,CAAC,eAAe,KAC/B,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,wBAAwB;qBACpC;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,gBAAgB,GAA2B;QACtD,cAAc,EAAE,kBAAkB;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,kBAAkB;YAC7B,eAAe,EAAE;gBACf,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,aAAa,EAAE;oBACb,cAAc,EAAE,eAAe;oBAC/B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,kBAAkB,EAAE;oBAClB,cAAc,EAAE,oBAAoB;oBACpC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,qBAAqB,GAA2B;QAC3D,cAAc,EAAE,uBAAuB;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,uBAAuB;YAClC,eAAe,EAAE;gBACf,iBAAiB,EAAE;oBACjB,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,mBAAmB;oBACnC,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,kBAAkB;6BAC9B;yBACF;qBACF;iBACF;gBACD,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,WAAW,GAA2B;QACjD,cAAc,EAAE,aAAa;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,wBAAwB,EAAE,OAAO,CAAC,IAAI,CAAC,wBAAwB;YAC/D,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,aAAa;YACxB,eAAe,wBACV,OAAO,CAAC,IAAI,CAAC,eAAe,KAC/B,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,uBAAuB;qBACnC;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,iCAAiC,GAA2B;QACvE,cAAc,EAAE,mCAAmC;QACnD,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,mCAAmC;YAC9C,eAAe,EAAE;gBACf,+BAA+B,EAAE;oBAC/B,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,iCAAiC;oBACjD,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,uBAAuB,EAAE;oBACvB,cAAc,EAAE,yBAAyB;oBACzC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,mBAAmB,EAAE;oBACnB,cAAc,EAAE,qBAAqB;oBACrC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,4BAA4B,EAAE;oBAC5B,cAAc,EAAE,8BAA8B;oBAC9C,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,uBAAuB,GAA2B;QAC7D,cAAc,EAAE,yBAAyB;QACzC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,wBAAwB,EAAE,OAAO,CAAC,IAAI,CAAC,wBAAwB;YAC/D,UAAU,EAAE,SAAS;YACrB,SAAS,EAAE,yBAAyB;YACpC,eAAe,wBACV,OAAO,CAAC,IAAI,CAAC,eAAe,KAC/B,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,mCAAmC;qBAC/C;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,QAAQ,GAA2B;QAC9C,cAAc,EAAE,UAAU;QAC1B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,UAAU;YACrB,eAAe,EAAE;gBACf,QAAQ,EAAE;oBACR,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,GAAG,EAAE;oBACH,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE;wBACJ,IAAI,EAAE,MAAM;wBACZ,aAAa,EAAE;4BACb,MAAM;4BACN,MAAM;yBACP;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,kBAAkB,GAA2B;QACxD,cAAc,EAAE,oBAAoB;QACpC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,oBAAoB;YAC/B,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,0BAA0B,GAA2B;QAChE,cAAc,EAAE,4BAA4B;QAC5C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,4BAA4B;YACvC,eAAe,EAAE;gBACf,GAAG,EAAE;oBACH,cAAc,EAAE,KAAK;oBACrB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,2BAA2B,GAA2B;QACjE,cAAc,EAAE,6BAA6B;QAC7C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,6BAA6B;YACxC,eAAe,EAAE;gBACf,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,YAAY,EAAE;oBACZ,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,MAAM,EAAE;oBACN,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,iBAAiB,EAAE;oBACjB,cAAc,EAAE,mBAAmB;oBACnC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,0BAA0B,EAAE;oBAC1B,cAAc,EAAE,4BAA4B;oBAC5C,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,4BAA4B;6BACxC;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,iBAAiB,GAA2B;QACvD,cAAc,EAAE,mBAAmB;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,mBAAmB;YAC9B,eAAe,wBACV,QAAQ,CAAC,IAAI,CAAC,eAAe,KAChC,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,6BAA6B;qBACzC;iBACF,GACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,wBAAwB,GAA2B;QAC9D,cAAc,EAAE,0BAA0B;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,0BAA0B;YACrC,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,yBAAyB,GAA2B;QAC/D,cAAc,EAAE,2BAA2B;QAC3C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,2BAA2B;YACtC,eAAe,EAAE;gBACf,EAAE,EAAE;oBACF,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,IAAI;oBACpB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,WAAW,EAAE;oBACX,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,mBAAmB,EAAE;oBACnB,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,qBAAqB;oBACrC,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,YAAY,EAAE;oBACZ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,cAAc;oBAC9B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,0BAA0B;6BACtC;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,eAAe,GAA2B;QACrD,cAAc,EAAE,iBAAiB;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,iBAAiB;YAC5B,eAAe,EAAE;gBACf,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,2BAA2B;qBACvC;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,2BAA2B,GAA2B;QACjE,cAAc,EAAE,6BAA6B;QAC7C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,6BAA6B;YACxC,eAAe,EAAE;gBACf,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,iBAAiB;6BAC7B;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,SAAS,GAA2B;QAC/C,cAAc,EAAE,WAAW;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,WAAW;YACtB,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,UAAU,GAA2B;QAChD,cAAc,EAAE,OAAO;QACvB,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,YAAY;YACvB,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,WAAW;qBACvB;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,oBAAoB,GAA2B;QAC1D,cAAc,EAAE,sBAAsB;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,sBAAsB;YACjC,eAAe,EAAE;gBACf,WAAW,EAAE;oBACX,cAAc,EAAE,aAAa;oBAC7B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,SAAS,EAAE;oBACT,cAAc,EAAE,WAAW;oBAC3B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,eAAe,GAA2B;QACrD,cAAc,EAAE,iBAAiB;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,iBAAiB;YAC5B,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,WAAW;wBACjB,SAAS,EAAE,sBAAsB;qBAClC;iBACF;gBACD,MAAM,EAAE;oBACN,cAAc,EAAE,QAAQ;oBACxB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,UAAU,EAAE;oBACV,cAAc,EAAE,YAAY;oBAC5B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,gCAAgC,GAA2B;QACtE,cAAc,EAAE,kCAAkC;QAClD,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,kCAAkC;YAC7C,eAAe,EAAE;gBACf,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,IAAI,EAAE;oBACJ,cAAc,EAAE,MAAM;oBACtB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,iCAAiC,GAA2B;QACvE,cAAc,EAAE,mCAAmC;QACnD,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,mCAAmC;YAC9C,eAAe,EAAE;gBACf,KAAK,EAAE;oBACL,cAAc,EAAE,OAAO;oBACvB,IAAI,EAAE;wBACJ,IAAI,EAAE,SAAS;qBAChB;iBACF;gBACD,OAAO,EAAE;oBACP,cAAc,EAAE,SAAS;oBACzB,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,eAAe,GAA2B;QACrD,cAAc,EAAE,iBAAiB;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,iBAAiB;YAC5B,eAAe,EAAE;gBACf,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,EAAE;oBAClB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,KAAK;6BACjB;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,mBAAmB,GAA2B;QACzD,cAAc,EAAE,qBAAqB;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,qBAAqB;YAChC,eAAe,EAAE;gBACf,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,EAAE;oBAClB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,YAAY;6BACxB;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,yBAAyB,GAA2B;QAC/D,cAAc,EAAE,2BAA2B;QAC3C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,2BAA2B;YACtC,eAAe,EAAE;gBACf,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,cAAc,EAAE,EAAE;oBAClB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,iBAAiB;6BAC7B;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,6BAA6B,GAA2B;QACnE,cAAc,EAAE,+BAA+B;QAC/C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;YACjB,SAAS,EAAE,+BAA+B;YAC1C,eAAe,EAAE;gBACf,QAAQ,EAAE;oBACR,cAAc,EAAE,UAAU;oBAC1B,IAAI,EAAE;wBACJ,IAAI,EAAE,QAAQ;qBACf;iBACF;gBACD,KAAK,EAAE;oBACL,QAAQ,EAAE,IAAI;oBACd,cAAc,EAAE,EAAE;oBAClB,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,OAAO,EAAE;4BACP,IAAI,EAAE;gCACJ,IAAI,EAAE,WAAW;gCACjB,SAAS,EAAE,mBAAmB;6BAC/B;yBACF;qBACF;iBACF;aACF;SACF;KACF,CAAC;AAEF,IAAO,IAAM,cAAc,GAAG;QAC5B,SAAS,EAAG,OAAO;QACnB,sBAAsB,EAAG,YAAY;QACrC,yBAAyB,EAAG,eAAe;QAC3C,sBAAsB,EAAG,YAAY;QACrC,wBAAwB,EAAG,cAAc;QACzC,sBAAsB,EAAG,YAAY;QACrC,oBAAoB,EAAG,UAAU;QACjC,wBAAwB,EAAG,cAAc;QACzC,2BAA2B,EAAG,iBAAiB;QAC/C,yBAAyB,EAAG,eAAe;QAC3C,oBAAoB,EAAG,UAAU;QACjC,sBAAsB,EAAG,YAAY;QACrC,qBAAqB,EAAG,WAAW;QACnC,iCAAiC,EAAG,uBAAuB;KAE5D,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IC3yDF;;;;;;OAMG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICNH;;;;;;;;;AAYA,IAAO,IAAM,cAAc,GAA8B;QACvD,aAAa,EAAE,gBAAgB;QAC/B,MAAM,EAAE;YACN,cAAc,EAAE,iBAAiB;YACjC,YAAY,EAAE,OAAO;YACrB,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,UAAU,GAAmC;QACxD,aAAa,EAAE,YAAY;QAC3B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,aAAa;YAC7B,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,YAAY,GAAiC;QACxD,aAAa,EAAE,aAAa;QAC5B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,aAAa;YAC7B,IAAI,EAAE;gBACJ,IAAI,EAAE,MAAM;gBACZ,aAAa,EAAE;oBACb,cAAc;oBACd,iBAAiB;oBACjB,cAAc;oBACd,YAAY;oBACZ,iBAAiB;oBACjB,cAAc;oBACd,gBAAgB;oBAChB,cAAc;oBACd,gBAAgB;oBAChB,mBAAmB;oBACnB,YAAY;oBACZ,aAAa;oBACb,yBAAyB;iBAC1B;aACF;SACF;KACF,CAAC;AACF,IAAO,IAAM,YAAY,GAAiC;QACxD,aAAa,EAAE,aAAa;QAC5B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,aAAa;YAC7B,WAAW,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC;gBACZ,OAAO,EAAE,8BAA8B;aACxC;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,YAAY,GAAiC;QACxD,aAAa,EAAE,aAAa;QAC5B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,aAAa;YAC7B,IAAI,EAAE;gBACJ,IAAI,EAAE,MAAM;gBACZ,aAAa,EAAE;oBACb,gBAAgB;oBAChB,mBAAmB;iBACpB;aACF;SACF;KACF,CAAC;AACF,IAAO,IAAM,cAAc,GAAiC;QAC1D,aAAa,EAAE,gBAAgB;QAC/B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,gBAAgB;YAChC,WAAW,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC;gBACZ,OAAO,EAAE,gCAAgC;aAC1C;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,YAAY,GAAiC;QACxD,aAAa,EAAE,cAAc;QAC7B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,UAAU;YAC1B,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;QACD,YAAY,EAAE,IAAI;KACnB,CAAC;AACF,IAAO,IAAM,iBAAiB,GAAiC;QAC7D,aAAa,EAAE,mBAAmB;QAClC,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,mBAAmB;YACnC,WAAW,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC;gBACZ,OAAO,EAAE,8BAA8B;aACxC;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,YAAY,GAAiC;QACxD,aAAa,EAAE,cAAc;QAC7B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,cAAc;YAC9B,WAAW,EAAE;gBACX,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC;gBACZ,OAAO,EAAE,8BAA8B;aACxC;YACD,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;AACF,IAAO,IAAM,cAAc,GAAiC;QAC1D,aAAa,EAAE,gBAAgB;QAC/B,MAAM,EAAE;YACN,QAAQ,EAAE,IAAI;YACd,cAAc,EAAE,gBAAgB;YAChC,IAAI,EAAE;gBACJ,IAAI,EAAE,QAAQ;aACf;SACF;KACF,CAAC;;ICvJF;;;;;;;;;IAgBA;AACA;;;;;QAOE,cAAY,MAA8B;YACxC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QA0BD,qBAAM,GAAN,UAAO,iBAAyB,EAAE,YAAoB,EAAE,UAAsB,EAAE,OAAwE,EAAE,QAA6C;YACrM,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,UAAU,YAAA;gBACV,OAAO,SAAA;aACR,EACD,mBAAmB,EACnB,QAAQ,CAAuC,CAAC;SACnD;QAuBD,qBAAM,GAAN,UAAO,iBAAyB,EAAE,YAAoB,EAAE,OAA8E,EAAE,QAA6C;YACnL,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACD,mBAAmB,EACnB,QAAQ,CAAuC,CAAC;SACnD;QAuBD,2BAAY,GAAZ,UAAa,iBAAyB,EAAE,YAAoB,EAAE,OAAkE,EAAE,QAAuC;YACvK,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACD,yBAAyB,EACzB,QAAQ,CAAC,CAAC;SACb;QAuBD,kBAAG,GAAH,UAAI,iBAAyB,EAAE,YAAoB,EAAE,OAAwE,EAAE,QAA6C;YAC1K,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACD,gBAAgB,EAChB,QAAQ,CAAoC,CAAC;SAChD;QAoBD,kCAAmB,GAAnB,UAAoB,iBAAyB,EAAE,OAAoF,EAAE,QAAyD;YAC5L,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,OAAO,SAAA;aACR,EACD,gCAAgC,EAChC,QAAQ,CAAoD,CAAC;SAChE;QAiBD,mBAAI,GAAJ,UAAK,OAAoF,EAAE,QAAyD;YAClJ,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,OAAO,SAAA;aACR,EACD,iBAAiB,EACjB,QAAQ,CAAqC,CAAC;SACjD;QAoBD,uCAAwB,GAAxB,UAAyB,UAAmD,EAAE,OAAsG,EAAE,QAA2E;YAC/P,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,UAAU,YAAA;gBACV,OAAO,SAAA;aACR,EACD,qCAAqC,EACrC,QAAQ,CAAyD,CAAC;SACrE;QAoBD,sCAAuB,GAAvB,UAAwB,YAAoB,EAAE,OAAoF,EAAE,QAAyD;YAC3L,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACD,oCAAoC,EACpC,QAAQ,CAAwD,CAAC;SACpE;QAoBD,uBAAQ,GAAR,UAAS,YAAoB,EAAE,OAAoF,EAAE,QAAyD;YAC5K,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACD,qBAAqB,EACrB,QAAQ,CAAyC,CAAC;SACrD;QACH,WAAC;IAAD,CAAC,IAAA;IAED;IACA,IAAM,UAAU,GAAG,IAAIC,iBAAiB,CAAC,OAAO,CAAC,CAAC;IAClD,IAAM,mBAAmB,GAAyB;QAChD,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,6HAA6H;QACnI,aAAa,EAAE;YACbC,iBAA4B;YAC5BC,YAAuB;YACvBC,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE,YAAY;YAC3B,MAAM,wBACDC,GAAW,KACd,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEA,GAAW;aACxB;YACD,GAAG,EAAE;gBACH,UAAU,EAAEA,GAAW;aACxB;YACD,OAAO,EAAE;gBACP,UAAU,EAAEC,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,mBAAmB,GAAyB;QAChD,UAAU,EAAE,OAAO;QACnB,IAAI,EAAE,6HAA6H;QACnI,aAAa,EAAE;YACbN,iBAA4B;YAC5BC,YAAuB;YACvBC,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE;gBACb,QAAQ,EAAE;oBACR,SAAS;oBACT,UAAU;iBACX;gBACD,IAAI,EAAE;oBACJ,SAAS;oBACT,MAAM;iBACP;gBACD,GAAG,EAAE;oBACH,SAAS;oBACT,KAAK;iBACN;gBACD,IAAI,EAAE;oBACJ,SAAS;oBACT,MAAM;iBACP;gBACD,IAAI,EAAE;oBACJ,SAAS;oBACT,MAAM;iBACP;gBACD,UAAU,EAAE;oBACV,SAAS;oBACT,YAAY;iBACb;aACF;YACD,MAAM,wBACDC,GAAW,KACd,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEA,GAAW;aACxB;YACD,GAAG,EAAE;gBACH,UAAU,EAAEA,GAAW;aACxB;YACD,OAAO,EAAE;gBACP,UAAU,EAAEC,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,yBAAyB,GAAyB;QACtD,UAAU,EAAE,QAAQ;QACpB,IAAI,EAAE,6HAA6H;QACnI,aAAa,EAAE;YACbN,iBAA4B;YAC5BC,YAAuB;YACvBC,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,EAAE;YACP,OAAO,EAAE;gBACP,UAAU,EAAEE,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,gBAAgB,GAAyB;QAC7C,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,6HAA6H;QACnI,aAAa,EAAE;YACbN,iBAA4B;YAC5BC,YAAuB;YACvBC,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEC,GAAW;aACxB;YACD,OAAO,EAAE;gBACP,UAAU,EAAEC,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,gCAAgC,GAAyB;QAC7D,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,8GAA8G;QACpH,aAAa,EAAE;YACbN,iBAA4B;YAC5BE,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEG,eAAuB;aACpC;YACD,OAAO,EAAE;gBACP,UAAU,EAAED,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,iBAAiB,GAAyB;QAC9C,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,2EAA2E;QACjF,aAAa,EAAE;YACbJ,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEG,eAAuB;aACpC;YACD,OAAO,EAAE;gBACP,UAAU,EAAED,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,qCAAqC,GAAyB;QAClE,UAAU,EAAE,MAAM;QAClB,IAAI,EAAE,sDAAsD;QAC5D,eAAe,EAAE;YACfH,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE,YAAY;YAC3B,MAAM,wBACDI,gCAAwC,KAC3C,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEC,iCAAyC;aACtD;YACD,OAAO,EAAE;gBACP,UAAU,EAAEH,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,oCAAoC,GAAyB;QACjE,UAAU,EAAE,KAAK;QACjB,OAAO,EAAE,8BAA8B;QACvC,IAAI,EAAE,YAAY;QAClB,aAAa,EAAE;YACbI,YAAuB;SACxB;QACD,gBAAgB,EAAE;YAChBN,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEG,eAAuB;aACpC;YACD,OAAO,EAAE;gBACP,UAAU,EAAED,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;IAEF,IAAM,qBAAqB,GAAyB;QAClD,UAAU,EAAE,KAAK;QACjB,OAAO,EAAE,8BAA8B;QACvC,IAAI,EAAE,YAAY;QAClB,aAAa,EAAE;YACbI,YAAuB;SACxB;QACD,gBAAgB,EAAE;YAChBN,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEG,eAAuB;aACpC;YACD,OAAO,EAAE;gBACP,UAAU,EAAED,UAAkB;aAC/B;SACF;QACD,UAAU,YAAA;KACX,CAAC;;IC7iBF;;;;;;OAMG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICNH;;;;;;;;;IAgBA;AACA;;;;;QAOE,kBAAY,MAA8B;YACxC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAsCD,yBAAM,GAAN,UAAO,iBAAyB,EAAE,YAAoB,EAAE,WAA+B,EAAE,UAA6B,EAAE,OAA+E,EAAE,QAAoD;YAC3P,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,WAAW,aAAA;gBACX,UAAU,YAAA;gBACV,OAAO,SAAA;aACR,EACDK,qBAAmB,EACnB,QAAQ,CAA2C,CAAC;SACvD;QAmCD,yBAAM,GAAN,UAAO,iBAAyB,EAAE,YAAoB,EAAE,WAA+B,EAAE,OAAyF,EAAE,QAAoD;YACtO,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,WAAW,aAAA;gBACX,OAAO,SAAA;aACR,EACDC,qBAAmB,EACnB,QAAQ,CAA2C,CAAC;SACvD;QA0BD,+BAAY,GAAZ,UAAa,iBAAyB,EAAE,YAAoB,EAAE,WAAmB,EAAE,OAAkE,EAAE,QAAuC;YAC5L,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,WAAW,aAAA;gBACX,OAAO,SAAA;aACR,EACDC,2BAAyB,EACzB,QAAQ,CAAC,CAAC;SACb;QA0BD,sBAAG,GAAH,UAAI,iBAAyB,EAAE,YAAoB,EAAE,WAAmB,EAAE,OAA+E,EAAE,QAAoD;YAC7M,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,WAAW,aAAA;gBACX,OAAO,SAAA;aACR,EACDC,kBAAgB,EAChB,QAAQ,CAAwC,CAAC;SACpD;QAmCD,+BAAY,GAAZ,UAAa,iBAAyB,EAAE,YAAoB,EAAE,WAA+B,EAAE,OAA+E,EAAE,QAAoD;YAClO,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,WAAW,aAAA;gBACX,OAAO,SAAA;aACR,EACD,yBAAyB,EACzB,QAAQ,CAAiD,CAAC;SAC7D;QAuBD,sCAAmB,GAAnB,UAAoB,iBAAyB,EAAE,YAAoB,EAAE,OAAwF,EAAE,QAA6D;YAC1N,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACDC,kCAAgC,EAChC,QAAQ,CAAwD,CAAC;SACpE;QAoBD,0CAAuB,GAAvB,UAAwB,YAAoB,EAAE,OAAwF,EAAE,QAA6D;YACnM,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACDC,sCAAoC,EACpC,QAAQ,CAA4D,CAAC;SACxE;QACH,eAAC;IAAD,CAAC,IAAA;IAED;IACA,IAAMC,YAAU,GAAG,IAAIlB,iBAAiB,CAACmB,SAAO,CAAC,CAAC;IAClD,IAAMP,qBAAmB,GAAyB;QAChD,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,oJAAoJ;QAC1J,aAAa,EAAE;YACbX,iBAA4B;YAC5BC,YAAuB;YACvBkB,YAAuB;YACvBjB,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE,YAAY;YAC3B,MAAM,wBACDgB,UAAkB,KACrB,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEA,UAAkB;aAC/B;YACD,GAAG,EAAE;gBACH,UAAU,EAAEA,UAAkB;aAC/B;YACD,OAAO,EAAE;gBACP,UAAU,EAAEd,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMM,qBAAmB,GAAyB;QAChD,UAAU,EAAE,OAAO;QACnB,IAAI,EAAE,oJAAoJ;QAC1J,aAAa,EAAE;YACbZ,iBAA4B;YAC5BC,YAAuB;YACvBkB,YAAuB;YACvBjB,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE;gBACb,QAAQ,EAAE;oBACR,SAAS;oBACT,UAAU;iBACX;gBACD,IAAI,EAAE;oBACJ,SAAS;oBACT,MAAM;iBACP;gBACD,GAAG,EAAE;oBACH,SAAS;oBACT,KAAK;iBACN;gBACD,IAAI,EAAE;oBACJ,SAAS;oBACT,MAAM;iBACP;gBACD,IAAI,EAAE;oBACJ,SAAS;oBACT,MAAM;iBACP;gBACD,UAAU,EAAE;oBACV,SAAS;oBACT,YAAY;iBACb;aACF;YACD,MAAM,wBACDgB,UAAkB,KACrB,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEA,UAAkB;aAC/B;YACD,GAAG,EAAE;gBACH,UAAU,EAAEA,UAAkB;aAC/B;YACD,OAAO,EAAE;gBACP,UAAU,EAAEd,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMO,2BAAyB,GAAyB;QACtD,UAAU,EAAE,QAAQ;QACpB,IAAI,EAAE,oJAAoJ;QAC1J,aAAa,EAAE;YACbb,iBAA4B;YAC5BC,YAAuB;YACvBoB,YAAuB;YACvBnB,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,EAAE;YACP,OAAO,EAAE;gBACP,UAAU,EAAEE,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMQ,kBAAgB,GAAyB;QAC7C,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,oJAAoJ;QAC1J,aAAa,EAAE;YACbd,iBAA4B;YAC5BC,YAAuB;YACvBoB,YAAuB;YACvBnB,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEgB,UAAkB;aAC/B;YACD,OAAO,EAAE;gBACP,UAAU,EAAEd,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAM,yBAAyB,GAAyB;QACtD,UAAU,EAAE,MAAM;QAClB,IAAI,EAAE,wKAAwK;QAC9K,aAAa,EAAE;YACbN,iBAA4B;YAC5BC,YAAuB;YACvBkB,YAAuB;YACvBjB,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEgB,UAAkB;aAC/B;YACD,OAAO,EAAE;gBACP,UAAU,EAAEd,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMS,kCAAgC,GAAyB;QAC7D,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,sIAAsI;QAC5I,aAAa,EAAE;YACbf,iBAA4B;YAC5BC,YAAuB;YACvBC,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEkB,mBAA2B;aACxC;YACD,OAAO,EAAE;gBACP,UAAU,EAAEhB,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMU,sCAAoC,GAAyB;QACjE,UAAU,EAAE,KAAK;QACjB,OAAO,EAAE,8BAA8B;QACvC,IAAI,EAAE,YAAY;QAClB,aAAa,EAAE;YACbN,YAAuB;SACxB;QACD,gBAAgB,EAAE;YAChBN,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEkB,mBAA2B;aACxC;YACD,OAAO,EAAE;gBACP,UAAU,EAAEhB,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;;ICxgBF;;;;;;OAMG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICNH;;;;;;;;;IAgBA;AACA;;;;;QAOE,oBAAY,MAA8B;YACxC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAiCD,mCAAc,GAAd,UAAe,iBAAyB,EAAE,YAAoB,EAAE,WAA6C,EAAE,UAA2B,EAAE,OAA+E,EAAE,QAAoD;YAC/Q,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,WAAW,aAAA;gBACX,UAAU,YAAA;gBACV,OAAO,SAAA;aACR,EACD,2BAA2B,EAC3B,QAAQ,CAAqD,CAAC;SACjE;QACH,iBAAC;IAAD,CAAC,IAAA;IAED;IACA,IAAMW,YAAU,GAAG,IAAIlB,iBAAiB,CAACmB,SAAO,CAAC,CAAC;IAClD,IAAM,2BAA2B,GAAyB;QACxD,UAAU,EAAE,MAAM;QAClB,IAAI,EAAE,mKAAmK;QACzK,aAAa,EAAE;YACblB,iBAA4B;YAC5BC,YAAuB;YACvBC,cAAyB;YACzBqB,YAAuB;SACxB;QACD,eAAe,EAAE;YACfpB,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE,YAAY;YAC3B,MAAM,wBACDoB,QAAgB,KACnB,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEJ,UAAkB;aAC/B;YACD,OAAO,EAAE;gBACP,UAAU,EAAEd,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;;IC1GF;;;;;;OAMG;;;;;;;;;;;ICNH;;;;;;;;;AAUA,IAMA;AACA;;;;;QAOE,oBAAY,MAA8B;YACxC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAiBD,yBAAI,GAAJ,UAAK,OAA8F,EAAE,QAAmE;YACtK,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,OAAO,SAAA;aACR,EACDmB,mBAAiB,EACjB,QAAQ,CAA2C,CAAC;SACvD;QAoBD,6BAAQ,GAAR,UAAS,YAAoB,EAAE,OAA8F,EAAE,QAAmE;YAChM,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACDC,uBAAqB,EACrB,QAAQ,CAA+C,CAAC;SAC3D;QACH,iBAAC;IAAD,CAAC,IAAA;IAED;IACA,IAAMT,YAAU,GAAG,IAAIlB,iBAAiB,CAACmB,SAAO,CAAC,CAAC;IAClD,IAAMO,mBAAiB,GAAyB;QAC9C,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,2CAA2C;QACjD,eAAe,EAAE;YACftB,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEuB,yBAAiC;aAC9C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEC,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMF,uBAAqB,GAAyB;QAClD,UAAU,EAAE,KAAK;QACjB,OAAO,EAAE,8BAA8B;QACvC,IAAI,EAAE,YAAY;QAClB,aAAa,EAAE;YACbhB,YAAuB;SACxB;QACD,gBAAgB,EAAE;YAChBN,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEuB,yBAAiC;aAC9C;YACD,OAAO,EAAE;gBACP,UAAU,EAAEC,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;;IC1HF;;;;;;OAMG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICNH;;;;;;;;;IAgBA;AACA;;;;;QAOE,uBAAY,MAA8B;YACxC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;SACtB;QAiBD,4CAAoB,GAApB,UAAqB,OAAgG,EAAE,QAAqE;YAC1L,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,OAAO,SAAA;aACR,EACD,iCAAiC,EACjC,QAAQ,CAA8D,CAAC;SAC1E;QA0BD,uCAAe,GAAf,UAAgB,iBAAyB,EAAE,YAAoB,EAAE,cAAsB,EAAE,OAAsF,EAAE,QAA2D;YAC1O,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,cAAc,gBAAA;gBACd,OAAO,SAAA;aACR,EACD,4BAA4B,EAC5B,QAAQ,CAAyD,CAAC;SACrE;QA6BD,8BAAM,GAAN,UAAO,iBAAyB,EAAE,YAAoB,EAAE,cAAsB,EAAE,UAAoC,EAAE,OAAsF,EAAE,QAA2D;YACvQ,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,cAAc,gBAAA;gBACd,UAAU,YAAA;gBACV,OAAO,SAAA;aACR,EACDjB,qBAAmB,EACnB,QAAQ,CAAgD,CAAC;SAC5D;QA6BD,8BAAM,GAAN,UAAO,iBAAyB,EAAE,YAAoB,EAAE,cAAsB,EAAE,UAAoC,EAAE,OAAsF,EAAE,QAA2D;YACvQ,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,cAAc,gBAAA;gBACd,UAAU,YAAA;gBACV,OAAO,SAAA;aACR,EACDC,qBAAmB,EACnB,QAAQ,CAAgD,CAAC;SAC5D;QA0BD,2BAAG,GAAH,UAAI,iBAAyB,EAAE,YAAoB,EAAE,cAAsB,EAAE,OAAsF,EAAE,QAA2D;YAC9N,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,cAAc,gBAAA;gBACd,OAAO,SAAA;aACR,EACDE,kBAAgB,EAChB,QAAQ,CAA6C,CAAC;SACzD;QA0BD,oCAAY,GAAZ,UAAa,iBAAyB,EAAE,YAAoB,EAAE,cAAsB,EAAE,OAAkE,EAAE,QAAuC;YAC/L,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,cAAc,gBAAA;gBACd,OAAO,SAAA;aACR,EACDD,2BAAyB,EACzB,QAAQ,CAAC,CAAC;SACb;QAuBD,wCAAgB,GAAhB,UAAiB,iBAAyB,EAAE,YAAoB,EAAE,OAAkG,EAAE,QAAuE;YAC3O,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,iBAAiB,mBAAA;gBACjB,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACD,6BAA6B,EAC7B,QAAQ,CAA0D,CAAC;SACtE;QAoBD,4CAAoB,GAApB,UAAqB,YAAoB,EAAE,OAAkG,EAAE,QAAuE;YACpN,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;gBACE,YAAY,cAAA;gBACZ,OAAO,SAAA;aACR,EACD,iCAAiC,EACjC,QAAQ,CAA8D,CAAC;SAC1E;QACH,oBAAC;IAAD,CAAC,IAAA;IAED;IACA,IAAMI,YAAU,GAAG,IAAIlB,iBAAiB,CAACmB,SAAO,CAAC,CAAC;IAClD,IAAM,iCAAiC,GAAyB;QAC9D,UAAU,EAAE,MAAM;QAClB,IAAI,EAAE,wFAAwF;QAC9F,aAAa,EAAE;YACbhB,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEyB,2BAAmC;aAChD;YACD,OAAO,EAAE;gBACP,UAAU,EAAEvB,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAM,4BAA4B,GAAyB;QACzD,UAAU,EAAE,MAAM;QAClB,IAAI,EAAE,0KAA0K;QAChL,aAAa,EAAE;YACbN,iBAA4B;YAC5BC,YAAuB;YACvB6B,cAAyB;YACzB5B,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAE2B,iBAAyB;aACtC;YACD,OAAO,EAAE;gBACP,UAAU,EAAEzB,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMK,qBAAmB,GAAyB;QAChD,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,0JAA0J;QAChK,aAAa,EAAE;YACbX,iBAA4B;YAC5BC,YAAuB;YACvB6B,cAAyB;YACzB5B,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE,YAAY;YAC3B,MAAM,wBACD2B,iBAAyB,KAC5B,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEA,iBAAyB;aACtC;YACD,GAAG,EAAE;gBACH,UAAU,EAAEA,iBAAyB;aACtC;YACD,OAAO,EAAE;gBACP,UAAU,EAAEzB,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMM,qBAAmB,GAAyB;QAChD,UAAU,EAAE,OAAO;QACnB,IAAI,EAAE,0JAA0J;QAChK,aAAa,EAAE;YACbZ,iBAA4B;YAC5BC,YAAuB;YACvB6B,cAAyB;YACzB5B,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,WAAW,EAAE;YACX,aAAa,EAAE,YAAY;YAC3B,MAAM,wBACD2B,iBAAyB,KAC5B,QAAQ,EAAE,IAAI,GACf;SACF;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAEA,iBAAyB;aACtC;YACD,GAAG,EAAE;gBACH,UAAU,EAAEA,iBAAyB;aACtC;YACD,OAAO,EAAE;gBACP,UAAU,EAAEzB,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMQ,kBAAgB,GAAyB;QAC7C,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,0JAA0J;QAChK,aAAa,EAAE;YACbd,iBAA4B;YAC5BC,YAAuB;YACvB6B,cAAyB;YACzB5B,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAE2B,iBAAyB;aACtC;YACD,OAAO,EAAE;gBACP,UAAU,EAAEzB,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAMO,2BAAyB,GAAyB;QACtD,UAAU,EAAE,QAAQ;QACpB,IAAI,EAAE,0JAA0J;QAChK,aAAa,EAAE;YACbb,iBAA4B;YAC5BC,YAAuB;YACvB6B,cAAyB;YACzB5B,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE,EAAE;YACP,GAAG,EAAE,EAAE;YACP,OAAO,EAAE;gBACP,UAAU,EAAEE,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAM,6BAA6B,GAAyB;QAC1D,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,yIAAyI;QAC/I,aAAa,EAAE;YACbN,iBAA4B;YAC5BC,YAAuB;YACvBC,cAAyB;SAC1B;QACD,eAAe,EAAE;YACfC,UAAqB;SACtB;QACD,gBAAgB,EAAE;YAChBC,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAE4B,6BAAqC;aAClD;YACD,OAAO,EAAE;gBACP,UAAU,EAAE1B,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;IAEF,IAAM,iCAAiC,GAAyB;QAC9D,UAAU,EAAE,KAAK;QACjB,OAAO,EAAE,8BAA8B;QACvC,IAAI,EAAE,YAAY;QAClB,aAAa,EAAE;YACbI,YAAuB;SACxB;QACD,gBAAgB,EAAE;YAChBN,cAAyB;SAC1B;QACD,SAAS,EAAE;YACT,GAAG,EAAE;gBACH,UAAU,EAAE4B,6BAAqC;aAClD;YACD,OAAO,EAAE;gBACP,UAAU,EAAE1B,UAAkB;aAC/B;SACF;QACD,UAAU,cAAA;KACX,CAAC;;ICvgBF;;;;;;;;;IAeA,IAAM,WAAW,GAAG,uBAAuB,CAAC;IAC5C,IAAM,cAAc,GAAG,OAAO,CAAC;AAE/B;QAA4C,0CAA8B;;;;;;;;;;;;QAgBxE,gCAAY,WAA8D,EAAE,cAAsB,EAAE,OAAuC;YAA3I,iBAgCC;YA/BC,IAAI,WAAW,IAAI,SAAS,EAAE;gBAC5B,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;aACpD;YACD,IAAI,cAAc,IAAI,SAAS,EAAE;gBAC/B,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;aACvD;YAED,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO,GAAG,EAAE,CAAC;aACd;YACD,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBACtB,IAAM,gBAAgB,GAAG2B,oCAAoC,EAAE,CAAC;gBAChE,OAAO,CAAC,SAAS,GAAM,WAAW,SAAI,cAAc,SAAI,gBAAkB,CAAC;aAC5E;YAED,QAAA,kBAAM,WAAW,EAAE,OAAO,CAAC,SAAC;YAE5B,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC;YAC/B,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC;YAC9B,KAAI,CAAC,gCAAgC,GAAG,EAAE,CAAC;YAC3C,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,KAAI,CAAC,OAAO,IAAI,8BAA8B,CAAC;YACjF,KAAI,CAAC,kBAAkB,GAAG,iCAAiC,CAAC;YAC5D,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;YAErC,IAAI,OAAO,CAAC,cAAc,KAAK,IAAI,IAAI,OAAO,CAAC,cAAc,KAAK,SAAS,EAAE;gBAC3E,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;aAC9C;YACD,IAAI,OAAO,CAAC,gCAAgC,KAAK,IAAI,IAAI,OAAO,CAAC,gCAAgC,KAAK,SAAS,EAAE;gBAC/G,KAAI,CAAC,gCAAgC,GAAG,OAAO,CAAC,gCAAgC,CAAC;aAClF;;SACF;QACH,6BAAC;IAAD,CAAC,CAjD2CC,8BAA8B;;IClB1E;;;;;;;;;;QAkB8B,mCAAsB;;;;;;;;;;;;QAmBlD,yBAAY,WAA8D,EAAE,cAAsB,EAAE,OAAuC;YAA3I,YACE,kBAAM,WAAW,EAAE,cAAc,EAAE,OAAO,CAAC,SAM5C;YALC,KAAI,CAAC,IAAI,GAAG,IAAIC,IAAe,CAAC,KAAI,CAAC,CAAC;YACtC,KAAI,CAAC,QAAQ,GAAG,IAAIC,QAAmB,CAAC,KAAI,CAAC,CAAC;YAC9C,KAAI,CAAC,UAAU,GAAG,IAAIC,UAAqB,CAAC,KAAI,CAAC,CAAC;YAClD,KAAI,CAAC,UAAU,GAAG,IAAIC,UAAqB,CAAC,KAAI,CAAC,CAAC;YAClD,KAAI,CAAC,aAAa,GAAG,IAAIC,aAAwB,CAAC,KAAI,CAAC,CAAC;;SACzD;QACH,sBAAC;IAAD,CA3BA,CAA8B,sBAAsB;;;;;;;;;;;;;;;;;;;;"}