import { QTreeNode, Question, SingleSelectQuestion, StaticOptions, MultiSelectQuestion } from "./question";
import { FxError } from "../error";
import { Inputs, Void } from "../types";
import { InputResult, UserInteraction } from "./ui";
import { Result } from "neverthrow";
import { TelemetryReporter } from "../utils/telemetry";
export declare function isAutoSkipSelect(q: Question): boolean;
export declare function loadOptions(q: Question, inputs: Inputs): Promise<Result<{
    autoSkip: boolean;
    options?: StaticOptions;
}, FxError>>;
export declare function getSingleOption(q: SingleSelectQuestion | MultiSelectQuestion, option?: StaticOptions): any;
export declare function getCallFuncValue(inputs: Inputs, raw?: unknown): Promise<unknown>;
export declare function traverse(root: QTreeNode, inputs: Inputs, ui: UserInteraction, telemetryReporter?: TelemetryReporter, visitor?: (question: Question, ui: UserInteraction, inputs: Inputs, step?: number | undefined, totalSteps?: number | undefined) => Promise<Result<InputResult<any>, FxError>>): Promise<Result<Void, FxError>>;
//# sourceMappingURL=visitor.d.ts.map