const teamsfxSdk = require("@microsoft/teamsfx");

// A custom authProvider implements the `AuthProvider` interface.
// This sample authProvider implementation will set a custom property in the request header
class CustomAuthProvider {
  customProperty;
  customValue;

  constructor(customProperty, customValue) {
    this.customProperty = customProperty;
    this.customValue = customValue;
  }

  // Replace the sample code with your own logic.
  AddAuthenticationInfo = async (config) => {
    if (!config.headers) {
      config.headers = {};
    }
    config.headers[this.customProperty] = this.customValue;
    return config;
  };
}

// Load application configuration
const teamsFx = new teamsfxSdk.TeamsFx();

const authProvider = new CustomAuthProvider(
  // You can also add configuration to the file `.env.teamsfx.local` and use `process.env.{setting_name}` to read the configuration. For example:
  //  process.env.TEAMSFX_API_{{capitalName}}_CUSTOM_PROPERTY,
  //  process.env.TEAMSFX_API_{{capitalName}}_CUSTOM_VALUE
  "customPropery",
  "customValue"
);
// Initialize a new axios instance to call {{config.APIName}}
const {{config.APIName}}Client = teamsfxSdk.createApiClient(
  process.env.TEAMSFX_API_{{capitalName}}_ENDPOINT,
  authProvider
);
module.exports.{{config.APIName}}Client = {{config.APIName}}Client;
