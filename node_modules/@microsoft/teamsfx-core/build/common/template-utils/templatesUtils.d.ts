/// <reference types="node" />
import AdmZip from "adm-zip";
import { AxiosResponse, CancelToken } from "axios";
export declare const tagListUrl: string;
export declare const templateFileExt = ".tpl";
export declare function sendRequestWithRetry<T>(requestFn: () => Promise<AxiosResponse<T>>, tryLimits: number): Promise<AxiosResponse<T>>;
export declare function sendRequestWithTimeout<T>(requestFn: (cancelToken: CancelToken) => Promise<AxiosResponse<T>>, timeoutInMs: number, tryLimits?: number): Promise<AxiosResponse<T>>;
export declare function fetchTemplateTagList(url: string, tryLimits: number, timeoutInMs: number): Promise<string>;
export declare function fetchTemplateUrl(group: string, language: string, scenario: string, tryLimits: number, timeoutInMs: number): Promise<string>;
export declare function fetchZipFromUrl(url: string, tryLimits: number, timeoutInMs: number): Promise<AdmZip>;
export declare function unzip(zip: AdmZip, dstPath: string, nameReplaceFn?: (filePath: string, data: Buffer) => string, dataReplaceFn?: (filePath: string, data: Buffer) => Buffer | string, filesInAppendMode?: string[]): Promise<void>;
export declare function renderTemplateContent(filePath: string, data: Buffer, variables: {
    [key: string]: string;
}): string | Buffer;
//# sourceMappingURL=templatesUtils.d.ts.map