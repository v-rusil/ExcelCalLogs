"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.templateURL = exports.selectTag = exports.betaVersion = exports.alphaVersion = exports.tagListURL = exports.preRelease = exports.tagPrefix = exports.templatesVersion = void 0;
const tslib_1 = require("tslib");
const semver_1 = tslib_1.__importDefault(require("semver"));
const templates_config_json_1 = tslib_1.__importDefault(require("../templates-config.json"));
exports.templatesVersion = templates_config_json_1.default.version;
exports.tagPrefix = templates_config_json_1.default.tagPrefix;
exports.preRelease = process.env.TEAMSFX_TEMPLATE_PRERELEASE || "";
exports.tagListURL = templates_config_json_1.default.tagListURL;
exports.alphaVersion = "templates-0.0.0-alpha";
exports.betaVersion = "templates-0.0.0-beta";
function selectTag(tags) {
    if (exports.preRelease === "alpha") {
        return exports.alphaVersion;
    }
    if (exports.preRelease === "beta") {
        return exports.betaVersion;
    }
    const versionPattern = exports.preRelease ? `0.0.0-${exports.preRelease}` : exports.templatesVersion;
    const versionList = tags.map((tag) => tag.replace(exports.tagPrefix, ""));
    const selectedVersion = semver_1.default.maxSatisfying(versionList, versionPattern);
    return selectedVersion ? exports.tagPrefix + selectedVersion : undefined;
}
exports.selectTag = selectTag;
const templateURL = (tag, templateName) => `${templates_config_json_1.default.templateDownloadBaseURL}/${tag}/${templateName}.zip`;
exports.templateURL = templateURL;
//# sourceMappingURL=templates.js.map