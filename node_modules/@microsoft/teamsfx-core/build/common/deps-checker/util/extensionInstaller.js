"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.installExtension = void 0;
const depsError_1 = require("../depsError");
const constant_1 = require("../constant");
const cpUtils_1 = require("./cpUtils");
const defaultOutputPath = "bin";
const defaultCsprojPath = "extensions.csproj";
async function installExtension(backendRoot, dotnetCommand, logger, csprojPath = defaultCsprojPath, outputPath = defaultOutputPath) {
    try {
        if (!outputPath) {
            outputPath = defaultOutputPath;
        }
        await checkCommand(dotnetCommand, logger);
        const result = await cpUtils_1.cpUtils.tryExecuteCommand(backendRoot, logger, { shell: false }, dotnetCommand, "build", csprojPath, "-o", outputPath, "--ignore-failed-sources");
        if (result.code !== 0) {
            throw new Error(`Failed to run "${dotnetCommand} build" command. output = ${result.cmdOutput}, err = ${result.cmdOutputIncludingStderr}`);
        }
    }
    catch (error) {
        await logger.printDetailLog();
        await logger.error(`Failed to run Azure Functions binding extension install: error = '${error}'`);
        if (error.message.includes("NETSDK1045")) {
            // refer to https://docs.microsoft.com/en-us/dotnet/core/tools/sdk-errors/netsdk1045
            throw new depsError_1.BackendExtensionsInstallError(`NETSDK1045: The current .NET SDK does not support 'newer version' as a target`, constant_1.dotnetNotSupportTargetVersionHelpLink);
        }
        if (error instanceof depsError_1.BackendExtensionsInstallError) {
            throw error;
        }
        else {
            throw new depsError_1.BackendExtensionsInstallError(`Failed to run Azure Functions binding extension install: error = '${error}'`, constant_1.defaultHelpLink);
        }
    }
    finally {
        logger.cleanup();
    }
}
exports.installExtension = installExtension;
async function checkCommand(command, logger) {
    if (command === "") {
        await logger.error(`Failed to run Azure Functions binding extension install, .NET SDK executable not found`);
        throw new depsError_1.BackendExtensionsInstallError("Failed to run Azure Functions binding extension install, .NET SDK executable not found", constant_1.defaultHelpLink);
    }
}
//# sourceMappingURL=extensionInstaller.js.map