"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.TelemetryMessurement = exports.TelemetryProperties = exports.TelemtryMessages = exports.DepsCheckerEvent = void 0;
var DepsCheckerEvent;
(function (DepsCheckerEvent) {
    DepsCheckerEvent["clickLearnMore"] = "env-checker-click-learn-more";
    DepsCheckerEvent["clickCancel"] = "env-checker-click-cancel";
    DepsCheckerEvent["nodeVersion"] = "node-version";
    DepsCheckerEvent["nodeCheckSkipped"] = "node-check-skipped";
    DepsCheckerEvent["nodeNotFound"] = "node-not-found";
    DepsCheckerEvent["nodeNotSupportedForAzure"] = "node-not-supported-for-azure";
    DepsCheckerEvent["nodeNotSupportedForSPFx"] = "node-not-supported-for-spfx";
    DepsCheckerEvent["nodeNotSupportedForProject"] = "node-not-supported-for-project";
    DepsCheckerEvent["nodeNotLts"] = "node-not-lts";
    DepsCheckerEvent["npmNotFound"] = "npm-not-found";
    DepsCheckerEvent["npmAlreadyInstalled"] = "npm-already-installed";
    DepsCheckerEvent["funcCheckSkipped"] = "func-check-skipped";
    DepsCheckerEvent["funcAlreadyInstalled"] = "func-already-installed";
    DepsCheckerEvent["funcInstallCompleted"] = "func-install-completed";
    DepsCheckerEvent["funcInstallError"] = "func-install-error";
    DepsCheckerEvent["funcInstallScriptCompleted"] = "func-install-script-completed";
    DepsCheckerEvent["funcInstallScriptError"] = "func-install-script-error";
    DepsCheckerEvent["funcValidationError"] = "func-validation-error";
    DepsCheckerEvent["dotnetCheckSkipped"] = "dotnet-check-skipped";
    DepsCheckerEvent["dotnetAlreadyInstalled"] = "dotnet-already-installed";
    DepsCheckerEvent["dotnetInstallCompleted"] = "dotnet-install-completed";
    DepsCheckerEvent["dotnetInstallError"] = "dotnet-install-error";
    DepsCheckerEvent["dotnetInstallScriptCompleted"] = "dotnet-install-script-completed";
    DepsCheckerEvent["dotnetInstallScriptError"] = "dotnet-install-script-error";
    DepsCheckerEvent["dotnetValidationError"] = "dotnet-validation-error";
    DepsCheckerEvent["dotnetSearchDotnetSdks"] = "dotnet-search-dotnet-sdks";
    DepsCheckerEvent["ngrokCheckSkipped"] = "ngrok-check-skipped";
    DepsCheckerEvent["ngrokInstallCompleted"] = "ngrok-install-completed";
    DepsCheckerEvent["ngrokInstallError"] = "ngrok-install-error";
    DepsCheckerEvent["ngrokNpmLog"] = "ngrok-npm-log";
    DepsCheckerEvent["ngrokInstallScriptCompleted"] = "ngrok-install-script-completed";
    DepsCheckerEvent["ngrokInstallScriptError"] = "ngrok-install-script-error";
    DepsCheckerEvent["ngrokValidationError"] = "ngrok-validation-error";
    DepsCheckerEvent["trustCertSkipped"] = "trust-cert-skipped";
})(DepsCheckerEvent = exports.DepsCheckerEvent || (exports.DepsCheckerEvent = {}));
var TelemtryMessages;
(function (TelemtryMessages) {
    TelemtryMessages["failedToInstallFunc"] = "failed to install Func core tools.";
    TelemtryMessages["failedToValidateFunc"] = "failed to validate func.";
    TelemtryMessages["NPMNotFound"] = "npm is not found.";
    TelemtryMessages["failedToExecDotnetScript"] = "failed to exec dotnet script.";
    TelemtryMessages["failedToValidateDotnet"] = "failed to validate dotnet.";
    TelemtryMessages["failedToSearchDotnetSdks"] = "failed to search dotnet sdks.";
    TelemtryMessages["failedToInstallNgrok"] = "failed to install ngrok.";
    TelemtryMessages["failedToValidateNgrok"] = "failed to validate ngrok.";
})(TelemtryMessages = exports.TelemtryMessages || (exports.TelemtryMessages = {}));
var TelemetryProperties;
(function (TelemetryProperties) {
    TelemetryProperties["NgrokNpmInstallNodeVersion"] = "ngrok-npm-install-node-version";
    TelemetryProperties["NgrokNpmInstallNpmVersion"] = "ngrok-npm-install-npm-version";
    TelemetryProperties["NgrokNpmInstallExitCode"] = "ngrok-npm-install-exit-code";
    TelemetryProperties["NgrokNpmInstallLog"] = "ngrok-npm-install-log";
})(TelemetryProperties = exports.TelemetryProperties || (exports.TelemetryProperties = {}));
var TelemetryMessurement;
(function (TelemetryMessurement) {
    TelemetryMessurement["completionTime"] = "completion-time";
})(TelemetryMessurement = exports.TelemetryMessurement || (exports.TelemetryMessurement = {}));
//# sourceMappingURL=telemetry.js.map