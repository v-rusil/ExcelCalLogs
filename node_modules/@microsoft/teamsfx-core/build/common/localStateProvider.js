// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LocalStateProvider = void 0;
const tslib_1 = require("tslib");
const fs = tslib_1.__importStar(require("fs-extra"));
const environment_1 = require("../core/environment");
class LocalStateProvider {
    constructor(workspaceFolder) {
        this.projectPath = `${workspaceFolder}`;
    }
    async loadV2(cryptoProvider, includeAAD) {
        if (await fs.pathExists(this.projectPath)) {
            const envDataResult = await environment_1.environmentManager.loadEnvInfo(this.projectPath, cryptoProvider, environment_1.environmentManager.getLocalEnvName(), true);
            if (envDataResult.isOk()) {
                const envData = envDataResult.value;
                return envData;
            }
            return undefined;
        }
        else {
            return undefined;
        }
    }
}
exports.LocalStateProvider = LocalStateProvider;
//# sourceMappingURL=localStateProvider.js.map