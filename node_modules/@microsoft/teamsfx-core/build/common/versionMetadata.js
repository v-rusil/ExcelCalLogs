"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.VersionSource = exports.VersionState = exports.Metadata = exports.MetadataV3Abandoned = exports.MetadataV2 = exports.MetadataV3 = void 0;
exports.MetadataV3 = {
    projectVersion: "1.0.0",
    platformVersion: {
        vs: "17.5.x.x",
        vsc: "5.x.x",
        cli: "2.x.x",
        cli_help: "2.x.x",
    },
    configFile: "teamsapp.yml",
    localConfigFile: "teamsapp.local.yml",
    defaultEnvironmentFolder: "env",
    projectId: "projectId",
    teamsManifestFileName: "manifest.json",
    aadManifestFileName: "aad.manifest.json",
};
exports.MetadataV2 = {
    projectVersion: "2.0.0",
    projectMaxVersion: "2.1.0",
    platformVersion: {
        vs: "17.4.x.x",
        vsc: "4.x.x",
        cli: "1.x.x",
        cli_help: "1.x.x",
    },
    configFolder: ".fx",
    configFile: "projectSettings.json",
    updateToolkitLink: "https://aka.ms/update-teams-toolkit",
};
exports.MetadataV3Abandoned = {
    projectVersion: "3.0.0",
    configFolder: "teamsfx",
    configFile: "settings.json",
};
exports.Metadata = {
    versionMatchLink: "https://aka.ms/teamsfx-project-toolkit-match",
};
var VersionState;
(function (VersionState) {
    // project version compatible
    VersionState[VersionState["compatible"] = 0] = "compatible";
    // project version outdated, project should upgrade
    VersionState[VersionState["upgradeable"] = -1] = "upgradeable";
    // project version ahead, need update toolkit
    VersionState[VersionState["unsupported"] = 1] = "unsupported";
})(VersionState = exports.VersionState || (exports.VersionState = {}));
var VersionSource;
(function (VersionSource) {
    VersionSource[VersionSource["projectSettings"] = 0] = "projectSettings";
    VersionSource[VersionSource["teamsapp"] = 1] = "teamsapp";
    VersionSource[VersionSource["unknown"] = 2] = "unknown";
    VersionSource[VersionSource["settings"] = 3] = "settings";
})(VersionSource = exports.VersionSource || (exports.VersionSource = {}));
//# sourceMappingURL=versionMetadata.js.map