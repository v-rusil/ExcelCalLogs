"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sampleProvider = void 0;
const tslib_1 = require("tslib");
const samples_config_json_1 = tslib_1.__importDefault(require("./samples-config.json"));
const samples_config_v3_json_1 = tslib_1.__importDefault(require("./samples-config-v3.json"));
const tools_1 = require("./tools");
class SampleProvider {
    get SampleCollection() {
        if (!this.sampleCollection) {
            let samples;
            if (tools_1.isV3Enabled()) {
                samples = samples_config_v3_json_1.default.samples.map((sample) => {
                    return {
                        id: sample.id,
                        title: sample.title,
                        shortDescription: sample.shortDescription,
                        fullDescription: sample.fullDescription,
                        tags: sample.tags,
                        time: sample.time,
                        configuration: sample.configuration,
                        link: samples_config_v3_json_1.default.defaultPackageLink,
                        suggested: sample.suggested,
                        url: samples_config_v3_json_1.default.baseUrl,
                    };
                });
            }
            else {
                samples = samples_config_json_1.default.samples.map((sample) => {
                    var _a, _b;
                    return {
                        id: sample.id,
                        title: sample.title,
                        shortDescription: sample.shortDescription,
                        fullDescription: sample.fullDescription,
                        tags: sample.tags,
                        time: sample.time,
                        configuration: sample.configuration,
                        link: (_a = sample.packageLink) !== null && _a !== void 0 ? _a : samples_config_json_1.default.defaultPackageLink,
                        suggested: sample.suggested,
                        url: sample.relativePath ? sample.url : (_b = sample.url) !== null && _b !== void 0 ? _b : samples_config_json_1.default.baseUrl,
                        relativePath: sample.relativePath,
                    };
                });
            }
            // remove video filter sample app if feature flag is disabled.
            if (!tools_1.isVideoFilterEnabled()) {
                const videoFilterSampleId = "teams-videoapp-sample";
                const index = samples.findIndex((sample) => sample.id === videoFilterSampleId);
                if (index !== -1) {
                    samples.splice(index, 1);
                }
            }
            this.sampleCollection = {
                samples,
            };
        }
        return this.sampleCollection;
    }
}
exports.sampleProvider = new SampleProvider();
//# sourceMappingURL=samples.js.map