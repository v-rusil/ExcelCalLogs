/// <reference types="node" />
import { ResourceTemplate, TokenProvider, Void } from "@microsoft/teamsfx-api";
import { Context } from "@microsoft/teamsfx-api/build/v2";
import { BicepContext, Logger, ServiceType } from "./interfaces";
export declare abstract class AzureHosting {
    abstract hostType: ServiceType;
    abstract configurable: boolean;
    reference: any;
    logger?: Logger;
    protected getBicepTemplateFolder(): string;
    generateBicep(bicepContext: BicepContext): Promise<ResourceTemplate>;
    updateBicep(bicepContext: BicepContext): Promise<ResourceTemplate>;
    configure(ctx: Context): Promise<Void>;
    /**
     * deploy to Azure
     * @param resourceId Azure resource id
     * @param tokenProvider token environment
     * @param buffer zip file stream buffer
     */
    deploy(resourceId: string, tokenProvider: TokenProvider, buffer: Buffer): Promise<Void>;
    setLogger(logger: any): void;
}
//# sourceMappingURL=azureHosting.d.ts.map