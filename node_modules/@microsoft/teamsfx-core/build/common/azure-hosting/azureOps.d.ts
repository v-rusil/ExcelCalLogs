/// <reference types="node" />
import * as appService from "@azure/arm-appservice";
import { AzureUploadConfig, Logger } from "./interfaces";
import { WebAppsListPublishingCredentialsResponse } from "@azure/arm-appservice";
/**
 * operate int azure
 */
export declare class AzureOperations {
    static readonly axiosInstance: import("axios").AxiosInstance;
    static listPublishingCredentials(webSiteMgmtClient: appService.WebSiteManagementClient, resourceGroup: string, siteName: string): Promise<WebAppsListPublishingCredentialsResponse>;
    static zipDeployPackage(zipDeployEndpoint: string, zipBuffer: Buffer, config: AzureUploadConfig, logger?: Logger): Promise<string>;
    static checkDeployStatus(location: string, config: AzureUploadConfig, logger?: Logger): Promise<void>;
    static restartWebApp(webSiteMgmtClient: appService.WebSiteManagementClient, resourceGroup: string, siteName: string, logger?: Logger): Promise<void>;
}
export declare function isHttpCodeOkOrCreated(code: number | undefined): boolean;
export declare function isHttpCodeAccepted(code: number | undefined): boolean;
//# sourceMappingURL=azureOps.d.ts.map