export declare enum ServiceType {
    AppService = "webapp",
    Functions = "function",
    BotService = "botservice"
}
export declare type BicepConfigs = string[];
export declare type BicepContext = {
    plugins: string[];
    configs: BicepConfigs;
    moduleNames: {
        [key: string]: string;
    };
    moduleAlias: string;
    pluginId: string;
};
export declare type HandlebarsContext = {
    plugins: string[];
    configs: BicepConfigs;
    moduleName: string;
    moduleNameCapitalized: string;
    moduleAlias: string;
    pluginId: string;
};
export declare type AzureUploadConfig = {
    headers: {
        "Content-Type"?: string;
        "Cache-Control"?: string;
        Authorization: string;
    };
    maxContentLength: number;
    maxBodyLength: number;
    timeout: number;
};
export declare type AzurePublishingCredentials = {
    publishingUserName?: string;
    publishingPassword?: string;
} & AxiosResponseWithStatusResult;
export declare type AxiosOnlyStatusResult = {
    status?: number;
};
export declare type AxiosResponseWithStatusResult = {
    _response: {
        status: number;
    };
};
export declare type AxiosHeaderWithLocation = {
    headers: {
        location: string;
    };
};
export declare type AxiosZipDeployResult = AxiosHeaderWithLocation & AxiosOnlyStatusResult;
export interface Logger {
    debug?: (message: string) => void;
    info?: (message: string) => void;
    warning?: (message: string) => void;
    error?: (message: string) => void;
}
//# sourceMappingURL=interfaces.d.ts.map