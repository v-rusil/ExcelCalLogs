/// <reference types="node" />
import * as fs from "fs-extra";
import { Ignore } from "ignore";
/**
 * Asynchronously zip a folder and return buffer
 * @param sourceDir base dir
 * @param notIncluded block list
 * @param cache zip cache file location
 */
export declare function zipFolderAsync(sourceDir: string, cache: string, notIncluded: Ignore): Promise<Buffer>;
export declare function forEachFileAndDir(root: string, callback: (itemPath: string, stats: fs.Stats) => boolean | void, filter?: (itemPath: string) => boolean): Promise<void>;
/**
 * Recursively list all files that match a naming pattern in a specified directory
 * @param directoryPath base dir
 * @param matchPattern filename pattern
 * @param ignorePattern filename ignore pattern
 */
export declare function listFilePaths(directoryPath: string, matchPattern?: string, ignorePattern?: string): Promise<string[]>;
//# sourceMappingURL=fileOperation.d.ts.map