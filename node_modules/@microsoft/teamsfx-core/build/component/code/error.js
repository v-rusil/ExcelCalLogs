"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnzipError = exports.TemplateZipFallbackError = exports.CommandExecutionError = void 0;
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const messages_1 = require("../messages");
class CommandExecutionError extends teamsfx_api_1.UserError {
    constructor(source, cmd, path, innerError) {
        const suggestions = [
            messages_1.ErrorMessage.RunFailedCommand(cmd, path),
            messages_1.ErrorMessage.CheckCommandOutputAndTryToFixIt,
            messages_1.ErrorMessage.RetryTheCurrentStep,
        ];
        const { default: defaultMsg, localized } = messages_1.concatErrorMessageWithSuggestions(messages_1.getLocalizedMessage("plugins.bot.FailToRun", cmd), suggestions);
        super(source, new.target.name, defaultMsg, localized);
        this.innerError = innerError;
    }
}
exports.CommandExecutionError = CommandExecutionError;
class TemplateZipFallbackError extends teamsfx_api_1.UserError {
    constructor(source) {
        const suggestions = [messages_1.ErrorMessage.CheckOutputLogAndTryToFix, messages_1.ErrorMessage.RetryTheCurrentStep];
        const { default: defaultMsg, localized } = messages_1.concatErrorMessageWithSuggestions(messages_1.getLocalizedMessage("plugins.bot.TemplateZipFallbackError"), suggestions);
        super(source, new.target.name, defaultMsg, localized);
    }
}
exports.TemplateZipFallbackError = TemplateZipFallbackError;
class UnzipError extends teamsfx_api_1.UserError {
    constructor(source, path) {
        const suggestions = [
            messages_1.ErrorMessage.CheckOutputLogAndTryToFix,
            messages_1.ErrorMessage.ReopenWorkingDir(path),
            messages_1.ErrorMessage.RetryTheCurrentStep,
        ];
        const { default: defaultMsg, localized } = messages_1.concatErrorMessageWithSuggestions(messages_1.getLocalizedMessage("plugins.bot.UnzipError"), suggestions);
        super(source, new.target.name, defaultMsg, localized);
    }
}
exports.UnzipError = UnzipError;
//# sourceMappingURL=error.js.map