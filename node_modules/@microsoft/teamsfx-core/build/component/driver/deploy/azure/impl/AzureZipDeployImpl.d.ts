/// <reference types="node" />
import { AzureDeployImpl } from "./azureDeployImpl";
import { AzureUploadConfig, DeployStepArgs } from "../../../interface/buildAndDeployArgs";
import { AzureResourceInfo, DriverContext } from "../../../interface/commonArgs";
import { TokenCredential } from "@azure/core-auth";
import { IProgressHandler, LogProvider, UserInteraction } from "@microsoft/teamsfx-api";
export declare class AzureZipDeployImpl extends AzureDeployImpl {
    pattern: RegExp;
    private readonly serviceName;
    protected helpLink: string;
    protected summaries: string[];
    protected summaryPrepare: string[];
    protected zipBuffer: Buffer | undefined;
    protected progressHandler?: AsyncIterableIterator<void>;
    protected progressNames: string[];
    constructor(args: unknown, context: DriverContext, serviceName: string, helpLink: string, summaries: string[], summaryPrepare: string[]);
    azureDeploy(args: DeployStepArgs, azureResource: AzureResourceInfo, azureCredential: TokenCredential): Promise<void>;
    protected prepare: (args: DeployStepArgs) => Promise<void>;
    /**
     * deploy to azure app service or azure function use zip deploy method
     * @param args local file needed to be deployed
     * @param azureResource azure resource info
     * @param azureCredential azure user login credential
     * @return the zip deploy time cost
     * @protected
     */
    zipDeploy(args: DeployStepArgs, azureResource: AzureResourceInfo, azureCredential: TokenCredential): Promise<number>;
    /**
     * call azure app service or azure function zip deploy method
     * @param zipDeployEndpoint azure zip deploy endpoint
     * @param zipBuffer zip file buffer
     * @param config azure upload config, including azure account credential
     * @param logger log provider
     * @protected
     */
    protected zipDeployPackage(zipDeployEndpoint: string, zipBuffer: Buffer, config: AzureUploadConfig, logger?: LogProvider): Promise<string>;
    /**
     * create azure zip deploy endpoint
     * @param siteName azure app service or azure function name
     * @protected
     */
    protected getZipDeployEndpoint(siteName: string): string;
    createProgressBar(ui?: UserInteraction): IProgressHandler | undefined;
}
//# sourceMappingURL=AzureZipDeployImpl.d.ts.map