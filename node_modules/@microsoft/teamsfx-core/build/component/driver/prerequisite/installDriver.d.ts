import { FxError, Result } from "@microsoft/teamsfx-api";
import { DriverContext } from "../interface/commonArgs";
import { ExecutionResult, StepDriver } from "../interface/stepDriver";
import { WrapDriverContext } from "../util/wrapUtil";
import { InstallToolArgs } from "./interfaces/InstallToolArgs";
export declare class ToolsInstallDriver implements StepDriver {
    description: string;
    run(args: InstallToolArgs, context: DriverContext): Promise<Result<Map<string, string>, FxError>>;
    execute(args: InstallToolArgs, context: DriverContext): Promise<ExecutionResult>;
}
export declare class ToolsInstallDriverImpl {
    private context;
    constructor(context: WrapDriverContext);
    run(args: InstallToolArgs): Promise<Map<string, string>>;
    resolveLocalCertificate(trustDevCert: boolean): Promise<Map<string, string>>;
    resolveFuncCoreTools(): Promise<Map<string, string>>;
    resolveDotnet(): Promise<Map<string, string>>;
    private validateArgs;
    private getSteps;
    private setArgTelemetry;
    private setDevCertTelemetry;
    private setDepsCheckTelemetry;
    private createProgressBar;
}
//# sourceMappingURL=installDriver.d.ts.map