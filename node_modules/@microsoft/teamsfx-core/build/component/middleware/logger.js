"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionLogger = exports.LoggerMW = void 0;
function LoggerMW(loggerCreater) {
    return async (ctx, next) => {
        const actionContext = ctx.arguments[0];
        actionContext.logger = new loggerCreater(actionContext.logProvider);
        await next();
    };
}
exports.LoggerMW = LoggerMW;
class ActionLogger {
    constructor(formatter, logger) {
        this.logger = logger;
        this.formatter = formatter;
    }
    log(logLevel, message) {
        return this.logger.log(logLevel, this.formatter(message));
    }
    trace(message) {
        return this.logger.trace(this.formatter(message));
    }
    debug(message) {
        return this.logger.debug(this.formatter(message));
    }
    info(message) {
        if (message instanceof Array) {
            if (message.length > 0) {
                message[0].content = this.formatter(message[0].content);
            }
            return this.logger.info(message);
        }
        else {
            return this.logger.info(this.formatter(message));
        }
    }
    warning(message) {
        return this.logger.warning(this.formatter(message));
    }
    error(message) {
        return this.logger.error(this.formatter(message));
    }
    fatal(message) {
        return this.logger.fatal(this.formatter(message));
    }
}
exports.ActionLogger = ActionLogger;
//# sourceMappingURL=logger.js.map