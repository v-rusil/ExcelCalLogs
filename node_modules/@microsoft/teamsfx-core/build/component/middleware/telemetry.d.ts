import { Middleware } from "@feathersjs/hooks/lib";
import { FxError, TelemetryReporter } from "@microsoft/teamsfx-api";
import { ActionContext, ActionTelemetryReporter } from "./types";
export declare function TelemetryMW(telemetryCreater: new (reporter: TelemetryReporter) => ActionTelemetryReporter): Middleware;
export declare class ActionTelemetryImplement implements ActionTelemetryReporter {
    reporter: TelemetryReporter;
    constructor(stage: string, componentName: string, reporter: TelemetryReporter);
    stage: string;
    componentName: string;
    properties: {
        [key: string]: string;
    };
    measurements: {
        [key: string]: number;
    };
    errorProps: string[];
    addProperty: (key: string, value: string) => void;
    sendStartEvent: (ctx: ActionContext) => void;
    sendEndEvent: (ctx: ActionContext) => void;
    sendEndEventWithError: (ctx: ActionContext, error: FxError) => void;
    sendTelemetryEvent(eventName: string, properties?: {
        [key: string]: string;
    }, measurements?: {
        [key: string]: number;
    }): void;
    sendTelemetryErrorEvent(eventName: string, properties?: {
        [key: string]: string;
    }, measurements?: {
        [key: string]: number;
    }, errorProps?: string[]): void;
    sendTelemetryException(error: Error, properties?: {
        [key: string]: string;
    }, measurements?: {
        [key: string]: number;
    }): void;
}
//# sourceMappingURL=telemetry.d.ts.map