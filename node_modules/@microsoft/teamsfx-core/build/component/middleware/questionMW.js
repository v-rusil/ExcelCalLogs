"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.QuestionMW = void 0;
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const globalVars_1 = require("../../core/globalVars");
function QuestionMW(question) {
    return async (ctx, next) => {
        const inputs = ctx.arguments[0];
        const getQuestionRes = await question(inputs);
        if (getQuestionRes.isErr())
            throw getQuestionRes.error;
        const node = getQuestionRes.value;
        if (node) {
            const askQuestionRes = await teamsfx_api_1.traverse(node, inputs, globalVars_1.TOOLS.ui, globalVars_1.TOOLS.telemetryReporter);
            if (askQuestionRes.isErr()) {
                ctx.result = teamsfx_api_1.err(askQuestionRes.error);
                return;
            }
        }
        await next();
    };
}
exports.QuestionMW = QuestionMW;
//# sourceMappingURL=questionMW.js.map