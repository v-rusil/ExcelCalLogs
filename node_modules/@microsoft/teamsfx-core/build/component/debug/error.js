// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidLocalBotEndpointFormat = exports.LocalBotEndpointNotConfigured = exports.NgrokTunnelNotConnected = exports.ConfigLocalDebugSettingsError = exports.SetupLocalDebugSettingsError = exports.ScaffoldLocalDebugSettingsError = void 0;
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const localizeUtils_1 = require("../../common/localizeUtils");
const constants_1 = require("../constants");
function ScaffoldLocalDebugSettingsError(error) {
    return new teamsfx_api_1.SystemError({
        error,
        source: constants_1.SolutionSource,
        name: "ScaffoldLocalDebugSettingsError",
    });
}
exports.ScaffoldLocalDebugSettingsError = ScaffoldLocalDebugSettingsError;
function SetupLocalDebugSettingsError(error) {
    return new teamsfx_api_1.SystemError({ error, source: constants_1.SolutionSource, name: "SetupLocalDebugSettingsError" });
}
exports.SetupLocalDebugSettingsError = SetupLocalDebugSettingsError;
function ConfigLocalDebugSettingsError(error) {
    return new teamsfx_api_1.SystemError({ error, source: constants_1.SolutionSource, name: "ConfigLocalDebugSettingsError" });
}
exports.ConfigLocalDebugSettingsError = ConfigLocalDebugSettingsError;
function NgrokTunnelNotConnected() {
    return new teamsfx_api_1.UserError({
        name: "NgrokTunnelNotConnected",
        source: "localdebug-plugin",
        message: localizeUtils_1.getDefaultString("error.NgrokTunnelNotConnected"),
        displayMessage: localizeUtils_1.getLocalizedString("error.NgrokTunnelNotConnected"),
        helpLink: "https://aka.ms/teamsfx-localdebug",
    });
}
exports.NgrokTunnelNotConnected = NgrokTunnelNotConnected;
function LocalBotEndpointNotConfigured() {
    return new teamsfx_api_1.UserError({
        source: constants_1.SolutionSource,
        name: "LocalBotEndpointNotConfigured",
        message: localizeUtils_1.getDefaultString("error.LocalBotEndpointNotConfigured"),
        displayMessage: localizeUtils_1.getLocalizedString("error.LocalBotEndpointNotConfigured"),
        helpLink: "https://aka.ms/teamsfx-skip-ngrok",
    });
}
exports.LocalBotEndpointNotConfigured = LocalBotEndpointNotConfigured;
function InvalidLocalBotEndpointFormat(localBotEndpoint) {
    return new teamsfx_api_1.UserError(constants_1.SolutionSource, "InvalidLocalBotEndpointFormat", localizeUtils_1.getDefaultString("error.LocalBotEndpointNotConfigured", localBotEndpoint), localizeUtils_1.getLocalizedString("error.LocalBotEndpointNotConfigured", localBotEndpoint));
}
exports.InvalidLocalBotEndpointFormat = InvalidLocalBotEndpointFormat;
//# sourceMappingURL=error.js.map