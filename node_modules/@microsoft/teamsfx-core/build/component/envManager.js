"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.createEnvWithName = void 0;
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
require("reflect-metadata");
const environment_1 = require("../core/environment");
const globalVars_1 = require("../core/globalVars");
const utils_1 = require("./resource/appManifest/utils/utils");
async function createEnvWithName(targetEnvName, appName, inputs, existingTabEndpoint) {
    var _a;
    if (targetEnvName === environment_1.environmentManager.getLocalEnvName()) {
        appName = utils_1.getLocalAppName(appName);
    }
    const newEnvConfig = environment_1.environmentManager.newEnvConfigData(appName, existingTabEndpoint);
    const writeEnvResult = await environment_1.environmentManager.writeEnvConfig(inputs.projectPath, newEnvConfig, targetEnvName);
    if (writeEnvResult.isErr()) {
        return teamsfx_api_1.err(writeEnvResult.error);
    }
    (_a = globalVars_1.TOOLS.logProvider) === null || _a === void 0 ? void 0 : _a.debug(`[core] persist ${targetEnvName} env state to path ${writeEnvResult.value}: ${JSON.stringify(newEnvConfig)}`);
    return teamsfx_api_1.ok(undefined);
}
exports.createEnvWithName = createEnvWithName;
//# sourceMappingURL=envManager.js.map