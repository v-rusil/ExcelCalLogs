// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidTabBaseUrlError = exports.InvalidExistingBotArgsError = exports.InvalidExistingAADArgsError = exports.DebugArgumentEmptyError = exports.InvalidAppManifestPackageFileFormatError = exports.AppManifestPackageNotExistError = exports.errorSource = void 0;
const tslib_1 = require("tslib");
const util = tslib_1.__importStar(require("util"));
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const localizeUtils_1 = require("../../common/localizeUtils");
exports.errorSource = "debugHandler";
function AppManifestPackageNotExistError(appManifestPackagePath) {
    return new teamsfx_api_1.UserError(exports.errorSource, "InvalidDebugArgsError", util.format(localizeUtils_1.getDefaultString("error.debugHandler.AppManifestPackageNotExistError"), appManifestPackagePath), util.format(localizeUtils_1.getLocalizedString("error.debugHandler.AppManifestPackageNotExistError"), appManifestPackagePath));
}
exports.AppManifestPackageNotExistError = AppManifestPackageNotExistError;
function InvalidAppManifestPackageFileFormatError() {
    return new teamsfx_api_1.UserError(exports.errorSource, "InvalidDebugArgsError", localizeUtils_1.getDefaultString("error.debugHandler.InvalidAppManifestPackageFileFormatError"), localizeUtils_1.getLocalizedString("error.debugHandler.InvalidAppManifestPackageFileFormatError"));
}
exports.InvalidAppManifestPackageFileFormatError = InvalidAppManifestPackageFileFormatError;
function DebugArgumentEmptyError(argument) {
    return new teamsfx_api_1.UserError(exports.errorSource, "InvalidDebugArgsError", util.format(localizeUtils_1.getDefaultString("error.debugHandler.DebugArgumentEmptyError"), argument), util.format(localizeUtils_1.getLocalizedString("error.debugHandler.DebugArgumentEmptyError"), argument));
}
exports.DebugArgumentEmptyError = DebugArgumentEmptyError;
function InvalidExistingAADArgsError() {
    return new teamsfx_api_1.UserError(exports.errorSource, "InvalidDebugArgsError", localizeUtils_1.getDefaultString("error.debugHandler.InvalidExistingAADArgsError"), localizeUtils_1.getLocalizedString("error.debugHandler.InvalidExistingAADArgsError"));
}
exports.InvalidExistingAADArgsError = InvalidExistingAADArgsError;
function InvalidExistingBotArgsError() {
    return new teamsfx_api_1.UserError(exports.errorSource, "InvalidDebugArgsError", localizeUtils_1.getDefaultString("error.debugHandler.InvalidExistingBotArgsError"), localizeUtils_1.getLocalizedString("error.debugHandler.InvalidExistingBotArgsError"));
}
exports.InvalidExistingBotArgsError = InvalidExistingBotArgsError;
function InvalidTabBaseUrlError() {
    return new teamsfx_api_1.UserError(exports.errorSource, "InvalidDebugArgsError", localizeUtils_1.getDefaultString("error.debugHandler.InvalidTabBaseUrlError"), localizeUtils_1.getLocalizedString("error.debugHandler.InvalidTabBaseUrlError"));
}
exports.InvalidTabBaseUrlError = InvalidTabBaseUrlError;
//# sourceMappingURL=error.js.map