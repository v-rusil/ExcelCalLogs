import { SystemError, UserError } from "@microsoft/teamsfx-api";
import { LocalizedMessage } from "./messages";
export declare class ActionNotExist extends SystemError {
    constructor(action: string);
}
export declare class ComponentNotExist extends SystemError {
    constructor(component: string);
}
export declare class BadComponent extends SystemError {
    constructor(source: string, component: string, property: string);
}
export declare class invalidProjectSettings extends SystemError {
    constructor(source: string, msg?: string);
}
export declare class PreconditionError extends UserError {
    constructor(source: string, messages: LocalizedMessage, suggestions: LocalizedMessage[]);
}
export declare function CheckThrowSomethingMissing<T>(source: string, name: string, value: T | undefined): T;
export declare class PackDirectoryExistenceError extends UserError {
    constructor(source: string);
}
export declare class ResourceNotFoundError extends SystemError {
    constructor(source: string, message: string);
}
export declare class FindFunctionAppError extends ResourceNotFoundError {
    constructor(source: string);
}
export declare class InvalidFeature extends UserError {
    constructor();
}
//# sourceMappingURL=error.d.ts.map