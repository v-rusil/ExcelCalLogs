"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultManifestProvider = void 0;
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const ManifestUtils_1 = require("./utils/ManifestUtils");
class DefaultManifestProvider {
    async updateCapability(ctx, inputs, capability) {
        const res = await ManifestUtils_1.manifestUtils.updateCapability(inputs.projectPath, capability);
        if (res.isErr())
            return teamsfx_api_1.err(res.error);
        return teamsfx_api_1.ok(teamsfx_api_1.Void);
    }
    async deleteCapability(ctx, inputs, capability) {
        const res = await ManifestUtils_1.manifestUtils.deleteCapability(inputs.projectPath, capability);
        if (res.isErr())
            return teamsfx_api_1.err(res.error);
        return teamsfx_api_1.ok(teamsfx_api_1.Void);
    }
    async capabilityExceedLimit(ctx, inputs, capability) {
        return await ManifestUtils_1.manifestUtils.capabilityExceedLimit(inputs.projectPath, capability);
    }
    async addCapabilities(ctx, inputs, capabilities) {
        const res = await ManifestUtils_1.manifestUtils.addCapabilities(inputs, capabilities);
        if (res.isErr())
            return teamsfx_api_1.err(res.error);
        return teamsfx_api_1.ok(teamsfx_api_1.Void);
    }
}
exports.DefaultManifestProvider = DefaultManifestProvider;
//# sourceMappingURL=manifestProvider.js.map