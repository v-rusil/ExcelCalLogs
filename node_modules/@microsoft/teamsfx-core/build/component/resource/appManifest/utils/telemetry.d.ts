import { PluginContext, SystemError, UserError, v2 } from "@microsoft/teamsfx-api";
import { DriverContext } from "../../../driver/interface/commonArgs";
export declare enum TelemetryPropertyKey {
    component = "component",
    errorType = "error-type",
    errorCode = "error-code",
    errorMessage = "error-message",
    validationResult = "validation-result",
    updateExistingApp = "update",
    success = "success",
    appId = "appid",
    tenantId = "tenant-id",
    publishedAppId = "published-app-id",
    customizedKeys = "customized-manifest-keys",
    manual = "manual",
    statusCode = "status-code",
    url = "url",
    method = "method"
}
export declare enum TelemetryEventName {
    scaffold = "scaffold",
    validateManifest = "validate-manifest",
    buildTeamsPackage = "build",
    publish = "publish",
    deploy = "deploy",
    updateManifest = "update-manifest",
    provision = "provision",
    provisionManifest = "provision-manifest",
    postProvision = "post-provision",
    checkPermission = "check-permission",
    grantPermission = "grant-permission",
    listCollaborator = "list-collaborator",
    localDebug = "local-debug",
    init = "init",
    addCapability = "add-capability",
    loadManifest = "load-manifest",
    saveManifest = "save-manifest",
    appStudioApi = "app-studio-api",
    authSvcApi = "auth-svc-api"
}
export declare class TelemetryUtils {
    static ctx: PluginContext | v2.Context | DriverContext;
    static init(ctx: PluginContext | v2.Context | DriverContext): void;
    static sendStartEvent(eventName: string, _properties?: {
        [key: string]: string;
    }, measurements?: {
        [key: string]: number;
    }): void;
    static sendSuccessEvent(eventName: string, _properties?: {
        [key: string]: string;
    }, measurements?: {
        [key: string]: number;
    }): void;
    static sendErrorEvent(eventName: string, error: SystemError | UserError, _properties?: {
        [key: string]: string;
    }, measurements?: {
        [key: string]: number;
    }): void;
    private static addCommonProperty;
}
//# sourceMappingURL=telemetry.d.ts.map