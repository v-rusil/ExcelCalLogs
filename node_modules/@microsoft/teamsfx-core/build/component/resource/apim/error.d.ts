import { FxError } from "@microsoft/teamsfx-api";
import { TeamsToolkitComponent, TeamsToolkitComponentV3 } from "./constants";
declare enum ErrorType {
    User = 0,
    System = 1
}
export interface IApimPluginError {
    type: ErrorType;
    code: string;
    message: (...args: string[]) => [string, string];
    helpLink?: string;
}
export declare const NoValidOpenApiDocument: IApimPluginError;
export declare const InvalidOpenApiDocument: IApimPluginError;
export declare const EmptyTitleInOpenApiDocument: IApimPluginError;
export declare const EmptyVersionInOpenApiDocument: IApimPluginError;
export declare const InvalidAadObjectId: IApimPluginError;
export declare const EmptyConfigValue: IApimPluginError;
export declare const NoPluginConfig: IApimPluginError;
export declare const InvalidConfigValue: IApimPluginError;
export declare const ApimOperationError: IApimPluginError;
export declare const AadOperationError: IApimPluginError;
export declare const InvalidCliOptionError: IApimPluginError;
export declare const NotImplemented: IApimPluginError;
export declare const InvalidFunctionEndpoint: IApimPluginError;
export declare const EmptyProperty: IApimPluginError;
export declare const InvalidPropertyType: IApimPluginError;
export declare const ShortenToEmpty: IApimPluginError;
export declare const UnhandledError: IApimPluginError;
export declare const FailedToParseResourceIdError: IApimPluginError;
export declare function BuildError(pluginError: IApimPluginError, innerError: Error, ...params: string[]): FxError;
export declare function BuildError(pluginError: IApimPluginError, ...params: string[]): FxError;
export declare function AssertNotEmpty(name: string, value: string | undefined): string;
export declare function AssertNotEmpty<T>(name: string, value: T | undefined): T;
export declare function AssertConfigNotEmpty(component: TeamsToolkitComponent | TeamsToolkitComponentV3, name: string, value: string | undefined, envName: string): string;
export {};
//# sourceMappingURL=error.d.ts.map