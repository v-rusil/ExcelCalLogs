import { IOpenApiDocument } from "../interfaces/IOpenApiDocument";
import { OpenApiSchemaVersion } from "../constants";
import { LogProvider, TelemetryReporter } from "@microsoft/teamsfx-api";
import { OpenAPI } from "openapi-types";
export declare class OpenApiProcessor {
    private readonly logger;
    private readonly telemetryReporter;
    private readonly swaggerParser;
    constructor(telemetryReporter?: TelemetryReporter, logger?: LogProvider);
    generateDefaultOpenApi(fileName: string, title: string, version: string): Promise<void>;
    listOpenApiDocument(dir: string, excludeFolders: string[], openApiDocumentFileExtensions: string[]): Promise<Map<string, IOpenApiDocument>>;
    loadOpenApiDocument(fileName: string, dir?: string): Promise<IOpenApiDocument>;
    patchOpenApiDocument(spec: OpenAPI.Document, schemaVersion: OpenApiSchemaVersion, endpoint: string, basePath?: string): OpenAPI.Document;
    listAllFiles(dir: string, excludeFolders: string[], fileExtensions?: string[]): Promise<string[]>;
    private getSchemaVersion;
    private validateOpenApiInfo;
    private getScheme;
}
//# sourceMappingURL=openApiProcessor.d.ts.map