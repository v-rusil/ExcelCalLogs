import { ActionContext, FxError, InputsWithProjectPath, ResourceContextV3, Result } from "@microsoft/teamsfx-api";
import "reflect-metadata";
import { AzureResource } from "../azureResource";
export declare class AzureStorageResource extends AzureResource {
    readonly name = "azure-storage";
    readonly bicepModuleName = "azureStorage";
    readonly outputs: {
        endpoint: {
            key: string;
            bicepVariable: string;
        };
        storageResourceId: {
            key: string;
            bicepVariable: string;
        };
        domain: {
            key: string;
            bicepVariable: string;
        };
        indexPath: {
            key: string;
            bicepVariable: string;
        };
    };
    readonly finalOutputKeys: string[];
    configure(context: ResourceContextV3, inputs: InputsWithProjectPath, actionContext?: ActionContext): Promise<Result<undefined, FxError>>;
    deploy(context: ResourceContextV3, inputs: InputsWithProjectPath, actionContext?: ActionContext): Promise<Result<undefined, FxError>>;
    private doDeployment;
    private skipDeploy;
}
//# sourceMappingURL=azureStorage.d.ts.map