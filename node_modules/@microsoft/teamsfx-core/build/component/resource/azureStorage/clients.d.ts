import { BlobItem, BlobServiceClient, BlobServiceProperties, BlobUploadCommonResponse, ContainerClient, ServiceSetPropertiesResponse } from "@azure/storage-blob";
import { StorageAccounts } from "@azure/arm-storage";
import { StorageConfig } from "./configs";
import { LogProvider } from "@microsoft/teamsfx-api";
export declare class AzureStorageClient {
    private storageAccountClient;
    private resourceGroupName;
    private storageName;
    private logger?;
    constructor(config: StorageConfig, logger?: LogProvider);
    isStorageStaticWebsiteEnabled(): Promise<boolean | undefined>;
    enableStaticWebsite(): Promise<ServiceSetPropertiesResponse | undefined>;
    getContainer(containerName: string): Promise<ContainerClient>;
    deleteAllBlobs(client: ContainerClient): Promise<void>;
    uploadFiles(client: ContainerClient, sourceFolder: string): Promise<void>;
    static isBlobFile(blob: BlobItem): boolean;
    static uploadLocalFile(client: ContainerClient, filePath: string, blobPath: string): Promise<BlobUploadCommonResponse>;
    static getBlobServiceClient(blobUri: string, sasToken: string): Promise<BlobServiceClient>;
    static getBlobUri(storageName: string): string;
    static generateSasToken(client: StorageAccounts, resourceGroupName: string, storageName: string): Promise<string>;
    static getStaticWebsiteEnableParams(): BlobServiceProperties;
}
//# sourceMappingURL=clients.d.ts.map