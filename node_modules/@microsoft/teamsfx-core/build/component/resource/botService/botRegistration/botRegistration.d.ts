import { FxError, Result, M365TokenProvider, LogProvider } from "@microsoft/teamsfx-api";
import { IBotRegistration } from "../appStudio/interfaces/IBotRegistration";
export declare enum BotAuthType {
    AADApp = "AADApp",
    Identity = "User-Assigned Managed Identity"
}
export interface BotAadCredentials {
    botId: string;
    botPassword: string;
}
export declare class Constants {
    static readonly BOT_REGISTRATION: string;
    static readonly CREATE_BOT_REGISTRATION: string;
    static readonly UPDATE_MESSAGE_ENDPOINT: string;
    static readonly CREATE_OR_UPDATE_BOT_REGISTRATION: string;
    static readonly MSI_FOR_BOT: string;
}
export declare class BotRegistration {
    createBotAadApp(m365TokenProvider: M365TokenProvider, aadDisplayName: string, botConfig?: BotAadCredentials, logProvider?: LogProvider, botAuthType?: BotAuthType): Promise<Result<BotAadCredentials, FxError>>;
    createBotRegistration(m365TokenProvider: M365TokenProvider, aadDisplayName: string, botName: string, botConfig?: BotAadCredentials, logProvider?: LogProvider, botAuthType?: BotAuthType): Promise<Result<BotAadCredentials, FxError>>;
    createOrUpdateBotRegistration(m365TokenProvider: M365TokenProvider, botRegistration: IBotRegistration): Promise<Result<boolean, FxError>>;
    updateMessageEndpoint(m365TokenProvider: M365TokenProvider, botId: string, endpoint: string): Promise<Result<undefined, FxError>>;
}
//# sourceMappingURL=botRegistration.d.ts.map