import { FxError, Result, ContextV3, InputsWithProjectPath, ResourceContextV3, Bicep, ActionContext } from "@microsoft/teamsfx-api";
import "reflect-metadata";
import { AzureResource } from "../azureResource";
export declare class BotService extends AzureResource {
    outputs: {
        botId: {
            key: string;
        };
        botPassword: {
            key: string;
        };
    };
    finalOutputKeys: string[];
    secretFields: string[];
    readonly name = "bot-service";
    readonly bicepModuleName = "botService";
    generateBicep(context: ContextV3, inputs: InputsWithProjectPath): Promise<Result<Bicep[], FxError>>;
    provision(context: ResourceContextV3, inputs: InputsWithProjectPath, actionContext?: ActionContext): Promise<Result<undefined, FxError>>;
    configure(context: ResourceContextV3): Promise<Result<undefined, FxError>>;
}
//# sourceMappingURL=botService.d.ts.map