"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.AadManifestErrorMessage = exports.GraphClientErrorMessage = exports.AppStudioErrorMessage = exports.ConfigErrorMessages = exports.AadManifestNotProvisioned = exports.AadManifestMissingIdentifierUris = exports.AadManifestMissingReplyUrlsWithType = exports.AadManifestMissingObjectId = exports.AADManifestMissingScopeIdForTeamsApp = exports.AadManifestMissingName = exports.AadManifestLoadError = exports.AadManifestNotFoundError = exports.ListCollaboratorError = exports.GrantPermissionError = exports.CheckPermissionError = exports.MissingPermissionsRequestProvider = exports.GetConfigError = exports.TenantNotExistError = exports.GetTokenError = exports.UnknownPermissionScope = exports.UnknownPermissionRole = exports.UnknownPermissionName = exports.UnhandledError = exports.ParsePermissionError = exports.InvalidSelectedPluginsError = exports.CannotGenerateIdentifierUrisError = exports.AppIdUriInvalidError = exports.UpdatePermissionError = exports.UpdateAppIdUriError = exports.UpdateAadAppUsingManifestError = exports.UpdateAadAppError = exports.UpdateRedirectUriError = exports.CreateSecretError = exports.CreateAppForbiddenError = exports.CreateAppError = exports.GetSkipAppConfigError = exports.GetAppConfigError = exports.GetAppError = void 0;
const localizeUtils_1 = require("../../../common/localizeUtils");
const constants_1 = require("./constants");
const referHelpLink = "Please refer to the help link for further steps.";
const aadHelpLink = "https://aka.ms/teamsfx-aad-help";
exports.GetAppError = {
    name: "AadGetAppError",
    message: (objectId, tenantId, fileName) => [
        localizeUtils_1.getDefaultString("error.aad.GetAppError", objectId, tenantId, constants_1.Plugins.pluginNameComplex, fileName),
        localizeUtils_1.getLocalizedString("error.aad.GetAppError", objectId, tenantId, constants_1.Plugins.pluginNameComplex, fileName),
    ],
    helpLink: aadHelpLink,
};
exports.GetAppConfigError = {
    name: "AadGetAppConfigError",
    message: (config, fileName) => [
        localizeUtils_1.getDefaultString("error.aad.GetAppConfigError", config, constants_1.Plugins.pluginNameComplex, fileName),
        localizeUtils_1.getLocalizedString("error.aad.GetAppConfigError", config, constants_1.Plugins.pluginNameComplex, fileName),
    ],
};
exports.GetSkipAppConfigError = {
    name: "AadGetSkipAppConfigError",
    message: (fileName) => [
        localizeUtils_1.getDefaultString("error.aad.GetSkipAppConfigError", constants_1.ConfigKeys.objectId, constants_1.ConfigKeys.clientId, constants_1.ConfigKeys.clientSecret, constants_1.ConfigKeys.accessAsUserScopeId, constants_1.Plugins.auth, fileName),
        localizeUtils_1.getLocalizedString("error.aad.GetSkipAppConfigError", constants_1.ConfigKeys.objectId, constants_1.ConfigKeys.clientId, constants_1.ConfigKeys.clientSecret, constants_1.ConfigKeys.accessAsUserScopeId, constants_1.Plugins.auth, fileName),
    ],
    helpLink: aadHelpLink,
};
exports.CreateAppError = {
    name: "AadCreateAppError",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.CreateAppError"),
        localizeUtils_1.getLocalizedString("error.aad.CreateAppError"),
    ],
};
exports.CreateAppForbiddenError = {
    name: "AadCreateAppError",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.CreateAppForbiddenError"),
        localizeUtils_1.getLocalizedString("error.aad.CreateAppForbiddenError"),
    ],
    helpLink: "https://aka.ms/teamsfx-create-aad-itp",
};
exports.CreateSecretError = {
    name: "AadCreateSecretError",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.CreateSecretError"),
        localizeUtils_1.getLocalizedString("error.aad.CreateSecretError"),
    ],
};
exports.UpdateRedirectUriError = {
    name: "UpdateRedirectUriError",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.UpdateRedirectUriError"),
        localizeUtils_1.getLocalizedString("error.aad.UpdateRedirectUriError"),
    ],
};
exports.UpdateAadAppError = {
    name: "UpdateAadAppError",
    message: (reason) => [
        localizeUtils_1.getDefaultString("error.aad.UpdateAadAppError", reason),
        localizeUtils_1.getLocalizedString("error.aad.UpdateAadAppError", reason),
    ],
};
exports.UpdateAadAppUsingManifestError = {
    name: "UpdateAadAppError",
    message: (reason) => [
        localizeUtils_1.getDefaultString("error.aad.UpdateAadAppUsingManifestError", reason),
        localizeUtils_1.getLocalizedString("error.aad.UpdateAadAppUsingManifestError", reason),
    ],
};
exports.UpdateAppIdUriError = {
    name: "UpdateAppIdUriError",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.UpdateAppIdUriError", referHelpLink),
        localizeUtils_1.getLocalizedString("error.aad.UpdateAppIdUriError", referHelpLink),
    ],
    helpLink: aadHelpLink,
};
exports.UpdatePermissionError = {
    name: "AadUpdatePermissionError",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.UpdatePermissionError"),
        localizeUtils_1.getLocalizedString("error.aad.UpdatePermissionError"),
    ],
};
exports.AppIdUriInvalidError = {
    name: "AadAppIdUriInvalid",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.AppIdUriInvalidError"),
        localizeUtils_1.getLocalizedString("error.aad.AppIdUriInvalidError"),
    ],
};
exports.CannotGenerateIdentifierUrisError = {
    name: "CannotGenerateIdentifierUris",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.CannotGenerateIdentifierUris"),
        localizeUtils_1.getLocalizedString("error.aad.CannotGenerateIdentifierUris"),
    ],
};
exports.InvalidSelectedPluginsError = {
    name: "InvalidSelectedPlugins",
    message: (message) => [
        localizeUtils_1.getDefaultString("error.aad.InvalidSelectedPlugins", message),
        localizeUtils_1.getLocalizedString("error.aad.InvalidSelectedPlugins", message),
    ],
};
exports.ParsePermissionError = {
    name: "ParsePermissionError",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.ParsePermissionError"),
        localizeUtils_1.getLocalizedString("error.aad.ParsePermissionError"),
    ],
    helpLink: aadHelpLink,
};
exports.UnhandledError = {
    name: "UnhandledError",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.UnhandledError"),
        localizeUtils_1.getLocalizedString("error.aad.UnhandledError"),
    ],
};
exports.UnknownPermissionName = {
    name: "UnknownPermissionName",
    message: (name) => [
        localizeUtils_1.getDefaultString("error.aad.UnknownPermissionName", name, referHelpLink),
        localizeUtils_1.getLocalizedString("error.aad.UnknownPermissionName", name, referHelpLink),
    ],
    helpLink: aadHelpLink,
};
exports.UnknownPermissionRole = {
    name: "UnknownPermissionRole",
    message: (roleName, resourceName) => [
        localizeUtils_1.getDefaultString("error.aad.UnknownPermissionRole", roleName, resourceName, referHelpLink),
        localizeUtils_1.getLocalizedString("error.aad.UnknownPermissionRole", roleName, resourceName, referHelpLink),
    ],
    helpLink: aadHelpLink,
};
exports.UnknownPermissionScope = {
    name: "UnknownPermissionScope",
    message: (scopeName, resourceName) => [
        localizeUtils_1.getDefaultString("error.aad.UnknownPermissionScope", scopeName, resourceName, referHelpLink),
        localizeUtils_1.getLocalizedString("error.aad.UnknownPermissionScope", scopeName, resourceName, referHelpLink),
    ],
    helpLink: aadHelpLink,
};
exports.GetTokenError = {
    name: "GetTokenError",
    message: (audience) => [
        localizeUtils_1.getDefaultString("error.aad.GetTokenError", audience),
        localizeUtils_1.getLocalizedString("error.aad.GetTokenError", audience),
    ],
};
exports.TenantNotExistError = {
    name: "TenantNotExistError",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.TenantNotExistError"),
        localizeUtils_1.getLocalizedString("error.aad.TenantNotExistError"),
    ],
};
exports.GetConfigError = {
    name: "GetConfigError",
    message: (message) => [message, message],
};
exports.MissingPermissionsRequestProvider = {
    name: "MissingPermissionsRequestProvider",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.MissingPermissionsRequestProvider"),
        localizeUtils_1.getLocalizedString("error.aad.MissingPermissionsRequestProvider"),
    ],
};
exports.CheckPermissionError = {
    name: "CheckPermissionError",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.CheckPermissionError"),
        localizeUtils_1.getLocalizedString("error.aad.CheckPermissionError"),
    ],
};
exports.GrantPermissionError = {
    name: "GrantPermissionError",
    message: (resource, id) => [
        localizeUtils_1.getDefaultString("error.aad.GrantPermissionError", resource, id),
        localizeUtils_1.getLocalizedString("error.aad.GrantPermissionError", resource, id),
    ],
};
exports.ListCollaboratorError = {
    name: "ListCollaboratorError",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.ListCollaboratorError"),
        localizeUtils_1.getLocalizedString("error.aad.ListCollaboratorError"),
    ],
};
exports.AadManifestNotFoundError = {
    name: "AadManifestNotFoundError",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.AadManifestNotFoundError"),
        localizeUtils_1.getLocalizedString("error.aad.AadManifestNotFoundError"),
    ],
};
exports.AadManifestLoadError = {
    name: "AadManifestLoadError",
    message: (manifestPath, reason) => [
        localizeUtils_1.getDefaultString("error.aad.AadManifestLoadError", manifestPath, reason),
        localizeUtils_1.getLocalizedString("error.aad.AadManifestLoadError", manifestPath, reason),
    ],
};
exports.AadManifestMissingName = {
    name: "AadManifestMissingName",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.AadManifestMissingName"),
        localizeUtils_1.getLocalizedString("error.aad.AadManifestMissingName"),
    ],
};
exports.AADManifestMissingScopeIdForTeamsApp = {
    name: "AadManifestMissingScopeIdForTeamsApp",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.AadManifestMissingScopeIdForTeamsApp"),
        localizeUtils_1.getLocalizedString("error.aad.AadManifestMissingScopeIdForTeamsApp"),
    ],
};
exports.AadManifestMissingObjectId = {
    name: "AadManifestMissingObjectId",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.AadManifestMissingObjectId"),
        localizeUtils_1.getLocalizedString("error.aad.AadManifestMissingObjectId"),
    ],
};
exports.AadManifestMissingReplyUrlsWithType = {
    name: "AadManifestMissingReplyUrlsWithType",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.AadManifestMissingReplyUrlsWithType"),
        localizeUtils_1.getLocalizedString("error.aad.AadManifestMissingReplyUrlsWithType"),
    ],
};
exports.AadManifestMissingIdentifierUris = {
    name: "AadManifestMissingIdentifierUris",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.AadManifestMissingIdentifierUris"),
        localizeUtils_1.getLocalizedString("error.aad.AadManifestMissingIdentifierUris"),
    ],
};
exports.AadManifestNotProvisioned = {
    name: "AadManifestNotProvisioned",
    message: () => [
        localizeUtils_1.getDefaultString("error.aad.AadManifestNotProvisioned"),
        localizeUtils_1.getLocalizedString("error.aad.AadManifestNotProvisioned"),
    ],
};
class ConfigErrorMessages {
}
exports.ConfigErrorMessages = ConfigErrorMessages;
ConfigErrorMessages.GetDisplayNameError = [
    localizeUtils_1.getDefaultString("error.aad.GetDisplayNameError"),
    localizeUtils_1.getLocalizedString("error.aad.GetDisplayNameError"),
];
ConfigErrorMessages.GetConfigError = (configName, plugin) => [
    localizeUtils_1.getDefaultString("error.aad.GetConfigError", configName, plugin),
    localizeUtils_1.getLocalizedString("error.aad.GetConfigError", configName, plugin),
];
ConfigErrorMessages.FormatError = (type, value) => [
    localizeUtils_1.getDefaultString("error.aad.FormatError", type, value),
    localizeUtils_1.getLocalizedString("error.aad.FormatError", type, value),
];
class AppStudioErrorMessage {
}
exports.AppStudioErrorMessage = AppStudioErrorMessage;
AppStudioErrorMessage.CreateFailed = [
    localizeUtils_1.getDefaultString("error.aad.client.CreateFailed"),
    localizeUtils_1.getLocalizedString("error.aad.client.CreateFailed"),
];
AppStudioErrorMessage.UpdateFailed = [
    localizeUtils_1.getDefaultString("error.aad.client.UpdateFailed"),
    localizeUtils_1.getLocalizedString("error.aad.client.UpdateFailed"),
];
AppStudioErrorMessage.CreateSecretFailed = [
    localizeUtils_1.getDefaultString("error.aad.client.CreateSecretFailed"),
    localizeUtils_1.getLocalizedString("error.aad.client.CreateSecretFailed"),
];
AppStudioErrorMessage.GetFailed = [
    localizeUtils_1.getDefaultString("error.aad.client.GetFailed"),
    localizeUtils_1.getLocalizedString("error.aad.client.GetFailed"),
];
AppStudioErrorMessage.AppDefinitionIsNull = [
    localizeUtils_1.getDefaultString("error.aad.client.AppDefinitionIsNull"),
    localizeUtils_1.getLocalizedString("error.aad.client.AppDefinitionIsNull"),
];
AppStudioErrorMessage.AppObjectIdIsNull = [
    localizeUtils_1.getDefaultString("error.aad.client.AppObjectIdIsNull"),
    localizeUtils_1.getLocalizedString("error.aad.client.AppObjectIdIsNull"),
];
AppStudioErrorMessage.EmptyResponse = [
    localizeUtils_1.getDefaultString("error.aad.client.EmptyResponse"),
    localizeUtils_1.getLocalizedString("error.aad.client.EmptyResponse"),
];
AppStudioErrorMessage.ReachRetryLimit = [
    localizeUtils_1.getDefaultString("error.aad.client.ReachRetryLimit"),
    localizeUtils_1.getLocalizedString("error.aad.client.ReachRetryLimit"),
];
class GraphClientErrorMessage {
}
exports.GraphClientErrorMessage = GraphClientErrorMessage;
GraphClientErrorMessage.CreateFailed = [
    localizeUtils_1.getDefaultString("error.aad.client.CreateFailed"),
    localizeUtils_1.getLocalizedString("error.aad.client.CreateFailed"),
];
GraphClientErrorMessage.UpdateFailed = [
    localizeUtils_1.getDefaultString("error.aad.client.UpdateFailed"),
    localizeUtils_1.getLocalizedString("error.aad.client.UpdateFailed"),
];
GraphClientErrorMessage.CreateSecretFailed = [
    localizeUtils_1.getDefaultString("error.aad.client.CreateSecretFailed"),
    localizeUtils_1.getLocalizedString("error.aad.client.CreateSecretFailed"),
];
GraphClientErrorMessage.GetFailed = [
    localizeUtils_1.getDefaultString("error.aad.client.GetFailed"),
    localizeUtils_1.getLocalizedString("error.aad.client.GetFailed"),
];
GraphClientErrorMessage.CheckPermissionFailed = [
    localizeUtils_1.getDefaultString("error.aad.client.CheckPermissionFailed"),
    localizeUtils_1.getLocalizedString("error.aad.client.CheckPermissionFailed"),
];
GraphClientErrorMessage.GrantPermissionFailed = [
    localizeUtils_1.getDefaultString("error.aad.client.GrantPermissionFailed"),
    localizeUtils_1.getLocalizedString("error.aad.client.GrantPermissionFailed"),
];
GraphClientErrorMessage.AppDefinitionIsNull = [
    localizeUtils_1.getDefaultString("error.aad.client.AppDefinitionIsNull"),
    localizeUtils_1.getLocalizedString("error.aad.client.AppDefinitionIsNull"),
];
GraphClientErrorMessage.AppObjectIdIsNull = [
    localizeUtils_1.getDefaultString("error.aad.client.AppObjectIdIsNull"),
    localizeUtils_1.getLocalizedString("error.aad.client.AppObjectIdIsNull"),
];
GraphClientErrorMessage.EmptyResponse = [
    localizeUtils_1.getDefaultString("error.aad.client.EmptyResponse"),
    localizeUtils_1.getLocalizedString("error.aad.client.EmptyResponse"),
];
GraphClientErrorMessage.UserObjectIdIsNull = [
    localizeUtils_1.getDefaultString("error.aad.client.ReachRetryLimit"),
    localizeUtils_1.getLocalizedString("error.aad.client.ReachRetryLimit"),
];
class AadManifestErrorMessage {
}
exports.AadManifestErrorMessage = AadManifestErrorMessage;
AadManifestErrorMessage.NameIsMissing = localizeUtils_1.getLocalizedString("error.aad.manifest.NameIsMissing");
AadManifestErrorMessage.SignInAudienceIsMissing = localizeUtils_1.getLocalizedString("error.aad.manifest.SignInAudienceIsMissing");
AadManifestErrorMessage.RequiredResourceAccessIsMissing = localizeUtils_1.getLocalizedString("error.aad.manifest.RequiredResourceAccessIsMissing");
AadManifestErrorMessage.Oauth2PermissionsIsMissing = localizeUtils_1.getLocalizedString("error.aad.manifest.Oauth2PermissionsIsMissing");
AadManifestErrorMessage.PreAuthorizedApplicationsIsMissing = localizeUtils_1.getLocalizedString("error.aad.manifest.PreAuthorizedApplicationsIsMissing");
AadManifestErrorMessage.AccessTokenAcceptedVersionIs1 = localizeUtils_1.getLocalizedString("error.aad.manifest.AccessTokenAcceptedVersionIs1");
AadManifestErrorMessage.OptionalClaimsIsMissing = localizeUtils_1.getLocalizedString("error.aad.manifest.OptionalClaimsIsMissing");
AadManifestErrorMessage.OptionalClaimsMissingIdtypClaim = localizeUtils_1.getLocalizedString("error.aad.manifest.OptionalClaimsMissingIdtypClaim");
AadManifestErrorMessage.AADManifestIssues = localizeUtils_1.getLocalizedString("error.aad.manifest.AADManifestIssues");
AadManifestErrorMessage.UnknownResourceAppId = localizeUtils_1.getLocalizedString("error.aad.manifest.UnknownResourceAppId");
AadManifestErrorMessage.UnknownResourceAccessType = localizeUtils_1.getLocalizedString("error.aad.manifest.UnknownResourceAccessType");
AadManifestErrorMessage.UnknownResourceAccessId = localizeUtils_1.getLocalizedString("error.aad.manifest.UnknownResourceAccessId");
//# sourceMappingURL=errors.js.map