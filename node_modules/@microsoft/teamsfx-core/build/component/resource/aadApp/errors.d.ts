export interface AadError {
    name: string;
    message: (...args: string[]) => [string, string];
    helpLink?: string;
}
export declare const GetAppError: AadError;
export declare const GetAppConfigError: AadError;
export declare const GetSkipAppConfigError: AadError;
export declare const CreateAppError: AadError;
export declare const CreateAppForbiddenError: AadError;
export declare const CreateSecretError: AadError;
export declare const UpdateRedirectUriError: AadError;
export declare const UpdateAadAppError: AadError;
export declare const UpdateAadAppUsingManifestError: AadError;
export declare const UpdateAppIdUriError: AadError;
export declare const UpdatePermissionError: AadError;
export declare const AppIdUriInvalidError: AadError;
export declare const CannotGenerateIdentifierUrisError: AadError;
export declare const InvalidSelectedPluginsError: AadError;
export declare const ParsePermissionError: AadError;
export declare const UnhandledError: AadError;
export declare const UnknownPermissionName: AadError;
export declare const UnknownPermissionRole: AadError;
export declare const UnknownPermissionScope: AadError;
export declare const GetTokenError: AadError;
export declare const TenantNotExistError: AadError;
export declare const GetConfigError: AadError;
export declare const MissingPermissionsRequestProvider: AadError;
export declare const CheckPermissionError: AadError;
export declare const GrantPermissionError: AadError;
export declare const ListCollaboratorError: AadError;
export declare const AadManifestNotFoundError: AadError;
export declare const AadManifestLoadError: AadError;
export declare const AadManifestMissingName: AadError;
export declare const AADManifestMissingScopeIdForTeamsApp: AadError;
export declare const AadManifestMissingObjectId: AadError;
export declare const AadManifestMissingReplyUrlsWithType: AadError;
export declare const AadManifestMissingIdentifierUris: AadError;
export declare const AadManifestNotProvisioned: AadError;
export declare class ConfigErrorMessages {
    static readonly GetDisplayNameError: [string, string];
    static readonly GetConfigError: (configName: string, plugin: string) => [string, string];
    static readonly FormatError: (type: string, value: string) => [string, string];
}
export declare class AppStudioErrorMessage {
    static readonly CreateFailed: [string, string];
    static readonly UpdateFailed: [string, string];
    static readonly CreateSecretFailed: [string, string];
    static readonly GetFailed: [string, string];
    static readonly AppDefinitionIsNull: [string, string];
    static readonly AppObjectIdIsNull: [string, string];
    static readonly EmptyResponse: [string, string];
    static readonly ReachRetryLimit: [string, string];
}
export declare class GraphClientErrorMessage {
    static readonly CreateFailed: [string, string];
    static readonly UpdateFailed: [string, string];
    static readonly CreateSecretFailed: [string, string];
    static readonly GetFailed: [string, string];
    static readonly CheckPermissionFailed: [string, string];
    static readonly GrantPermissionFailed: [string, string];
    static readonly AppDefinitionIsNull: [string, string];
    static readonly AppObjectIdIsNull: [string, string];
    static readonly EmptyResponse: [string, string];
    static readonly UserObjectIdIsNull: [string, string];
}
export declare class AadManifestErrorMessage {
    static readonly NameIsMissing: string;
    static readonly SignInAudienceIsMissing: string;
    static readonly RequiredResourceAccessIsMissing: string;
    static readonly Oauth2PermissionsIsMissing: string;
    static readonly PreAuthorizedApplicationsIsMissing: string;
    static readonly AccessTokenAcceptedVersionIs1: string;
    static readonly OptionalClaimsIsMissing: string;
    static readonly OptionalClaimsMissingIdtypClaim: string;
    static readonly AADManifestIssues: string;
    static readonly UnknownResourceAppId: string;
    static readonly UnknownResourceAccessType: string;
    static readonly UnknownResourceAccessId: string;
}
//# sourceMappingURL=errors.d.ts.map