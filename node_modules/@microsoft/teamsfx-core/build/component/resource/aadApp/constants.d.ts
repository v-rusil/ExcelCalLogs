import { RequiredResourceAccess } from "./interfaces/IAADDefinition";
export declare class Constants {
    static oauthAuthorityPrefix: string;
    static aadAppMaxLength: number;
    static aadAppPasswordDisplayName: string;
    static INCLUDE_AAD_MANIFEST: string;
    static AAD_MANIFEST_FILE: string;
    static localDebugPrefix: string;
    static AskForEnv: string;
    static AskForEnvName: string;
    static maxRetryTimes: number;
    static statusCodeUserError: number;
    static statusCodeServerError: number;
    static statusCodeForbidden: number;
    static permissions: {
        name: string;
        owner: string;
        noPermission: string;
        type: string;
    };
    static appPackageFolder: string;
    static aadManifestTemplateFolder: string;
    static aadManifestTemplateName: string;
    static createOwnerDuplicatedMessage: string;
    static defaultPermissions: RequiredResourceAccess;
}
export declare class Telemetry {
    static component: string;
    static errorCode: string;
    static errorType: string;
    static errorMessage: string;
    static userError: string;
    static systemError: string;
    static isSuccess: string;
    static yes: string;
    static no: string;
    static retryTimes: string;
    static methodName: string;
    static appId: string;
    static skip: string;
    static signInAudience: string;
}
export declare class Plugins {
    static pluginName: string;
    static pluginNameComplex: string;
    static pluginNameShort: string;
    static frontendHosting: string;
    static teamsBot: string;
    static localDebug: string;
    static solution: string;
    static auth: string;
}
export declare class ConfigKeys {
    static applicationIdUri: string;
    static clientId: string;
    static clientSecret: string;
    static objectId: string;
    static oauth2PermissionScopeId: string;
    static frontendEndpoint: string;
    static botId: string;
    static botEndpoint: string;
    static teamsMobileDesktopAppId: string;
    static teamsWebAppId: string;
    static domain: string;
    static endpoint: string;
    static oauthAuthority: string;
    static oauthHost: string;
    static tenantId: string;
    static skip: string;
    static accessAsUserScopeId: string;
}
export declare class ConfigKeysOfOtherPlugin {
    static frontendHostingDomain: string;
    static frontendHostingEndpoint: string;
    static teamsBotId: string;
    static teamsBotIdLocal: string;
    static teamsBotEndpoint: string;
    static localDebugTabDomain: string;
    static localDebugTabEndpoint: string;
    static localDebugBotEndpoint: string;
    static solutionPermissionRequest: string;
    static remoteTeamsAppId: string;
    static solutionUserInfo: string;
}
export interface Messages {
    log: string;
    telemetry: string;
}
export declare class Messages {
    static readonly getLog: (log: string) => string;
    private static readonly getEventName;
    static readonly StartProvision: Messages;
    static readonly EndProvision: Messages;
    static readonly StartLocalDebug: Messages;
    static readonly EndLocalDebug: Messages;
    static readonly StartPostProvision: Messages;
    static readonly EndPostProvision: Messages;
    static readonly StartDeploy: Messages;
    static readonly EndDeploy: Messages;
    static readonly StartBuildAadManifest: Messages;
    static readonly EndBuildAadManifest: Messages;
    static readonly StartScaffold: Messages;
    static readonly EndScaffold: Messages;
    static readonly StartGenerateArmTemplates: Messages;
    static readonly EndGenerateArmTemplates: Messages;
    static readonly StartPostLocalDebug: Messages;
    static readonly EndPostLocalDebug: Messages;
    static readonly StartUpdatePermission: Messages;
    static readonly EndUpdatePermission: Messages;
    static readonly StartCheckPermission: Messages;
    static readonly EndCheckPermission: Messages;
    static readonly StartGrantPermission: Messages;
    static readonly EndGrantPermission: Messages;
    static readonly StartListCollaborator: Messages;
    static readonly EndListCollaborator: Messages;
    static readonly GetAadAppSuccess = "Successfully get Azure AD app.";
    static readonly CreateAadAppSuccess = "Successfully created Azure AD app.";
    static readonly CreateAadAppPasswordSuccess = "Successfully created password for Azure AD app.";
    static readonly UpdatePermissionSuccess = "Successfully updated permission for Azure AD app.";
    static readonly SetAppIdUriSuccess = "Successfully created application id uri for Azure AD app.";
    static readonly UpdateRedirectUriSuccess = "Successfully updated redirect uri for Azure AD app.";
    static readonly UpdateAppIdUriSuccess = "Successfully updated application id uri for Azure AD app.";
    static readonly ParsePermissionSuccess = "Successfully parsed permissions.";
    static readonly NoSelection: string;
    static readonly UserCancelled: string;
    static readonly UpdatePermissionSuccessMessage: string;
    static readonly SkipProvision: string;
    static readonly OwnerAlreadyAdded: (userObjectId: string, objectId: string) => string;
    static readonly StepFailedAndSkipped: (stage: string, helpMessage: string) => string;
    static readonly UpdatePermissionHelpMessage: string;
    static readonly UpdateAppIdUriHelpMessage: (appIdUri: string) => string;
    static readonly UpdateRedirectUriHelpMessage: (redirectUri: string) => string;
    static readonly UpdateAadHelpMessage: () => string;
}
export declare class ProgressTitle {
    static readonly Provision = "Provisioning Azure AD app";
    static readonly ProvisionSteps = 3;
    static readonly PostProvision = "Configuring Azure AD app";
    static readonly PostProvisionSteps = 2;
    static readonly UpdatePermission = "Updating permission for Azure AD app";
    static readonly UpdatePermissionSteps = 1;
    static readonly Deploy = "Deploying Azure AD app";
    static readonly DeploySteps = 1;
    static readonly PostProvisionUsingManifest = "Configuring Azure AD app using manifest";
    static readonly PostProvisionUsingManifestSteps = 1;
}
export declare class ProgressDetail {
    static readonly Starting = "Starting";
    static readonly ProvisionAadApp = "Provision Azure AD app";
    static readonly CreateAadAppSecret = "Create secret for Azure AD app";
    static readonly GetAadApp = "Get Azure AD app";
    static readonly UpdateAadApp = "Update AD app";
    static readonly UpdateRedirectUri = "Update redirect uri for Azure AD app";
    static readonly UpdateAppIdUri = "Update application id uri for Azure AD app";
    static readonly UpdatePermission = "Update permission for Azure AD app";
}
export declare class TemplatePathInfo {
    static readonly TemplateRelativeDir: string;
    static readonly BicepTemplateRelativeDir: string;
}
export declare class ConfigFilePath {
    static readonly Default = "env.default.json";
    static readonly LocalSettings = "localSettings.json";
    static readonly State: (env: string) => string;
    static readonly Input: (env: string) => string;
}
export declare class UILevels {
    static readonly Info = "info";
    static readonly Warn = "warn";
    static readonly Error = "error";
}
//# sourceMappingURL=constants.d.ts.map