"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.VersionFileNotExist = exports.ZipDownloadError = exports.EndpointInvalidError = exports.UnhandledError = exports.UpdateApplicationSettingsError = exports.ZipDeployError = exports.CreateWebAppError = exports.MissingSubscriptionRegistrationError = exports.FreeServerFarmsQuotaError = exports.CreateAppServicePlanError = exports.UnauthenticatedError = exports.NoConfigError = void 0;
const localizeUtils_1 = require("../../../common/localizeUtils");
exports.NoConfigError = {
    name: "NoConfigError",
    message: (pluginId, configKey) => [
        localizeUtils_1.getDefaultString("error.sa.NoConfigError", configKey, pluginId),
        localizeUtils_1.getLocalizedString("error.sa.NoConfigError", configKey, pluginId),
    ],
};
exports.UnauthenticatedError = {
    name: "UnauthenticatedError",
    message: () => [
        localizeUtils_1.getDefaultString("error.sa.UnauthenticatedError"),
        localizeUtils_1.getLocalizedString("error.sa.UnauthenticatedError"),
    ],
};
exports.CreateAppServicePlanError = {
    name: "CreateAppServicePlanError",
    message: (message) => [
        localizeUtils_1.getDefaultString("error.sa.CreateAppServicePlanError", message),
        localizeUtils_1.getLocalizedString("error.sa.CreateAppServicePlanError", message),
    ],
};
exports.FreeServerFarmsQuotaError = {
    name: "FreeServerFarmsQuotaError",
    message: (message) => [
        localizeUtils_1.getDefaultString("error.sa.FreeServerFarmsQuotaError", message),
        localizeUtils_1.getLocalizedString("error.sa.FreeServerFarmsQuotaError", message),
    ],
};
exports.MissingSubscriptionRegistrationError = {
    name: "MissingSubscriptionRegistrationError",
    message: (message) => [
        localizeUtils_1.getDefaultString("error.sa.MissingSubscriptionRegistrationError", message),
        localizeUtils_1.getLocalizedString("error.sa.MissingSubscriptionRegistrationError", message),
    ],
};
exports.CreateWebAppError = {
    name: "CreateWebAppError",
    message: (message) => [
        localizeUtils_1.getDefaultString("error.sa.CreateWebAppError", message),
        localizeUtils_1.getLocalizedString("error.sa.CreateWebAppError", message),
    ],
};
exports.ZipDeployError = {
    name: "ZipDeployError",
    message: (message) => [
        localizeUtils_1.getDefaultString("error.sa.ZipDeployError", message),
        localizeUtils_1.getLocalizedString("error.sa.ZipDeployError", message),
    ],
};
exports.UpdateApplicationSettingsError = {
    name: "UpdateApplicationSettingsError",
    message: (message) => [
        localizeUtils_1.getDefaultString("error.sa.UpdateApplicationSettingsError", message),
        localizeUtils_1.getLocalizedString("error.sa.UpdateApplicationSettingsError", message),
    ],
};
exports.UnhandledError = {
    name: "UnhandledError",
    message: (message) => [
        localizeUtils_1.getDefaultString("error.sa.UnhandledError", message),
        localizeUtils_1.getLocalizedString("error.sa.UnhandledError", message),
    ],
};
exports.EndpointInvalidError = {
    name: "EndpointInvalidError",
    message: (endpoint, message) => [
        localizeUtils_1.getDefaultString("error.sa.EndpointInvalidError", endpoint, message),
        localizeUtils_1.getLocalizedString("error.sa.EndpointInvalidError", endpoint, message),
    ],
};
exports.ZipDownloadError = {
    name: "ZipDownloadError",
    message: (message) => [
        localizeUtils_1.getDefaultString("error.sa.ZipDownloadError", message),
        localizeUtils_1.getLocalizedString("error.sa.ZipDownloadError", message),
    ],
};
exports.VersionFileNotExist = {
    name: "VersionFileNotExist",
    message: (filePath) => [
        localizeUtils_1.getDefaultString("error.sa.VersionFileNotExist", filePath !== null && filePath !== void 0 ? filePath : "File not exist."),
        localizeUtils_1.getLocalizedString("error.sa.VersionFileNotExist", filePath !== null && filePath !== void 0 ? filePath : "File not exist."),
    ],
};
//# sourceMappingURL=errors.js.map