export declare class Constants {
    static readonly SolutionPlugin: {
        id: string;
        configKeys: {
            resourceNameSuffix: string;
            subscriptionId: string;
            resourceGroupName: string;
            location: string;
            remoteTeamsAppId: string;
        };
    };
    static readonly AadAppPlugin: {
        id: string;
        configKeys: {
            clientId: string;
            clientSecret: string;
            applicationIdUris: string;
            oauthAuthority: string;
        };
    };
    static readonly FrontendPlugin: {
        id: string;
        configKeys: {
            endpoint: string;
        };
    };
    static readonly LocalDebugPlugin: {
        id: string;
        configKeys: {
            endpoint: string;
        };
    };
    static readonly SimpleAuthPlugin: {
        id: string;
        name: string;
        shortName: string;
        configKeys: {
            endpoint: string;
            filePath: string;
            environmentVariableParams: string;
            skuName: string;
        };
    };
    static readonly provisionModuleTemplateFileName: string;
    static readonly configModuleTemplateFileName: string;
    static readonly SimpleAuthBicepOutputSkuName: string;
    static readonly SimpleAuthBicepOutputEndpoint: string;
    static readonly SimpleAuthFileName: string;
    static readonly SimpleAuthZipName: (version: string) => string;
    static readonly SimpleAuthTag: (version: string) => string;
    static readonly SimpleAuthReleaseUrl: (tagName: string, fileName: string) => string;
    static readonly VersionFileName: string;
    static readonly ResourceNameMaxLength = 40;
    static readonly SimpleAuthSuffix = "sa";
    static readonly LocalPrefix = "local_";
    static readonly Component = "component";
    static readonly ApplicationSettingsKeys: {
        clientId: string;
        clientSecret: string;
        oauthAuthority: string;
        applicationIdUris: string;
        allowedAppIds: string;
        tabAppEndpoint: string;
        aadMetadataAddress: string;
    };
    static readonly ProgressBar: {
        start: string;
        provision: {
            title: string;
            registerResourceProvider: string;
            createAppServicePlan: string;
            createWebApp: string;
            zipDeploy: string;
        };
        postProvision: {
            title: string;
            updateWebApp: string;
        };
    };
    static readonly RegisterRersourceProviderFailed: (message: string) => string;
    static readonly FreeServerFarmsQuotaErrorFromAzure = "The maximum number of Free ServerFarms allowed in a Subscription is 10";
    static readonly FreeServerFarmsQuotaErrorToUser: string;
    static readonly MissingSubscriptionRegistrationErrorFromAzure = "The subscription is not registered to use namespace 'Microsoft.Web'";
    static readonly HelpLink = "https://aka.ms/teamsfx-sa-help";
    static readonly RequiredResourceProviders: string[];
    static readonly statusCodeUserError = 400;
    static readonly statusCodeServerError = 500;
}
export declare class Telemetry {
    static component: string;
    static errorCode: string;
    static errorType: string;
    static skuName: string;
    static errorMessage: string;
    static userError: string;
    static systemError: string;
    static isSuccess: string;
    static success: string;
    static fail: string;
    static appId: string;
}
export interface Message {
    log: string;
    telemetry: string;
}
export declare class Messages {
    static readonly getLog: (log: string) => string;
    private static readonly getEventName;
    static readonly StartLocalDebug: Message;
    static readonly EndLocalDebug: Message;
    static readonly StartPostLocalDebug: Message;
    static readonly EndPostLocalDebug: Message;
    static readonly StartProvision: Message;
    static readonly EndProvision: Message;
    static readonly StartGenerateArmTemplates: Message;
    static readonly EndGenerateArmTemplates: Message;
    static readonly StartUpdateArmTemplates: Message;
    static readonly EndUpdateArmTemplates: Message;
    static readonly StartPostProvision: Message;
    static readonly EndPostProvision: Message;
}
//# sourceMappingURL=constants.d.ts.map