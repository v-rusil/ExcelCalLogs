"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileSystemError = exports.NoProjectOpenedError = exports.InternalError = exports.PluginError = exports.ErrorType = void 0;
const constants_1 = require("./constants");
var ErrorType;
(function (ErrorType) {
    ErrorType[ErrorType["User"] = 0] = "User";
    ErrorType[ErrorType["System"] = 1] = "System";
})(ErrorType = exports.ErrorType || (exports.ErrorType = {}));
class PluginError extends Error {
    constructor(type, name, details, suggestions, innerError, showHelpLink = false) {
        super(details[0]);
        this.name = name;
        this.details = details;
        this.suggestions = suggestions;
        this.errorType = type;
        this.innerError = innerError;
        this.showHelpLink = showHelpLink;
        Object.setPrototypeOf(this, PluginError.prototype);
    }
    genMessage() {
        return `${this.details[1]} Suggestions: ${this.suggestions.join("\n")}`;
    }
    genDefaultMessage() {
        return `${this.details[0]} Suggestions: ${this.suggestions.join("\n")}`;
    }
}
exports.PluginError = PluginError;
class InternalError extends PluginError {
    constructor(details, innerError) {
        super(ErrorType.System, constants_1.ErrorNames.INTERNAL_ERROR, details, [constants_1.Suggestions.RETRY_THE_CURRENT_STEP()], innerError);
    }
}
exports.InternalError = InternalError;
class NoProjectOpenedError extends PluginError {
    constructor() {
        super(ErrorType.User, constants_1.ErrorNames.NO_PROJECT_OPENED_ERROR, ["No project opened.", "No project opened."], [constants_1.Suggestions.CREATE_PROJECT_OR_OPEN_EXISTING()]);
    }
}
exports.NoProjectOpenedError = NoProjectOpenedError;
class FileSystemError extends PluginError {
    constructor(details, innerError) {
        super(ErrorType.User, constants_1.ErrorNames.FILE_SYSTEM_ERROR, details, [constants_1.Suggestions.CHECK_PERMISSION(), constants_1.Suggestions.RETRY_THE_CURRENT_STEP()], innerError);
    }
}
exports.FileSystemError = FileSystemError;
//# sourceMappingURL=errors.js.map