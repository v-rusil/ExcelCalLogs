import { Inputs, SingleSelectQuestion, OptionItem, Platform } from "@microsoft/teamsfx-api";
import { Runtime } from "../../constants";
import { NotificationTrigger } from "./constants";
declare enum HostType {
    AppService = "app-service",
    Functions = "azure-functions"
}
export interface HostTypeTriggerOptionItem extends OptionItem {
    hostType: HostType;
    triggers?: NotificationTrigger[];
}
export declare const FunctionsTimerTriggerOptionItem: HostTypeTriggerOptionItem;
export declare const FunctionsHttpAndTimerTriggerOptionItem: HostTypeTriggerOptionItem;
export declare const FunctionsHttpTriggerOptionItem: HostTypeTriggerOptionItem;
export declare const AppServiceOptionItem: HostTypeTriggerOptionItem;
export declare const AppServiceOptionItemForVS: HostTypeTriggerOptionItem;
export declare const FunctionsOptionItems: HostTypeTriggerOptionItem[];
export declare function createHostTypeTriggerQuestion(platform?: Platform, runtime?: Runtime): SingleSelectQuestion;
export declare const showNotificationTriggerCondition: {
    validFunc: (input: unknown, inputs?: Inputs | undefined) => string | undefined;
    containsAny: string[];
};
export declare function getConditionOfNotificationTriggerQuestion(runtime: Runtime): {
    validFunc: (input: unknown, inputs?: Inputs | undefined) => Promise<string | undefined>;
};
export {};
//# sourceMappingURL=question.d.ts.map