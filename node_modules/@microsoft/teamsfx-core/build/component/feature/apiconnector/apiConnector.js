"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiConnector = exports.apiConnectorImpl = void 0;
const tslib_1 = require("tslib");
const lib_1 = require("@feathersjs/hooks/lib");
require("reflect-metadata");
const typedi_1 = require("typedi");
const ApiConnectorImpl_1 = require("./ApiConnectorImpl");
const result_1 = require("./result");
const constants_1 = require("../../constants");
require("../../connection/azureWebAppConfig");
const constants_2 = require("../../constants");
const actionExecutionMW_1 = require("../../middleware/actionExecutionMW");
require("../../resource/azureSql");
exports.apiConnectorImpl = new ApiConnectorImpl_1.ApiConnectorImpl();
let ApiConnector = class ApiConnector {
    constructor() {
        this.name = constants_2.ComponentNames.ApiConnector;
    }
    async add(context, inputs) {
        const res = await exports.apiConnectorImpl.scaffold(context, inputs);
        return result_1.ResultFactory.Success(Object.assign({ func: constants_1.UserTaskFunctionName.ConnectExistingApi }, res));
    }
};
tslib_1.__decorate([
    lib_1.hooks([
        actionExecutionMW_1.ActionExecutionMW({
            question: async (context, inputs) => {
                return await exports.apiConnectorImpl.generateQuestion(context, inputs);
            },
        }),
    ]),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", [Object, Object]),
    tslib_1.__metadata("design:returntype", Promise)
], ApiConnector.prototype, "add", null);
ApiConnector = tslib_1.__decorate([
    typedi_1.Service(constants_2.ComponentNames.ApiConnector)
], ApiConnector);
exports.ApiConnector = ApiConnector;
//# sourceMappingURL=apiConnector.js.map