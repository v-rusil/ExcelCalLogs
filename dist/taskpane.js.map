{"version":3,"file":"taskpane.js","mappings":"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CA;;AAEA;AACA;;;;;;;;;;;;;;;;UCzBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;;;;UErBA;UACA;UACA;UACA;UACA","sources":["webpack://office-addin-taskpane/./src/taskpane/ConditionalFormats.ts","webpack://office-addin-taskpane/./src/taskpane/jsonConfigUtils.ts","webpack://office-addin-taskpane/./src/taskpane/myConsole.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.ts","webpack://office-addin-taskpane/./src/taskpane/taskpane.html","webpack://office-addin-taskpane/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://office-addin-taskpane/webpack/bootstrap","webpack://office-addin-taskpane/webpack/runtime/compat get default export","webpack://office-addin-taskpane/webpack/runtime/define property getters","webpack://office-addin-taskpane/webpack/runtime/global","webpack://office-addin-taskpane/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane/webpack/runtime/make namespace object","webpack://office-addin-taskpane/webpack/runtime/publicPath","webpack://office-addin-taskpane/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane/webpack/before-startup","webpack://office-addin-taskpane/webpack/startup","webpack://office-addin-taskpane/webpack/after-startup"],"sourcesContent":["export enum enumConditionalFormatType {\r\n    ColorScale = \"ColorScale\",\r\n    ContainsText = \"ConstainsText\",\r\n    CellValue = \"CellValue\",\r\n    Custom =\"Custom\"\r\n  }\r\n  \r\n  export enum enumConditionalFormatTextOperator {\r\n    Contains = \"Contains\",\r\n    NotContains =\"NotContains\"\r\n  }\r\n\r\n  export enum enumCellValueOperator{\r\n    LT = \"LessThan\",\r\n    GT =\"GreaterThan\",\r\n    EQ = \"Equal\",\r\n    BETWEEN=\"Between\"\r\n  }\r\n  \r\n  export interface ConditionalFormat {\r\n    FriendlyName:string;\r\n    ColumnName:string;\r\n    CountOccurrences:boolean;\r\n    WarnIfOccurrencesGTZero:boolean;\r\n    Type:enumConditionalFormatType;\r\n    Style:string;\r\n    FontColor:string;\r\n    FillColor:string;\r\n\r\n    ColorScaleColorMinimum:string;\r\n    ColorScaleColorMaximum:string;\r\n\r\n    ContainsTextSearch:string;\r\n    ContainsTextOperator:enumConditionalFormatTextOperator;\r\n\r\n    CellValueFormula1:string;\r\n    CellValueFormula2:string;\r\n    CellValueOperator:enumCellValueOperator;\r\n\r\n    CustomFormula:string;\r\n  }\r\n  \r\n\r\n  export function CellValueOperatorToJsonEnum(op) : enumCellValueOperator\r\n  {\r\n      var retval:enumCellValueOperator = enumCellValueOperator.EQ;\r\n      switch (op) {\r\n          case Excel.ConditionalCellValueOperator.equalTo:\r\n            retval = enumCellValueOperator.EQ;\r\n            break;\r\n        \r\n          case Excel.ConditionalCellValueOperator.between:\r\n            retval = enumCellValueOperator.BETWEEN;\r\n            break;\r\n\r\n          case Excel.ConditionalCellValueOperator.greaterThan:\r\n            retval = enumCellValueOperator.GT;\r\n            break;\r\n      \r\n\r\n          case Excel.ConditionalCellValueOperator.lessThan:\r\n            retval = enumCellValueOperator.LT;\r\n            break;\r\n\r\n      default:\r\n          retval = enumCellValueOperator.EQ;\r\n          break;\r\n      }\r\n\r\n      return retval;\r\n  }\r\n\r\nexport function JsonEnumToCellValueOperator(op:enumCellValueOperator): Excel.ConditionalCellValueOperator\r\n{\r\n  var retval:Excel.ConditionalCellValueOperator = Excel.ConditionalCellValueOperator.equalTo;\r\n  switch (op) {\r\n      case enumCellValueOperator.EQ:\r\n        retval = Excel.ConditionalCellValueOperator.equalTo;\r\n        break;\r\n    \r\n      case enumCellValueOperator.BETWEEN:\r\n        retval = Excel.ConditionalCellValueOperator.between ;\r\n        break;\r\n\r\n      case enumCellValueOperator.GT:\r\n        retval = Excel.ConditionalCellValueOperator.greaterThan ;\r\n        break;\r\n  \r\n\r\n      case enumCellValueOperator.LT:\r\n        retval = Excel.ConditionalCellValueOperator.lessThan ;\r\n        break;\r\n\r\n  default:\r\n      retval = Excel.ConditionalCellValueOperator.equalTo;\r\n      break;\r\n  }\r\n\r\n  return retval;\r\n}\r\n\r\n","import { ColumnDefinition, EnumColumnHorizontalAlignment, EnumColumnVerticalAlignment } from './columnDefinitions';\r\nimport {ConditionalFormat, enumConditionalFormatType, enumConditionalFormatTextOperator, enumCellValueOperator} from './ConditionalFormats'\r\nimport { FilterDefinition } from './FilterDefinitions';\r\n\r\n\r\nexport class JsonConfigUtils \r\n{\r\n  public columns: ColumnDefinition[] = [];\r\n  public conditionalFormats: ConditionalFormat[]=[];\r\n  public filterDefinitions: FilterDefinition[]=[];\r\n\r\n  \r\n  \r\n  constructor() {\r\n    // this.json = value;\r\n  }\r\n  \r\n  getValue(): string {\r\n    return JSON.stringify(this, null, 2);\r\n  }\r\n\r\n  //#region Column Definitions\r\n  addColumn(col: ColumnDefinition): ColumnDefinition {\r\n    this.columns.push(col);\r\n    return col;\r\n  }\r\n\r\n  addColumnByName( columnName: string,isMandatory: boolean, horizontalAlignment?: string, verticalAlignment?: EnumColumnVerticalAlignment,\r\n                    columnWidth?: number, indentLevel?: number, style?: string, numberFormat?: string, visible: boolean = true, autosizeColumn: boolean = false,\r\n                    searchFor:string=\"\", replaceWith:string=\"\"\r\n                 ): ColumnDefinition {\r\n\r\n    const col: ColumnDefinition = \r\n\r\n                                  { columnName,\r\n                                    isMandatory,\r\n                                    horizontalAlignment,\r\n                                    verticalAlignment,\r\n                                    columnWidth,\r\n                                    indentLevel,\r\n                                    style,\r\n                                    numberFormat,\r\n                                    visible,\r\n                                    autosizeColumn,\r\n                                    searchFor,\r\n                                    replaceWith\r\n                                };\r\n    this.columns.push(col);\r\n    return col;\r\n  }\r\n\r\n  convertColumnDefinitionsToJson(): string {\r\n    // Convert the array of ColumnDefinition objects to a JSON string\r\n    const json: string = JSON.stringify(this.columns);\r\n    return json;\r\n  }\r\n\r\n\r\nconvertToHorizontalAlignment(value: string) : Excel.HorizontalAlignment\r\n{\r\n  switch (value) {\r\n    case \"Center\":\r\n      return Excel.HorizontalAlignment.center;\r\n      break;\r\n    case \"Left\":\r\n      return Excel.HorizontalAlignment.left;\r\n      break;\r\n    case \"Right\":\r\n      return Excel.HorizontalAlignment.right;\r\n      break;\r\n    case \"Justify\":\r\n      return Excel.HorizontalAlignment.justify\r\n      break;\r\n    case\"General\":\r\n    return Excel.HorizontalAlignment.general\r\n      break;\r\n    default:\r\n      return Excel.HorizontalAlignment.general\r\n      break;\r\n  }\r\n}\r\n\r\nconvertToVerticalAlignment(value: string): Excel.VerticalAlignment {\r\n  switch (value) {\r\n    case \"Bottom\":\r\n      return Excel.VerticalAlignment.bottom;\r\n    case \"Center\":\r\n      return Excel.VerticalAlignment.center;\r\n    case \"Distributed\":\r\n      return Excel.VerticalAlignment.distributed;\r\n    case \"Justify\":\r\n      return Excel.VerticalAlignment.justify;\r\n    case\"Top\":\r\n        return Excel.VerticalAlignment.top;\r\n    default:\r\n      return Excel.VerticalAlignment.top;\r\n  }\r\n}\r\n\r\n//#endregion\r\n\r\n//#region ConditionalFormats Definitions\r\npublic addConditionalFormat(cf: ConditionalFormat): void {\r\n  this.conditionalFormats.push(cf);\r\n}\r\n\r\npublic addConditionalFormatByName(friendlyName: string, columnName:string, countOccurrences: boolean, warnIfOccurrencesGTZero: boolean, \r\n                                  type: enumConditionalFormatType, style: string, fontColor: string, fillColor: string, \r\n                                  colorScaleColorMinimum: string, colorScaleColorMaximum: string, \r\n                                  containsTextSearch: string, containsTextOperator: enumConditionalFormatTextOperator, \r\n                                  cellValueFormula1: string, cellValueFormula2: string, cellValueOperator: enumCellValueOperator, \r\n                                  customFormula: string): void \r\n{\r\n  const cf: ConditionalFormat = {\r\n      FriendlyName: friendlyName,\r\n      ColumnName:columnName,\r\n      CountOccurrences: countOccurrences,\r\n      WarnIfOccurrencesGTZero: warnIfOccurrencesGTZero,\r\n      Type: type,\r\n      Style: style,\r\n      FontColor: fontColor,\r\n      FillColor: fillColor,\r\n      ColorScaleColorMinimum: colorScaleColorMinimum,\r\n      ColorScaleColorMaximum: colorScaleColorMaximum,\r\n      ContainsTextSearch: containsTextSearch,\r\n      ContainsTextOperator: containsTextOperator,\r\n      CellValueFormula1: cellValueFormula1,\r\n      CellValueFormula2: cellValueFormula2,\r\n      CellValueOperator: cellValueOperator,\r\n      CustomFormula: customFormula\r\n  };\r\n  this.conditionalFormats.push(cf);\r\n}\r\n\r\n\r\npublic addConditionalFormatColorScale(friendlyName: string, columnName:string, countOccurrences: boolean, warnIfOccurrencesGTZero: boolean, \r\n  style: string, fontColor: string, fillColor: string, \r\n  colorScaleColorMinimum: string, colorScaleColorMaximum: string ): void \r\n{\r\n  const cf: ConditionalFormat = {\r\n    FriendlyName: friendlyName,\r\n    ColumnName: columnName,\r\n    CountOccurrences: countOccurrences,\r\n    WarnIfOccurrencesGTZero: warnIfOccurrencesGTZero,\r\n    Type: enumConditionalFormatType.ColorScale,\r\n    Style: style,\r\n    FontColor: fontColor,\r\n    FillColor: fillColor,\r\n    ColorScaleColorMinimum: colorScaleColorMinimum,\r\n    ColorScaleColorMaximum: colorScaleColorMaximum,\r\n    ContainsTextSearch: null,\r\n    ContainsTextOperator: null,\r\n    CellValueFormula1: null,\r\n    CellValueFormula2: null,\r\n    CellValueOperator: null,\r\n    CustomFormula: null\r\n  };\r\n  this.conditionalFormats.push(cf);\r\n}\r\n\r\n\r\npublic addConditionalFormatContainsText(friendlyName: string, columnName:string, countOccurrences: boolean, warnIfOccurrencesGTZero: boolean, \r\n  style: string, fontColor: string, fillColor: string, \r\n  containsTextSearch: string, containsTextOperator: enumConditionalFormatTextOperator): void \r\n{\r\n    const cf: ConditionalFormat = {\r\n      FriendlyName: friendlyName,\r\n      ColumnName: columnName,\r\n      CountOccurrences: countOccurrences,\r\n      WarnIfOccurrencesGTZero: warnIfOccurrencesGTZero,\r\n      Type: enumConditionalFormatType.ContainsText,\r\n      Style: style,\r\n      FontColor: fontColor,\r\n      FillColor: fillColor,\r\n      ColorScaleColorMinimum: null,\r\n      ColorScaleColorMaximum: null,\r\n      ContainsTextSearch: containsTextSearch,\r\n      ContainsTextOperator: containsTextOperator,\r\n      CellValueFormula1: null,\r\n      CellValueFormula2: null,\r\n      CellValueOperator: null,\r\n      CustomFormula: null\r\n    };\r\n    this.conditionalFormats.push(cf);\r\n}\r\n\r\n\r\npublic addConditionalFormatCellValue(friendlyName: string, ColumnName:string, countOccurrences: boolean, warnIfOccurrencesGTZero: boolean, \r\n  style: string, fontColor: string, fillColor: string, \r\n  cellValueFormula1: string, cellValueFormula2: string, cellValueOperator: enumCellValueOperator ): void \r\n{\r\n  const cf: ConditionalFormat = {\r\n    FriendlyName: friendlyName,\r\n    ColumnName: ColumnName,\r\n    CountOccurrences: countOccurrences,\r\n    WarnIfOccurrencesGTZero: warnIfOccurrencesGTZero,\r\n    Type: enumConditionalFormatType.CellValue,\r\n    Style: style,\r\n    FontColor: fontColor,\r\n    FillColor: fillColor,\r\n    ColorScaleColorMinimum: null,\r\n    ColorScaleColorMaximum: null,\r\n    ContainsTextSearch: null,\r\n    ContainsTextOperator: null,\r\n    CellValueFormula1: cellValueFormula1,\r\n    CellValueFormula2: cellValueFormula2,\r\n    CellValueOperator: cellValueOperator,\r\n    CustomFormula: null\r\n  };\r\n  this.conditionalFormats.push(cf);\r\n}\r\n\r\n\r\npublic addConditionalFormatCustom(friendlyName: string, columnName:string, countOccurrences: boolean, warnIfOccurrencesGTZero: boolean, \r\n  style: string, fontColor: string, fillColor: string, \r\n  customFormula: string): void \r\n{\r\n    const cf: ConditionalFormat = {\r\n      FriendlyName: friendlyName,\r\n      ColumnName: columnName,\r\n      CountOccurrences: countOccurrences,\r\n      WarnIfOccurrencesGTZero: warnIfOccurrencesGTZero,\r\n      Type: enumConditionalFormatType.Custom,\r\n      Style: style,\r\n      FontColor: fontColor,\r\n      FillColor: fillColor,\r\n      ColorScaleColorMinimum: null,\r\n      ColorScaleColorMaximum: null,\r\n      ContainsTextSearch: null,\r\n      ContainsTextOperator: null,\r\n      CellValueFormula1: null,\r\n      CellValueFormula2: null,\r\n      CellValueOperator: null,\r\n      CustomFormula: customFormula\r\n    };\r\n    this.conditionalFormats.push(cf);\r\n}\r\n\r\n\r\n//#endregion\r\n\r\n//#region Add filter Condition \r\naddFilterCondition( columnName:string, value:string, key:string):FilterDefinition\r\n{\r\n  const newFilter:FilterDefinition = {\r\n    FilterActiveByUIOnly:false,\r\n    FilterKey:key,\r\n    FilterValue:value,\r\n    ColumnName:columnName,\r\n    FriendlyName:`${columnName} filter ${value}`\r\n  }\r\n  this.filterDefinitions.push(newFilter);\r\n  return newFilter;\r\n}\r\n//#endregion\r\n\r\n}\r\n","export class myConsole\r\n{\r\n\r\nstatic count:number = 0;\r\n\r\n  constructor() {\r\n    myConsole.count = 0;\r\n  }\r\n\r\n  public static addCounter(): void {\r\n    myConsole.count++;\r\n  }\r\n\r\n  public static log(message:string):void \r\n  {\r\n    console.log(message);\r\n    myConsole.addCounter();\r\n    myConsole.addRow(myConsole.count.toString(), message);\r\n  }\r\n\r\n    private static addRow(first: string, second: string): void {\r\n        const myConsole = document.querySelector('#myConsole');\r\n        const newRow = document.createElement('div');\r\n        newRow.classList.add('row');\r\n        const firstCell = document.createElement('div');\r\n        firstCell.classList.add('col-2');\r\n        firstCell.innerHTML = `<small> ${first}</small>`;\r\n        const secondCell = document.createElement('div');\r\n        secondCell.classList.add('col-10');\r\n        secondCell.innerHTML = `<small>${second}</small>`;\r\n        newRow.appendChild(firstCell);\r\n        newRow.appendChild(secondCell);\r\n        myConsole.appendChild(newRow);\r\n      }\r\n     \r\n      public static reset()\r\n      {\r\n        myConsole.count=0;\r\n        const consoleDiv = document.querySelector('#myConsole');\r\n        consoleDiv.innerHTML=\"\";\r\n\r\n      }\r\n}","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\nimport { error } from 'jquery';\r\nimport { CellValueOperatorToJsonEnum, ConditionalFormat, JsonEnumToCellValueOperator, enumCellValueOperator, enumConditionalFormatTextOperator, enumConditionalFormatType } from './ConditionalFormats';\r\nimport { FilterDefinition } from './FilterDefinitions';\r\nimport { CDLToEnglishActionsTimeline } from './buildTimeLine/CDLToEnglishActionsTimeline';\r\nimport { timelineDataObject } from './buildTimeLine/timelineDataObject';\r\nimport { ColumnDefinition, EnumColumnHorizontalAlignment, EnumColumnVerticalAlignment } from \"./columnDefinitions\";\r\nimport { tblToJson } from './excelUtils';\r\nimport { JsonConfigUtils } from './jsonConfigUtils';\r\nimport { myConsole } from \"./myConsole\";\r\n\r\n\r\n/* global console, document, Excel, Office */\r\nmodule.exports = ctx;\r\n\r\n\r\nvar ctx:Excel.RequestContext\r\n\r\nvar tbl:Excel.Table;\r\nvar sheet:Excel.Worksheet;\r\nvar tblRange:Excel.Range;\r\nvar jsonConfigUtils:JsonConfigUtils;\r\n\r\n\r\n//#region Constants\r\n// Organizer table styles and checkbox\r\nconst organizerTableStyle:string = \"TableStyleLight10\";\r\nconst attendeeTableStyle:string = \"TableStyleLight13\";\r\n\r\nconst organizerTabColor:string = \"#FFA500\"; //orange\r\nconst attendeeTabColor:string = \"#ADD8E6\";  //light blue\r\n//#endregion\r\n\r\n\r\n//#region JSON properties of Callog\r\nvar jsonLog:string = `\r\n  [  \r\n    {    \r\n      \"columnName\": \"ModifiedDate\",   \r\n      \"isMandatory\": \"true\", \r\n      \"horizontalAlignment\": \"Center\",    \r\n      \"verticalAlignment\": \"Bottom\",    \r\n      \"columnWidth\": 180,    \r\n      \"indentLevel\": 1,    \r\n      \"style\": \"Neutral\",\r\n      \"numberFormat\": \"MM/dd/yyyy HH:mm:ss\"  \r\n    },  \r\n    {    \r\n      \"columnName\": \"Age\",  \r\n      \"isMandatory\": \"false\",  \r\n      \"horizontalAlignment\": \"center\",    \r\n      \"verticalAlignment\": \"middle\",    \r\n      \"columnWidth\": 80,    \r\n      \"indentLevel\": 1,    \r\n      \"style\": \"italic\",  \r\n      \"numberFormat\": \"MM/dd/yyyy HH:mm:ss\"  \r\n    }\r\n  ]`\r\n\r\n//#endregion\r\n\r\n\r\n//#region Properties\r\nvar _totalTblRows: number = -1;\r\nasync function totalTblRows(): Promise<number>\r\n{\r\n  if (_totalTblRows <= 0) {\r\n    tblRange.load([\"rowCount\"]);\r\n    await ctx.sync();\r\n    \r\n    _totalTblRows = tblRange.rowCount;\r\n      \r\n  }\r\n  return _totalTblRows;\r\n}\r\n\r\n// dropdown Type of CDL log\r\nfunction typeCDL(): string {\r\n  const selectElement = document.getElementById('typeCDL') as HTMLSelectElement;\r\n  return selectElement.value;\r\n}\r\n\r\n\r\nasync function isOrganizer():Promise<boolean>\r\n{\r\n  const checkbox = document.getElementById(\"isOrganizer\") as HTMLInputElement;\r\n  return checkbox.checked;\r\n}\r\n\r\n\r\nasync function warn1KRows():Promise<boolean>\r\n{\r\n  const checkbox = document.getElementById(\"warn1KRows\") as HTMLInputElement;\r\n  return checkbox.checked;\r\n}\r\n\r\nasync function hideLessRelevants():Promise<boolean>\r\n{\r\n  const checkbox = document.getElementById(\"hideLessRelevants\") as HTMLInputElement;\r\n  return checkbox.checked;\r\n}\r\n\r\n//#endregion\r\n\r\n//#region Helper methods\r\nasync function showSpinner(show:boolean)\r\n{\r\n  var element = document.getElementById(\"spinner\");\r\n  if (show) {\r\n    element.classList.remove(\"invisible\");\r\n  } else {\r\n    element.classList.add(\"invisible\");\r\n  }\r\n}\r\n\r\nfunction AddMessage(message: string) {\r\n  const p = document.getElementById(\"statusMessage\");\r\n  p.textContent = message;\r\n  myConsole.log(message);\r\n}\r\n\r\nenum enumTypeAnalysis\r\n{\r\n  Warning, \r\n  Action, \r\n  Danger, \r\n  Success\r\n}\r\nasync function addAnalysisInfo(title:string, badge:number, message:string, smallfooter:string, typeanalysis:enumTypeAnalysis)\r\n{\r\n  // <a href=\"#\" class=\"list-group-item list-group-item-action list-group-item-warning\">\r\n  //    <div class=\"d-flex w-100 justify-content-between\">\r\n  //      <h5 class=\"mb-1\">Row limit</h5>\r\n  //      <span class=\"badge badge-primary badge-pill\">1002</span>\r\n  //    </div>\r\n  //    <p class=\"mb-1\">If rows returned are close to 1K</p>\r\n  //    <small>Get-CalendarDiagnosticObjects</small>\r\n  // </a>\r\n    const analysisDiv = document.getElementById(\"analysisInfo\");\r\n  \r\n    // Create the <a> element with the appropriate class based on the enum value\r\n    const aElement = document.createElement(\"a\");\r\n    switch (typeanalysis) {\r\n      case enumTypeAnalysis.Warning:\r\n        aElement.classList.add(\"list-group-item\", \"list-group-item-action\", \"list-group-item-warning\");\r\n        break;\r\n      case enumTypeAnalysis.Action:\r\n        aElement.classList.add(\"list-group-item\", \"list-group-item-action\");\r\n        break;\r\n      case enumTypeAnalysis.Danger:\r\n        aElement.classList.add(\"list-group-item\", \"list-group-item-action\", \"list-group-item-danger\");\r\n        break;\r\n      case enumTypeAnalysis.Success:\r\n        aElement.classList.add(\"list-group-item\", \"list-group-item-action\", \"list-group-item-success\");\r\n        break;\r\n    }\r\n  \r\n    // Create the <div> element with the appropriate classes and contents\r\n    const divElement = document.createElement(\"div\");\r\n    divElement.classList.add(\"d-flex\", \"w-100\", \"justify-content-between\");\r\n    const h5Element = document.createElement(\"h5\");\r\n    h5Element.classList.add(\"mb-1\");\r\n    h5Element.innerText = title;\r\n    const spanElement = document.createElement(\"span\");\r\n    spanElement.classList.add(\"badge\", \"badge-primary\", \"badge-pill\");\r\n    if (badge == 0) {\r\n      spanElement.classList.add(\"invisible\");\r\n    }\r\n    spanElement.innerText = badge.toString();\r\n    divElement.appendChild(h5Element);\r\n    divElement.appendChild(spanElement);\r\n  \r\n    // Create the <p> element with the message\r\n    const pElement = document.createElement(\"p\");\r\n    pElement.classList.add(\"mb-1\");\r\n    pElement.innerText = message;\r\n  \r\n    // Create the <small> element with the footer text\r\n    const smallElement = document.createElement(\"small\");\r\n    smallElement.innerText = smallfooter;\r\n  \r\n    // Add the child elements to the <a> element\r\n    aElement.appendChild(divElement);\r\n    aElement.appendChild(pElement);\r\n    aElement.appendChild(smallElement);\r\n  \r\n    // Add the <a> element to the analysis div\r\n    analysisDiv.appendChild(aElement);\r\n  \r\n    AddMessage(message);\r\n  }\r\n\r\n  async function resetAnalysisInfo()\r\n  {\r\n    const analysisInfoDiv = document.getElementById('analysisInfo');\r\n    analysisInfoDiv.innerHTML = '';\r\n  }\r\n\r\n  async function freezeColumns(columnName: string)\r\n{\r\n    try {\r\n      AddMessage(`Freezing upto column ${columnName} (3 hardcoded for now)`);\r\n      const column = tbl.columns.getItem(columnName);\r\n      sheet.freezePanes.freezeColumns(column.index);\r\n      await ctx.sync();\r\n      AddMessage(`Column ${columnName} Frozen successfully`);\r\n    }\r\n    catch (error) {\r\n      AddMessage(`Error freezing column ${columnName}: ${error}`);\r\n    }\r\n  \r\n}\r\n//#endregion\r\n\r\n//#region Init OfficeJS\r\nOffice.onReady((info) => {\r\n  if (info.host === Office.HostType.Excel) {\r\n    jsonConfigUtils = new JsonConfigUtils();\r\n\r\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\r\n    \r\n    document.getElementById(\"run\").onclick = run;\r\n    document.getElementById(\"createConfig\").onclick = createConfig;\r\n    document.getElementById(\"testConfig\").onclick = testConfig;\r\n    document.getElementById(\"testJsonFile\").onclick = testJsonFile;\r\n    \r\n    $(function () {\r\n      $('[data-toggle=\"tooltip\"]').tooltip()\r\n    });\r\n\r\n    resetAnalysisInfo();\r\n  }\r\n});\r\n\r\n//#endregion\r\n\r\n\r\n//#region WorkSheet Custom Properties\r\nasync function resetCustomProperties()\r\n{\r\n  \r\n  sheet.customProperties.load();\r\n  await ctx.sync();\r\n\r\n  // Iterate over all custom properties and delete them\r\n  for (const key in sheet.customProperties.items) {\r\n    if (sheet.customProperties.items.hasOwnProperty(key)) {\r\n      const customProperty = sheet.customProperties.items[key];\r\n      customProperty.delete();\r\n    }\r\n  }\r\n  await ctx.sync();\r\n}\r\n\r\nasync function addCustomProperty(key:string, value:string):Promise<Excel.CustomProperty>\r\n{\r\n    sheet.load([\"customProperties\"]);await ctx.sync();\r\n    sheet.customProperties.add(key, value); await ctx.sync();\r\n    sheet.customProperties.load([\"key\", \"value\", \"type\"]);await ctx.sync();\r\n    var cp:any = sheet.customProperties.getItemOrNullObject(key); await ctx.sync();\r\n    return cp as Excel.CustomProperty;\r\n}\r\n\r\nasync function GetCustomPropertyValue(key:string):Promise<string>\r\n{\r\n    sheet.load([\"customProperties\"]);await ctx.sync();\r\n    sheet.customProperties.load([\"items\"]);await ctx.sync();\r\n    var cp = sheet.customProperties.getItemOrNullObject(key); await ctx.sync();\r\n    cp.load([\"key\", \"value\", \"type\"]);await ctx.sync();\r\n    return cp.value ?? \"\" ;\r\n}\r\n//#endregion\r\n\r\n\r\n//#region Create Table\r\nasync function CreateTable(context, keepFormats:boolean=false) : Promise<boolean>\r\n{ \r\n  try {\r\n\r\n    sheet.load([\"tables\"]); await ctx.sync();\r\n\r\n    const tblCount = sheet.tables.getCount(); await ctx.sync();\r\n    if (tblCount.value > 1) {\r\n      addAnalysisInfo(\"CreateTable Error\", tblCount.value,`There is more than 1 table in the current worksheet. This is not supported. `,\"None, or 1 table only supported\",enumTypeAnalysis.Danger);\r\n      return false;\r\n    }\r\n\r\n    \r\n    if (tblCount.value == 1) \r\n    {\r\n      tbl = sheet.tables.getItemAt(0); await ctx.sync();\r\n      tblRange = tbl.getRange(); await ctx.sync();\r\n      if (keepFormats){\r\n        AddMessage(`1 table found in current worksheet. Keeping formats`);  \r\n        return true;\r\n      } \r\n      \r\n      AddMessage(`1 table found in current worksheet. Clearing formats`);\r\n      tblRange.clear(\"Formats\"); await ctx.sync();\r\n      tbl.convertToRange();await ctx.sync();\r\n      resetCustomProperties();\r\n      await context.sync();\r\n      AddMessage(`Table cleared!`);\r\n    }\r\n\r\n    // Define the range of cells you want to select\r\n    const range = sheet.getUsedRange();\r\n    range.load(\"address\");\r\n    await ctx.sync();\r\n\r\n    tbl = sheet.tables.add(range, true /* hasHeaders */); await ctx.sync();\r\n    tblRange=tbl.getRange();\r\n    await context.sync();\r\n    \r\n    if (keepFormats) return true; //just create table and leave\r\n\r\n    tblRange.clear(\"Formats\");\r\n    resetCustomProperties();\r\n    await context.sync();\r\n\r\n    var _isOrganizer = await isOrganizer();\r\n    if (_isOrganizer) {\r\n      tbl.style = organizerTableStyle;  \r\n      sheet.tabColor = organizerTabColor;\r\n      addCustomProperty(\"Organizer\", \"true\");\r\n    }\r\n    else{\r\n      tbl.style = attendeeTableStyle;  \r\n      sheet.tabColor = attendeeTabColor;\r\n      \r\n      addCustomProperty(\"Organizer\", \"false\");\r\n    }\r\n\r\n    tbl.load('tableStyle');\r\n    tbl.columns.load();\r\n    tblRange = tbl.getRange();\r\n    await context.sync();\r\n    \r\n    AddMessage(\"Table creation succeeded\");\r\n\r\n    return true;\r\n    \r\n  } catch (error) {\r\n    console.error(error);\r\n    addAnalysisInfo(\"create Table\", 0, `Error creating table ${error}`, \"Create Table\", enumTypeAnalysis.Danger );   \r\n    return false;  \r\n  }\r\n}\r\n\r\n//#endregion \r\n\r\n//#region Filters methods\r\nasync function ClearFilters(ColumnName:string, value:string)\r\n{\r\n  tbl.clearFilters();\r\n  AddMessage(`Table filters cleared`);  \r\n}\r\n\r\nasync function SetFilter(ColumnName:string, value:string)\r\n{\r\n  tbl.columns.load();\r\n  await ctx.sync();\r\n  let columnFilter = tbl.columns.getItemOrNullObject(ColumnName).filter;\r\n  await ctx.sync();\r\n  columnFilter.apply({\r\n    filterOn: Excel.FilterOn.values,\r\n    values: [value]\r\n  });\r\nawait ctx.sync();\r\n\r\n\r\nAddMessage(`Column ${ColumnName} Filtered for value ${value}`);\r\n}\r\n\r\nasync function FilterIgnorable(value:string) {\r\n  tbl.columns.load();\r\n  await ctx.sync();\r\n  let ignorableFilter = tbl.columns.getItemOrNullObject(\"Ignorable\").filter;\r\n  await ctx.sync();\r\n  ignorableFilter.apply({\r\n    filterOn: Excel.FilterOn.values,\r\n    values: [value]\r\n  });\r\nawait ctx.sync();\r\n\r\n\r\nAddMessage(\"Cells filtered. \");\r\n}\r\n\r\n//#endregion\r\n\r\n\r\n//#region FormatDate (Legacy to remove)\r\nasync function FormatDateColumn( context, columnName:string){\r\n  const col:Excel.TableColumn = tbl.columns.getItemOrNullObject(columnName);\r\n  const colRange:Excel.Range = col.getDataBodyRange();\r\n  await context.sync();\r\n\r\n  const criteria: Excel.ReplaceCriteria = {\r\n    completeMatch: false, /* Use a complete match to skip cells that already say \"okay\". */\r\n    matchCase: true /* Ignore case when comparing strings. */\r\n  };\r\n  colRange.replaceAll(\"Z\", \"\", criteria);\r\n\r\n  await context.sync();\r\n\r\n  // Apply horizontal alignment as \"center\", vertical alignment as \"bottom\" and wrap text as \"false\"\r\n  colRange.format.horizontalAlignment = \"Center\";\r\n  colRange.format.verticalAlignment = \"Bottom\";\r\n  colRange.format.wrapText = false;\r\n  // colRange.format.columnWidth=19;\r\n  \r\n  const rangeWidth:Excel.Range = colRange.getEntireColumn();\r\n  rangeWidth.load(\"format\"); await context.sync();\r\n  rangeWidth.format.autofitColumns();\r\n \r\n  await context.sync();\r\n\r\n}\r\n\r\n\r\n//#endregion\r\n\r\n//#region Highlights methods\r\n\r\nasync function HighlightIgnorable(){\r\n\r\n  const colRange:Excel.Range = tbl.columns.getItemOrNullObject(\"Ignorable\").getDataBodyRange();\r\n\r\n  const conditionalFormat = colRange.conditionalFormats.add(\r\n    Excel.ConditionalFormatType.containsText\r\n  );\r\n\r\n  conditionalFormat.textComparison.format.font.color = \"blue\";\r\n  conditionalFormat.textComparison.format.fill.color=\"#ADD8E6\";\r\n  \r\n  conditionalFormat.textComparison.rule = {\r\n    operator: Excel.ConditionalTextOperator.contains,\r\n    text: \"TRUE\"\r\n  };\r\n  await ctx.sync();\r\n\r\n  return await CountFilterOccurrences(conditionalFormat.getRange());\r\n  \r\n}\r\n\r\nasync function HighlightApptSequence(context){\r\n    const col = tbl.columns.getItemOrNullObject(\"ApptSequence\");\r\n    \r\n    const range = col.getDataBodyRange();\r\n    await ctx.sync();\r\n    const conditionalFormat = range.conditionalFormats\r\n        .add(Excel.ConditionalFormatType.colorScale);\r\n    const criteria = {\r\n        minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: \"white\" },\r\n        // midpoint: { formula: \"50\", type: Excel.ConditionalFormatColorCriterionType.percent, color: \"yellow\" },\r\n        maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: \"green\" }\r\n    };\r\n    conditionalFormat.colorScale.criteria = criteria;\r\n\r\n    await context.sync();\r\n}\r\n\r\n\r\nasync function HighlightCRA(context):Promise<number>\r\n{\r\n\r\n    const colRange:Excel.Range = tbl.columns.getItemOrNullObject(\"Client\").getRange();\r\n\r\n    const conditionalFormat = colRange.conditionalFormats.add(\r\n      Excel.ConditionalFormatType.containsText\r\n    );\r\n\r\n    // Color the font of every cell containing \"Delayed\".\r\n    conditionalFormat.textComparison.format.font.color = \"red\";\r\n    conditionalFormat.textComparison.rule = {\r\n      operator: Excel.ConditionalTextOperator.contains,\r\n      text: \"CRA:CalendarRepairAssistant\"\r\n    };\r\n    await context.sync();\r\n\r\n    return await CountFilterOccurrences(conditionalFormat.getRange());\r\n  \r\n}\r\n\r\nasync function HighLightCreates(context):Promise<number>\r\n{\r\n  const colRange:Excel.Range = tbl.columns.getItemOrNullObject(\"Trigger\").getRange();\r\n\r\n  const conditionalFormat = colRange.conditionalFormats.add(\r\n    Excel.ConditionalFormatType.containsText\r\n  );\r\n\r\n  // Color the font of every cell containing \"Delayed\".\r\n  conditionalFormat.textComparison.format.fill.color = \"Green\";\r\n  conditionalFormat.textComparison.rule = {\r\n    operator: Excel.ConditionalTextOperator.contains,\r\n    text: \"Create\"\r\n  };\r\n\r\n  await context.sync();\r\n  var r:Excel.Range = conditionalFormat.getRange();\r\n  var n: number =  await CountFilterOccurrences(r);\r\n  return n;\r\n\r\n}\r\n\r\n//#endregion\r\n\r\n//#region Count filter Occurrences\r\nasync function CountFilterOccurrences( filterRange:Excel.Range ):Promise<number>\r\n{\r\n\r\n// var visibleTableRange: Excel.RangeView = tbl.getDataBodyRange().getVisibleView();\r\n// visibleTableRange.load([\"rowCount\"]); await ctx.sync();\r\n// var rows:number = visibleTableRange.rowCount;\r\n// console.log(`rows Filtered  %d`, rows);\r\n\r\n  await ctx.sync();\r\n  // Get the range of cells affected by the conditional format\r\n  const affectedRange = await filterRange.getIntersectionOrNullObject(tbl.getRange()); await ctx.sync();\r\n  affectedRange.load([\"rowCount\"]); await ctx.sync();\r\n  // Get the number of rows affected by the conditional format\r\n  const rowCount = affectedRange ? affectedRange.rowCount : 0;\r\n  return rowCount;\r\n}\r\n\r\n//#endregion\r\n\r\n\r\n//#region json Methods\r\nfunction isJSONString(str: any): boolean {\r\n  try {\r\n    const jsonObj = JSON.parse(str);\r\n    return typeof jsonObj === \"object\" && jsonObj !== null;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n}\r\n\r\nasync function applyJsonConfig(json: any, hideLessRelevants:boolean=false): Promise<boolean> {\r\n  \r\n  var jsonArray;\r\n  var  retval:boolean=true;\r\n  \r\n  if (typeof json === \"string\") {\r\n    if (!isJSONString(json)) {\r\n      throw new Error(\"Invalid JSON string\");\r\n    }\r\n    jsonArray = JSON.parse(json);\r\n  } else if (typeof json === \"object\") {\r\n    jsonArray = json;\r\n  } else {\r\n    throw new Error(\"Parameter must be a string or an object\");\r\n  }\r\n  \r\n  if (typeof jsonArray != \"object\") \r\n  {\r\n    throw new Error(\"Input JSON is not an Object.\");\r\n  }\r\n\r\n  retval = retval && await applyJsonColDefinitions(jsonArray, hideLessRelevants);\r\n  retval = retval && await applyJSONHighlights(jsonArray);\r\n  retval = retval && await applyJSONFilters(jsonArray);\r\n  AddMessage(\"JSON Config Applied successfully!\");\r\n  return retval;\r\n}\r\n\r\nasync function applyJsonColDefinitions(jsonArray:any, hideLessRelevants:boolean=false): Promise<boolean>\r\n{\r\n  try \r\n  {\r\n    //jsonArray = JSON.parse(json);\r\n\r\n    for (const element of jsonArray.columns) \r\n    {\r\n        var tblCol:Excel.TableColumn;\r\n        var tblColRange:Excel.Range;\r\n        var tblColFormat:Excel.RangeFormat;\r\n        if (element.columnName == undefined || element.columnName == \"\") \r\n        {\r\n          AddMessage(\"Skipping json element as it is undefined ColumnName\");\r\n          continue;\r\n        }\r\n\r\n        tblCol = tbl.columns.getItemOrNullObject(element.columnName);\r\n        tblCol.load([\"isNullObject\"]);\r\n        ctx.trackedObjects.add([tblCol]);;\r\n        await ctx.sync();\r\n\r\n        if (tblCol.isNullObject) \r\n        {\r\n          AddMessage(`Column Name does not exist: ${element.columnName}`);\r\n          if (element.isMandatory !== undefined && element.isMandatory !== \"\" && element.isMandatory == \"true\") {\r\n            AddMessage(`isMandatory: ${element.isMandatory} Continuing to next column...`);\r\n          }\r\n          continue;\r\n        }\r\n\r\n        tblColRange = tblCol.getDataBodyRange();\r\n        tblColRange.load([\"format\"]);\r\n        tblColFormat = tblColRange.format;\r\n        tblColFormat.load([\"horizontalAlignment\", \"verticalAlignment\"]);\r\n        ctx.trackedObjects.add([tblColRange]);;\r\n        await ctx.sync();\r\n\r\n\r\n\r\n        AddMessage(`Column Name: ${element.columnName}`);\r\n\r\n        if (element.visible !== undefined && element.visible !== null) {\r\n          AddMessage(`Visible: ${element.visible}`);\r\n          if (!element.visible && hideLessRelevants)\r\n          {\r\n            tblColRange.columnHidden = true;\r\n            continue; //optimization: if column is set to become invisible skip remaining formatting\r\n          }  \r\n          // await ctx.sync();\r\n        }\r\n\r\n        if (element.style !== undefined && element.style !== \"\") {\r\n          //style must be the first prop to set as it overrides all the below props\r\n          AddMessage(`Style: ${element.style}`);\r\n          tblColRange.style = element.style;\r\n          // await ctx.sync();\r\n        }\r\n\r\n        if (element.searchFor !== undefined && element.searchFor !== \"\") {\r\n          //Replacing values before applying remaining styles (dates come with Z )\r\n          AddMessage(`SearchFor/ReplaceWith: ${element.searchFor} / ${element.ReplaceWith}`);\r\n          const criteria: Excel.ReplaceCriteria = {\r\n            completeMatch: false, /* Use a complete match to skip cells that already say \"okay\". */\r\n            matchCase: true /* Ignore case when comparing strings. */\r\n          };\r\n          tblColRange.replaceAll(element.searchFor, element.replaceWith, criteria);\r\n          await ctx.sync();\r\n        }\r\n      \r\n\r\n        if (element.horizontalAlignment !== undefined && element.horizontalAlignment !== \"\") {\r\n          AddMessage(`Horizontal Alignment: ${element.horizontalAlignment}`);\r\n          tblColRange.format.horizontalAlignment =jsonConfigUtils.convertToHorizontalAlignment(element.horizontalAlignment);\r\n        }\r\n  \r\n        if (element.verticalAlignment !== undefined && element.verticalAlignment !== \"\") {\r\n            AddMessage(`Vertical Alignment: ${element.verticalAlignment}`);\r\n            tblColRange.format.verticalAlignment = jsonConfigUtils.convertToVerticalAlignment(element.verticalAlignment);\r\n        }\r\n  \r\n        if (element.columnWidth !== undefined && element.columnWidth !== null) {\r\n          AddMessage(`Column Width: ${element.columnWidth}`);\r\n          tblColRange.format.columnWidth = element.columnWidth;\r\n          // await ctx.sync();\r\n        }\r\n  \r\n        if (element.indentLevel !== undefined && element.indentLevel !== null) {\r\n          AddMessage(`Indent Level: ${element.indentLevel}`);\r\n          tblColRange.format.indentLevel = element.indentLevel;\r\n          // await ctx.sync();\r\n        }\r\n  \r\n       \r\n        if (element.numberFormat !== undefined && element.numberFormat !== \"\") {\r\n          AddMessage(`Style: ${element.numberFormat}`);\r\n          tblColRange.numberFormat = element.numberFormat;\r\n          // await ctx.sync();\r\n        }\r\n\r\n\r\n\r\n        if (element.autosizeColumn !== undefined && element.autosizeColumn !== null) {\r\n          AddMessage(`autosizeColumn: ${element.autosizeColumn}`);\r\n          if (element.autosizeColumn===\"true\")  tblColRange.format.autofitColumns();\r\n          // await ctx.sync();\r\n        }\r\n\r\n        await ctx.sync();\r\n        AddMessage(`removing tracked objects for ${element.columnName}`);\r\n        ctx.trackedObjects.remove([tblCol, tblColRange]);;               \r\n    }\r\n\r\n    return true;\r\n\r\n  } catch (error) {\r\n    addAnalysisInfo(\"columnName\",0,`Error traversing JSON array: ${error}`, \"ValidateJSONStruct\", enumTypeAnalysis.Danger);\r\n    console.error(`Error traversing JSON array: ${error}`);\r\n    return false;\r\n  }\r\n\r\n}\r\n\r\nasync function applyJSONHighlights(jsonArray) : Promise<boolean>\r\n{\r\n    var retval:boolean=true;\r\n    AddMessage(jsonArray);\r\n\r\n    for (const element of jsonArray.conditionalFormats) \r\n    {\r\n      \r\n      var e:ConditionalFormat = element;\r\n      \r\n\r\n      switch (e.Type) {\r\n        case enumConditionalFormatType.ColorScale:\r\n          await createConditionalFormatColorScale(e);\r\n          break;\r\n\r\n        case enumConditionalFormatType.ContainsText:\r\n          await createConditionalFormatContainsText(e);\r\n          break;\r\n\r\n        case enumConditionalFormatType.CellValue:\r\n          await createConditionalFormatCellValue(e);\r\n          break;\r\n\r\n        case enumConditionalFormatType.Custom:\r\n          break;\r\n          \r\n      \r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return retval;\r\n}\r\n\r\n\r\nasync function applyJSONFilters(jsonArray) : Promise<boolean>\r\n{\r\n  var retval:boolean=true;\r\n  AddMessage(jsonArray);\r\n\r\n  for (const element of jsonArray.filterDefinitions) \r\n  {\r\n    var e:FilterDefinition = element;\r\n    \r\n    if (e.FilterActiveByUIOnly == false) {\r\n      createColumnFilter(e);\r\n    }\r\n  }\r\n  return retval;\r\n}\r\n\r\n\r\n\r\nasync function createConditionalFormatColorScale(cf:ConditionalFormat): Promise<boolean>\r\n{\r\n    AddMessage(`Formatting column ${cf.FriendlyName}`);\r\n    var retval:boolean = true;\r\n    const col:Excel.TableColumn = tbl.columns.getItemOrNullObject(cf.ColumnName);\r\n\r\n    col.load([\"isNullObject\"]); await ctx.sync();\r\n    if (col.isNullObject) {\r\n      return false;\r\n    }\r\n\r\n    const r:Excel.Range = col.getDataBodyRange();\r\n    const excelCF = r.conditionalFormats.add(Excel.ConditionalFormatType.colorScale);\r\n    excelCF.load([\"colorScale\"]); await ctx.sync();\r\n    excelCF.colorScale.criteria.maximum.color = cf.ColorScaleColorMaximum;\r\n    excelCF.colorScale.criteria.minimum.color = cf.ColorScaleColorMinimum;\r\n    await ctx.sync();\r\n    return retval;\r\n}\r\n\r\nasync function createConditionalFormatContainsText(cf:ConditionalFormat): Promise<boolean>\r\n{\r\n  AddMessage(`Creating Conditional Format ${cf.FriendlyName}`);\r\n  var retval:boolean = true;\r\n  const col:Excel.TableColumn = tbl.columns.getItemOrNullObject(cf.ColumnName);\r\n\r\n  col.load([\"isNullObject\"]); await ctx.sync();\r\n  if (col.isNullObject) {\r\n    return false;\r\n  }\r\n\r\n  const r:Excel.Range = col.getDataBodyRange();\r\n  const excelCF = r.conditionalFormats.add(Excel.ConditionalFormatType.containsText);\r\n  excelCF.load([\"textComparison\", \"format\", \"format/fill\", \"format/font\"]); await ctx.sync();\r\n  \r\n  excelCF.textComparison.rule = {\r\n    operator: Excel.ConditionalTextOperator.contains,\r\n    text: cf.ContainsTextSearch\r\n  };\r\n  \r\n  if(cf.FillColor !== undefined && cf.FillColor !== null && cf.FillColor.toLowerCase() !== \"null\") {\r\n    excelCF.textComparison.format.fill.color = cf.FillColor;\r\n  }\r\n\r\n  if(cf.FontColor !== undefined && cf.FontColor !== null && cf.FontColor.toLowerCase() !== \"null\") {\r\n    excelCF.textComparison.format.font.color = cf.FontColor;\r\n  }\r\n\r\n  await ctx.sync();\r\n  return retval;\r\n\r\n}\r\n\r\nasync function createConditionalFormatCellValue(cf:ConditionalFormat): Promise<boolean>\r\n{\r\n  AddMessage(`Creating Conditional Format ${cf.FriendlyName}`);\r\n  var retval:boolean = true;\r\n  const col:Excel.TableColumn = tbl.columns.getItemOrNullObject(cf.ColumnName);\r\n\r\n  col.load([\"isNullObject\"]); await ctx.sync();\r\n  if (col.isNullObject) {\r\n    return false;\r\n  }\r\n\r\n  const r:Excel.Range = col.getDataBodyRange();\r\n  const excelCF = r.conditionalFormats.add(Excel.ConditionalFormatType.cellValue);\r\n  excelCF.load([\"cellValue\", \"format\", \"format/fill\", \"format/font\"]); await ctx.sync();\r\n  \r\n  excelCF.cellValue.rule = {\r\n    formula1: cf.CellValueFormula1,\r\n    formula2: cf.CellValueFormula2,\r\n    operator: JsonEnumToCellValueOperator(cf.CellValueOperator)\r\n  };\r\n  \r\n  if(cf.FillColor !== undefined && cf.FillColor !== null && cf.FillColor.toLowerCase() !== \"null\") {\r\n    excelCF.cellValue.format.fill.color = cf.FillColor;\r\n  }\r\n\r\n  if(cf.FontColor !== undefined && cf.FontColor !== null && cf.FontColor.toLowerCase() !== \"null\") {\r\n    excelCF.cellValue.format.font.color = cf.FontColor;\r\n  }\r\n\r\n  await ctx.sync();\r\n  return retval;\r\n}\r\n\r\n\r\nasync function createColumnFilter(f:FilterDefinition): Promise<boolean>\r\n{\r\n    AddMessage(`Creating Filter ${f.FriendlyName}`);\r\n    var retval:boolean = true;\r\n\r\n    const col:Excel.TableColumn = tbl.columns.getItemOrNullObject(f.ColumnName);\r\n\r\n    col.load([\"isNullObject\"]); await ctx.sync();\r\n    if (col.isNullObject) {\r\n      return false;\r\n    }\r\n  \r\n    const r:Excel.Range = col.getDataBodyRange();\r\n\r\n    const excelFilter = col.filter;\r\n    await ctx.sync();\r\n    excelFilter.apply({\r\n      filterOn: Excel.FilterOn.values,\r\n      values: [f.FilterValue]\r\n    });\r\n  await ctx.sync();\r\n  AddMessage(`Filter ${f.FriendlyName} created`);\r\n  return retval;\r\n\r\n}\r\n\r\nasync function createColumnDefinitionsFromTable(jsonConfigUtils:JsonConfigUtils): Promise<JsonConfigUtils> \r\n{\r\n  \r\n  // Get the table object from the global variable 'tbl'\r\n  // Load all columns and their format properties\r\n  const columns = tbl.columns.load([\r\n    'name',\r\n    'values/format',\r\n    'values/horizontalAlignment',\r\n    'values/verticalAlignment',\r\n    'values/columnWidth',\r\n    'values/indentLevel',\r\n    'values/style',\r\n    'values/numberFormat',\r\n    'values/autosizeColumn'\r\n  ]);\r\n\r\n  // Synchronize with the document\r\n  await ctx.sync();\r\n\r\n   // Iterate through the columns\r\n   for (const column of columns.items) \r\n   {\r\n      const headerCell:Excel.Range = column.getRange().getCell(0, 0);\r\n      headerCell.load([\"columnHidden\"]);\r\n      await ctx.sync();\r\n      const isVisible = headerCell.columnHidden;\r\n\r\n      var r: Excel.Range = column.getDataBodyRange();\r\n      r.load(['style', 'numberFormat', 'columnHidden']);\r\n      r.format.load(['format','horizontalAlignment', 'verticalAlignment', 'columnWidth', 'indentLevel', 'style', 'numberFormat']);\r\n      await ctx.sync();\r\n       // Access the loaded properties\r\n       const name = column.name;\r\n       const format = r.format;\r\n       const horizontalAlignment = r.format.horizontalAlignment;\r\n       const verticalAlignment = r.format.verticalAlignment;\r\n       const columnWidth = r.format.columnWidth;\r\n       const indentLevel = r.format.indentLevel;\r\n       const style = r.style;\r\n       const numberFormat = r.numberFormat[0].toString(); //numberFormat is an array of all the cells format, we'll check just the first row\r\n       const autosizeColumn = false;\r\n       const visible:boolean = !headerCell.columnHidden;\r\n       \r\n       // Create a column definition object and add it to your array\r\n       const colDef: ColumnDefinition = {\r\n         columnName: name,\r\n         isMandatory: true, // Set this to whatever your default is\r\n         horizontalAlignment:horizontalAlignment,\r\n         verticalAlignment:verticalAlignment,\r\n         columnWidth:columnWidth,\r\n         indentLevel:indentLevel,\r\n         style:style,\r\n         numberFormat:numberFormat,\r\n         visible: visible, \r\n         autosizeColumn:false,\r\n         searchFor:\"\",\r\n         replaceWith:\"\"\r\n       };\r\n       jsonConfigUtils.addColumn(colDef);\r\n\r\n       AddMessage(`Adding column ${name}/format ${numberFormat}/ style ${style}`);\r\n       \r\n   }\r\n\r\n  return jsonConfigUtils;\r\n}\r\n\r\nasync function createFiltersFromTable(jsonConfig:JsonConfigUtils): Promise<any>\r\n{\r\n  ctx.trackedObjects.add(tbl); await ctx.sync();\r\n  tblRange.conditionalFormats.load();await ctx.sync();\r\n  const conditionalFormats = tblRange.conditionalFormats;await ctx.sync();\r\n  const results = [];\r\n\r\n  for (const column of tbl.columns.items) \r\n   {\r\n      column.load([\"name\", \"filter\"]);await ctx.sync();\r\n      AddMessage(`Checking for filter on column ${column.name}`);\r\n\r\n      const filter = column.filter;\r\n      filter.load([\"criteria\"]); await ctx.sync();\r\n      \r\n      const c = filter.criteria;  \r\n      \r\n      if (c !== null) \r\n      {\r\n        const randomNumber = Math.ceil(Math.random() * 999999);\r\n        const columnName:string = column.name;\r\n        const key:string = columnName + randomNumber.toString();\r\n        var values:string;\r\n        if (filter.criteria.filterOn == Excel.FilterOn.custom) \r\n        {\r\n          const criterion2 = filter.criteria.criterion2 ?? '';\r\n          const correctedString = criterion2.toString() !== '' ? `, ${criterion2.toString()}` : '';\r\n\r\n          values = filter.criteria.criterion1.toString() + correctedString;         \r\n        }\r\n        else  \r\n        {\r\n           values = filter.criteria.values.join(\", \") ;\r\n        }\r\n        jsonConfig.addFilterCondition(columnName, values,key);\r\n\r\n        AddMessage(`Add filter ${columnName} / ${values} / ${key}`);\r\n        \r\n      }\r\n\r\n   }\r\n}\r\n\r\nasync function createConditionalFormatsFromTable(jsonConfig:JsonConfigUtils): Promise<any[]> {\r\n  ctx.trackedObjects.add(tbl); await ctx.sync();\r\n  tblRange.conditionalFormats.load();await ctx.sync();\r\n  const conditionalFormats = tblRange.conditionalFormats;await ctx.sync();\r\n  const results = [];\r\n  \r\n  \r\n  for (const column of tbl.columns.items) \r\n   {\r\n    const cfs:Excel.ConditionalFormatCollection = column.getDataBodyRange().conditionalFormats;\r\n    cfs.load(\"items\");await ctx.sync();\r\n    for (const cf of cfs.items) {\r\n        const randomNumber = Math.ceil(Math.random() * 999999);\r\n        AddMessage(`Column ${column.name} has CF of type ${cf.type}`);  \r\n        \r\n        switch (cf.type) \r\n        {\r\n            case Excel.ConditionalFormatType.cellValue:\r\n              cf.cellValue.load([\"rule\", \"format\", \"format/font\", \"format/fill\"]);await ctx.sync();\r\n              jsonConfig.addConditionalFormatCellValue(`${column.name} Cell Value ${cf.cellValue.rule.formula1}`, \r\n                            column.name, false,false,\r\n                            \"Normal\", cf.cellValue.format.font.color, cf.cellValue.format.fill.color,\r\n                             cf.cellValue.rule.formula1,cf.cellValue.rule.formula2,\r\n                             CellValueOperatorToJsonEnum(cf.cellValue.rule.operator) );\r\n\r\n              break;\r\n            case Excel.ConditionalFormatType.containsText:\r\n              cf.textComparison.load([\"rule\", \"format\", \"format/font\", \"format/fill\"]);await ctx.sync();\r\n              \r\n              jsonConfig.addConditionalFormatContainsText(`${column.name} Contains Text ${cf.textComparison.rule.text}`, \r\n                            column.name, false,false,\r\n                            \"Normal\",cf.textComparison.format.fill.color,cf.textComparison.format.font.color,\r\n                            cf.textComparison.rule.text, \r\n                            cf.textComparison.rule.operator == Excel.ConditionalTextOperator.contains ? \r\n                                                                enumConditionalFormatTextOperator.Contains : \r\n                                                                enumConditionalFormatTextOperator.NotContains);\r\n              break;\r\n            case Excel.ConditionalFormatType.custom:\r\n              break;\r\n            case Excel.ConditionalFormatType.colorScale:\r\n              cf.colorScale.load([\"rule\", \"format\", \"format/font\", \"format/fill\", \"criteria\"]);await ctx.sync();\r\n              \r\n              jsonConfig.addConditionalFormatColorScale(`${column.name} Color Scale ${cf.colorScale.criteria.maximum.color} Down to ${cf.colorScale.criteria.minimum.color}`, \r\n                            column.name, false,false,\r\n                            \"Normal\",null,null,\r\n                            cf.colorScale.criteria.minimum.color, cf.colorScale.criteria.maximum.color);\r\n              break;\r\n            case Excel.ConditionalFormatType.dataBar:\r\n              break;\r\n              \r\n          default:\r\n            break;\r\n        }\r\n    }\r\n    \r\n   }\r\n  \r\nreturn results;\r\n}\r\n\r\n\r\nasync function getJsonData(): Promise<any> \r\n{\r\n  var jsonType:string = await typeCDL();\r\n  var response;\r\n\r\n  switch (jsonType) {\r\n    case \"rave-diag-log\":\r\n      response = await fetch(\"./RaveCDLconfig.json\");\r\n      break;\r\n\r\n    case \"exo-cdl\":\r\n      response = await fetch(\"./EXOCDLconfig.json\");\r\n      break;\r\n\r\n    case \"kusto-graph\":\r\n      response = await fetch(\"./KustoGraphdb.json\");\r\n      break;\r\n\r\n    case \"kusto-entityevent\":\r\n      response = await fetch(\"./KustoCalendarEntityEvent.json\");\r\n      break;\r\n\r\n    default:\r\n      response = await fetch(\"./RaveCDLconfig.json\");\r\n      break;\r\n  }\r\n  \r\n  AddMessage(`Retrieving JSON data for key ${jsonType} / url=${response.url} /  status=${response.status} / statusText=${response.statusText} / type=${response.type} / ${response.ok} / ${response.redirected} / ${response.body} / ${response.bodyUsed} / ${response.headers} / ${response.trailer} `);\r\n\r\n  const jsonData = await response.json();\r\n  return jsonData;\r\n}\r\n\r\n//#endregion\r\n\r\n\r\n\r\n//#region Analysys\r\nasync function PerformAnalysis(context) {\r\n  return null;\r\n}\r\n\r\nasync function CheckNumberOfRows() {\r\n  \r\n  if (!await CheckNumberOfRows) return; \r\n\r\n  const rowCount = await totalTblRows();\r\n  \r\n  if (rowCount >= 950) {\r\n    addAnalysisInfo(\"Row count number\", rowCount, \"Number of rows is very close(or above) the Diag Limit of 1000Rows\", \"CheckNumberOfRows\", enumTypeAnalysis.Warning);\r\n    AddMessage(\"Number of rows is very close to the Diag Limit of 1000Rows returned($tblRange.rowCount)\");\r\n  }   \r\n  await ctx.sync();\r\n}\r\n\r\n//#endregion\r\n\r\n\r\n//#region Config section\r\nexport async function createConfig()\r\n{\r\n  myConsole.reset();\r\n  await Excel.run(async (context) => {\r\n    ctx = context;\r\n    sheet = context.workbook.worksheets.getActiveWorksheet();\r\n    tbl = sheet.tables.getItemOrNullObject(\"CDL\");\r\n    tblRange = tbl.getRange();\r\n    jsonConfigUtils = new JsonConfigUtils();\r\n    \r\n\r\n    await context.sync() ;\r\n\r\n    const validTable:boolean = await  CreateTable(context, true); //keep formatting for json creation\r\n\r\n    if (!validTable) {\r\n      return;\r\n    }\r\n\r\n    await createColumnDefinitionsFromTable(jsonConfigUtils);\r\n    await createConditionalFormatsFromTable(jsonConfigUtils);\r\n    await createFiltersFromTable(jsonConfigUtils);\r\n    document.getElementById(\"jsonConfig\").textContent = jsonConfigUtils.getValue();\r\n    AddMessage(\"JSON config creation successfull!\");\r\n  });\r\n  \r\n}\r\n\r\n\r\nexport async function testJsonFile()\r\n{\r\n  await Excel.run(async (context) => {\r\n      ctx = context;\r\n      sheet = context.workbook.worksheets.getActiveWorksheet();\r\n      jsonConfigUtils = new JsonConfigUtils();\r\n      \r\n      await ctx.sync() ;\r\n\r\n      const validTable:boolean = await  CreateTable(context, true); //keep formatting for json creation\r\n\r\n      if (!validTable) {\r\n        return;\r\n      }\r\n      myConsole.reset();\r\n      document.getElementById(\"jsonConfig\").textContent = \"\"; \r\n      var tempJson = await getJsonData();\r\n      document.getElementById(\"jsonConfig\").textContent = JSON.stringify(tempJson, null, 2);  \r\n      const hideCols:boolean = await hideLessRelevants();\r\n      var isTableValid:boolean = await applyJsonConfig(tempJson, hideCols);\r\n      \r\n      AddMessage(\"Test JSON file succeeded!\");\r\n    });\r\n\r\n}\r\n\r\nexport async function testConfig()\r\n{\r\n  await Excel.run(async (context) => {\r\n      ctx = context;\r\n      sheet = context.workbook.worksheets.getActiveWorksheet();\r\n      jsonConfigUtils = new JsonConfigUtils();\r\n      \r\n      await ctx.sync() ;\r\n\r\n      const validTable:boolean = await  CreateTable(context, true); //keep formatting for json creation\r\n\r\n      if (!validTable) {\r\n        return;\r\n      }\r\n      myConsole.reset();\r\n      var textbox:any = document.getElementById(\"jsonConfig\");\r\n      var tempJson = textbox.value;\r\n      const hideCols:boolean = await hideLessRelevants();\r\n      var isTableValid:boolean = await applyJsonConfig(tempJson, hideCols);\r\n      AddMessage(\"Test JSON configuration succeeded!\");\r\n    });\r\n\r\n}\r\n//#endregion\r\n\r\n//Main Function\r\nexport async function run() {\r\n  try {\r\n    await Excel.run(async (context) => {\r\n      /**\r\n       * Insert your Excel code here\r\n       */\r\n      myConsole.reset();\r\n      await showSpinner(true);\r\n      await resetAnalysisInfo();\r\n      await AddMessage(\"Starting Processing\");\r\n\r\n      ctx = context;\r\n      sheet = context.workbook.worksheets.getActiveWorksheet();\r\n      jsonConfigUtils = new JsonConfigUtils();\r\n\r\n      // tbl = sheet.tables.getItemOrNullObject(\"CDL\");\r\n      // tblRange = tbl.getRange();\r\n      // tbl.clearFilters();\r\n      sheet.getRange().clear(\"Formats\");\r\n      sheet.getRange().conditionalFormats.clearAll();\r\n      \r\n      sheet.freezePanes.unfreeze();\r\n      await context.sync();\r\n\r\n\r\n      const validTable:boolean = await  CreateTable(context);\r\n      if (!validTable) {\r\n        return;\r\n      }\r\n      AddMessage(\"Create Table Done\");\r\n\r\n      jsonLog = await getJsonData();\r\n      var isTableValid:boolean = await applyJsonConfig(jsonLog);\r\n      if (!isTableValid) {\r\n        addAnalysisInfo(\"CDL Invalid\", 0, \"CDL Structure is invalid (check previous exceptions)\", \"CDLInvalid\", enumTypeAnalysis.Danger);\r\n        showSpinner(false);\r\n        return;\r\n      }\r\n\r\n      //format section\r\n      await freezeColumns(\"Ignorable\");\r\n      \r\n      //await PerformAnalysis(context);\r\n      AddMessage(`Processing done.`);\r\n      \r\n      showSpinner(false);\r\n      \r\n      const urlCDLVideo:string = \"https://msit.microsoftstream.com/video/4221a4ff-0400-9fb2-4805-f1eb0f28f09b\";\r\n      addAnalysisInfo(\"Success\", 0,`Process executed successfully, check the video on CDL analysis ${urlCDLVideo} `, \"success\", enumTypeAnalysis.Success)\r\n\r\n\r\n\r\n      //Test\r\n      // const timeline:timelineDataObject = new timelineDataObject();\r\n      // timeline.generateDummyData();\r\n      \r\n      // const cdl:CDLToEnglishActionsTimeline = new CDLToEnglishActionsTimeline(tbl,ctx);\r\n      // cdl.populateCardPane(timeline);\r\n      // cdl.processCDLToEnglishActionsTimeline();\r\n\r\n\r\n    });\r\n  } \r\n  catch (error) \r\n  {\r\n    showSpinner(false);\r\n    console.error(error);\r\n    AddMessage(error);\r\n    addAnalysisInfo(\"Error\",0,error, \"Run/Catch\", enumTypeAnalysis.Danger);\r\n  }\r\n  \r\n  \r\n}\r\n\r\n\r\n// function CellValueOperatorToJsonEnum(operator: string): enumCellValueOperator {\r\n//   //throw new Error('Function not implemented.');\r\n//   return enumCellValueOperator.EQ;\r\n// }\r\n\r\n","// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \"<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. -->\\r\\n<!-- This file shows how to design a first-run page that provides a welcome screen to the user about the features of the add-in. -->\\r\\n\\r\\n<!DOCTYPE html>\\r\\n<html>\\r\\n\\r\\n<head>\\r\\n    <meta charset=\\\"UTF-8\\\" />\\r\\n    <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\" />\\r\\n    <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\r\\n    <title>Contoso Task Pane Add-in</title>\\r\\n\\r\\n    <!-- Office JavaScript API -->\\r\\n    <\" + \"script type=\\\"text/javascript\\\" src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script>\\r\\n\\r\\n    <!-- For more information on Fluent UI, visit https://developer.microsoft.com/fluentui#/. -->\\r\\n    <!-- <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> -->\\r\\n\\r\\n    <link href=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\">\\r\\n    <\" + \"script src=\\\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\\\"><\" + \"/script>\\r\\n    <!-- Bootstrap CSS\\r\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\\\"> -->\\r\\n\\r\\n    <!-- jQuery and Bootstrap JS -->\\r\\n    <\" + \"script src=\\\"https://code.jquery.com/jquery-3.5.1.slim.min.js\\\"\\r\\n        integrity=\\\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\\\"\\r\\n        crossorigin=\\\"anonymous\\\"><\" + \"/script>\\r\\n\\r\\n\\r\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.4/font/bootstrap-icons.css\\\">\\r\\n                                   \\r\\n\\r\\n\\r\\n    <!-- Template styles -->\\r\\n    <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\" />\\r\\n</head>\\r\\n\\r\\n<body class=\\\"bg-dark\\\">\\r\\n\\r\\n    <!-- Offcanvas Sidebar -->\\r\\n    <div class=\\\"offcanvas offcanvas-start\\\" id=\\\"timeline\\\">\\r\\n        <div class=\\\"offcanvas-header\\\">\\r\\n        <h2 class=\\\"offcanvas-title\\\">Console</h2>\\r\\n        <button type=\\\"button\\\" class=\\\"btn-close text-reset\\\" data-bs-dismiss=\\\"offcanvas\\\">.</button>\\r\\n        </div>\\r\\n        <div class=\\\"offcanvas-body\\\">\\r\\n            <div class=\\\"form-group container\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-header\\\">\\r\\n                          <h5 id=\\\"timeline-subject\\\" class=\\\"card-title\\\">[Subject]</h5>\\r\\n                          <p id=\\\"timeline-date\\\" class=\\\"card-text\\\">[Date]</p>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                          <div id=\\\"timeline-body\\\">\\r\\n                            <!-- Timeline rows will be dynamically populated here -->\\r\\n                          </div>\\r\\n                          <!-- Other card body elements can be added here -->\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- Offcanvas Sidebar -->\\r\\n    <div class=\\\"offcanvas offcanvas-start\\\" id=\\\"console\\\">\\r\\n        <div class=\\\"offcanvas-header\\\">\\r\\n        <h2 class=\\\"offcanvas-title\\\">Console</h2>\\r\\n        <button type=\\\"button\\\" class=\\\"btn-close text-reset\\\" data-bs-dismiss=\\\"offcanvas\\\">.</button>\\r\\n        </div>\\r\\n        <div class=\\\"offcanvas-body\\\">\\r\\n            <div class=\\\"form-group container\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div id=\\\"myConsole\\\" class=\\\"container\\\">\\r\\n                        <div class=\\\"row header\\\">\\r\\n                            <div class=\\\"col-2 text-xs\\\">#</div>\\r\\n                            <div class=\\\"col-10 text-xs\\\">First</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                      \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"offcanvas offcanvas-start\\\" id=\\\"demo\\\">\\r\\n        <div class=\\\"offcanvas-header\\\">\\r\\n        <h2 class=\\\"offcanvas-title\\\">JSON Config</h2>\\r\\n        <button type=\\\"button\\\" class=\\\"btn-close text-reset\\\" data-bs-dismiss=\\\"offcanvas\\\">.</button>\\r\\n        </div>\\r\\n        <div class=\\\"offcanvas-body\\\">\\r\\n            <div class=\\\"form-group container\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"createConfig\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Create JSON from table\\\"><i class=\\\"bi bi-arrow-bar-down\\\"></i></button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"testConfig\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"Test json Format on current table\\\"><i class=\\\"bi bi-arrow-bar-up\\\"></i></button>\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"testJsonFile\\\" data-toggle=\\\"tooltip\\\" data-placement=\\\"top\\\" title=\\\"test json file against current table\\\"><i class=\\\"bi bi-file-arrow-down\\\"></i></button>\\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <textarea class=\\\"form-control\\\" rows=\\\"15\\\" placeholder=\\\"Json Config\\\" id=\\\"jsonConfig\\\"></textarea>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  \\r\\n\\r\\n\\r\\n    <div class=\\\"offcanvas offcanvas-start\\\" id=\\\"video\\\">\\r\\n        <div class=\\\"offcanvas-header\\\">\\r\\n        <h2 class=\\\"offcanvas-title\\\">Video Troubleshoot Help(POC)</h2>\\r\\n        <button type=\\\"button\\\" class=\\\"btn-close text-reset\\\" data-bs-dismiss=\\\"offcanvas\\\"></button>\\r\\n        </div>\\r\\n        <div class=\\\"offcanvas-body\\\">\\r\\n            <div class=\\\"container\\\">\\r\\n                <div class=\\\"card-header\\\">\\r\\n                    Video Sharing Calendars\\r\\n                </div>\\r\\n                <div class=\\\"card-body \\\">\\r\\n                    <div class=\\\"embed-responsive embed-responsive-21by9\\\">\\r\\n                        <iframe class=\\\"embed-responsive-item\\\" width=\\\"560\\\" height=\\\"315\\\" src=\\\"https://www.youtube.com/embed/7C38muJjnyc\\\"\\r\\n                            title=\\\"YouTube video player\\\" frameborder=\\\"0\\\"\\r\\n                            allow=\\\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\\\"\\r\\n                            allowfullscreen></iframe>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n  \\r\\n \\r\\n    <div class=\\\"bg-light rounded p-3 card\\\">\\r\\n        <div class=\\\"card-header\\\">\\r\\n            CDL Check provides compreehensive formatting of CDL logs as well as basic troubleshooting help\\r\\n            This is the AddingTimeline Branch deployed\\r\\n        </div>\\r\\n        <div class=\\\"card-body\\\">\\r\\n            <form>\\r\\n                <div class=\\\"form-group\\\" id=\\\"sideload-msg\\\">\\r\\n                    <H2>officeJS is not loaded, Addin will not run!</H2>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <!-- Spacer     -->\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"typeCDL\\\">Choose Type of CDL Log</label>\\r\\n                    <select class=\\\"form-control\\\" id=\\\"typeCDL\\\">\\r\\n                        <option value=\\\"rave-diag-log\\\">RAVE Diag Log (Default)</option>\\r\\n                        <option value=\\\"exo-cdl\\\">RAW CDL from Get-CalendarDiagnosticObjects</option>\\r\\n                        <option value=\\\"kusto-graph\\\">Kusto - Graph db</option>\\r\\n                        <option value=\\\"kusto-entityevent\\\">Kusto - Calendar Entity Event</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"form-group\\\">\\r\\n\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <div class=\\\"form-check form-switch\\\">\\r\\n                        <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" role=\\\"switch\\\" id=\\\"isOrganizer\\\">\\r\\n                        <label class=\\\"form-check-label\\\" for=\\\"isOrganizer\\\">This is an Organizer CDL</label>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"form-group form-switch d-none\\\">\\r\\n                    <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" role=\\\"switch\\\" id=\\\"warn1KRows\\\">\\r\\n                    <label class=\\\"form-check-label\\\" for=\\\"warn1KRows\\\">Warn if Rows are close to 1K</label>\\r\\n                </div>\\r\\n                <div class=\\\"form-group form-switch\\\">\\r\\n                    <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" role=\\\"switch\\\" id=\\\"hideLessRelevants\\\">\\r\\n                    <label class=\\\"form-check-label\\\" for=\\\"hideLessRelevants\\\">Hide less relevant columns</label>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" id=\\\"run\\\"><i class=\\\"bi bi-calendar-week\\\"></i></button>\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-bs-toggle=\\\"offcanvas\\\" data-bs-target=\\\"#demo\\\"><i class=\\\"bi bi-filetype-json\\\"></i></button>\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-bs-toggle=\\\"offcanvas\\\" data-bs-target=\\\"#video\\\"><i class=\\\"bi bi-film\\\"></i></button>\\r\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-bs-toggle=\\\"offcanvas\\\" data-bs-target=\\\"#console\\\"><i class=\\\"bi bi-list-check\\\"></i></button>\\r\\n                    <!-- <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-bs-toggle=\\\"offcanvas\\\" data-bs-target=\\\"#timeline\\\"><i class=\\\"bi bi-watch\\\"></i></button> -->\\r\\n                    \\r\\n                    <div class=\\\"spinner-border text-primary invisible\\\" role=\\\"status\\\" id=\\\"spinner\\\">\\r\\n                        <!-- <span class=\\\"sr-only\\\">Loading...</span> -->\\r\\n                    </div>\\r\\n                    \\r\\n                </div>\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <p class=\\\"mb-1 small\\\" id=\\\"statusMessage\\\">Status Message</p>\\r\\n                </div>\\r\\n                <div class=\\\"list-group\\\" id=\\\"analysisInfo\\\">\\r\\n                    <!-- Template of data to be shown on analysisInfo -->\\r\\n                    <!-- <a href=\\\"#\\\" class=\\\"list-group-item list-group-item-action list-group-item-warning\\\">\\r\\n                        <div class=\\\"d-flex w-100 justify-content-between\\\">\\r\\n                            <h5 class=\\\"mb-1\\\">Row limit</h5>\\r\\n                            <span class=\\\"badge badge-primary badge-pill\\\">1002</span>\\r\\n                        </div>\\r\\n                        <p class=\\\"mb-1\\\">If rows returned are close to 1K, this can be a limitation of Rave diagnostics and could mean dataset returned is not complete. To avoid this, ask for raw CDL to the customer, and format directly with the option RAW</p>\\r\\n                        <small>Get-CalendarDiagnosticObjects</small>\\r\\n                    </a> -->\\r\\n                </div>\\r\\n            </form>\\r\\n        </div>\\r\\n        <div class=\\\"card-footer\\\">\\r\\n            <small>Exchange Calendaring team</small>\\r\\n        </div>\\r\\n        \\r\\n    </div>\\r\\n</body>\\r\\n\\r\\n</html>\\r\\n\";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"taskpane\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(\"./src/taskpane/taskpane.ts\");\nvar __webpack_exports__ = __webpack_require__(\"./src/taskpane/taskpane.html\");\n",""],"names":["enumConditionalFormatType","exports","enumConditionalFormatTextOperator","enumCellValueOperator","CellValueOperatorToJsonEnum","op","retval","EQ","Excel","ConditionalCellValueOperator","equalTo","between","BETWEEN","greaterThan","GT","lessThan","LT","JsonEnumToCellValueOperator","ConditionalFormats_1","require","JsonConfigUtils","columns","conditionalFormats","filterDefinitions","prototype","getValue","JSON","stringify","addColumn","col","push","addColumnByName","columnName","isMandatory","horizontalAlignment","verticalAlignment","columnWidth","indentLevel","style","numberFormat","visible","autosizeColumn","searchFor","replaceWith","convertColumnDefinitionsToJson","json","convertToHorizontalAlignment","value","HorizontalAlignment","center","left","right","justify","general","convertToVerticalAlignment","VerticalAlignment","bottom","distributed","top","addConditionalFormat","cf","addConditionalFormatByName","friendlyName","countOccurrences","warnIfOccurrencesGTZero","type","fontColor","fillColor","colorScaleColorMinimum","colorScaleColorMaximum","containsTextSearch","containsTextOperator","cellValueFormula1","cellValueFormula2","cellValueOperator","customFormula","FriendlyName","ColumnName","CountOccurrences","WarnIfOccurrencesGTZero","Type","Style","FontColor","FillColor","ColorScaleColorMinimum","ColorScaleColorMaximum","ContainsTextSearch","ContainsTextOperator","CellValueFormula1","CellValueFormula2","CellValueOperator","CustomFormula","addConditionalFormatColorScale","ColorScale","addConditionalFormatContainsText","ContainsText","addConditionalFormatCellValue","CellValue","addConditionalFormatCustom","Custom","addFilterCondition","key","newFilter","FilterActiveByUIOnly","FilterKey","FilterValue","concat","myConsole","count","addCounter","log","message","console","addRow","toString","first","second","document","querySelector","newRow","createElement","classList","add","firstCell","innerHTML","secondCell","appendChild","reset","consoleDiv","jsonConfigUtils_1","myConsole_1","module","ctx","tbl","sheet","tblRange","jsonConfigUtils","organizerTableStyle","attendeeTableStyle","organizerTabColor","attendeeTabColor","jsonLog","_totalTblRows","totalTblRows","load","sync","_a","sent","rowCount","typeCDL","selectElement","getElementById","isOrganizer","checkbox","checked","warn1KRows","hideLessRelevants","showSpinner","show","element","remove","AddMessage","p","textContent","enumTypeAnalysis","addAnalysisInfo","title","badge","smallfooter","typeanalysis","analysisDiv","aElement","Warning","Action","Danger","Success","divElement","h5Element","innerText","spanElement","pElement","smallElement","resetAnalysisInfo","analysisInfoDiv","freezeColumns","column","getItem","freezePanes","index","error_1","Office","onReady","info","host","HostType","display","onclick","run","createConfig","testConfig","testJsonFile","$","tooltip","resetCustomProperties","customProperties","items","hasOwnProperty","customProperty","delete","addCustomProperty","cp","getItemOrNullObject","GetCustomPropertyValue","_b","CreateTable","context","keepFormats","tblCount","tables","getCount","getItemAt","getRange","clear","convertToRange","range","getUsedRange","_isOrganizer","tabColor","error","error_2","ClearFilters","clearFilters","SetFilter","columnFilter","filter","apply","filterOn","FilterOn","values","FilterIgnorable","ignorableFilter","FormatDateColumn","colRange","getDataBodyRange","criteria","completeMatch","matchCase","replaceAll","format","wrapText","rangeWidth","getEntireColumn","autofitColumns","HighlightIgnorable","conditionalFormat","ConditionalFormatType","containsText","textComparison","font","color","fill","rule","operator","ConditionalTextOperator","contains","text","CountFilterOccurrences","HighlightApptSequence","colorScale","minimum","formula","ConditionalFormatColorCriterionType","lowestValue","maximum","highestValue","HighlightCRA","HighLightCreates","r","n","filterRange","getIntersectionOrNullObject","affectedRange","isJSONString","str","jsonObj","parse","e","applyJsonConfig","Error","jsonArray","applyJsonColDefinitions","_d","applyJSONHighlights","_c","applyJSONFilters","_i","length","undefined","tblCol","trackedObjects","isNullObject","tblColRange","tblColFormat","columnHidden","ReplaceWith","error_3","createConditionalFormatColorScale","createConditionalFormatContainsText","createConditionalFormatCellValue","createColumnFilter","excelCF","toLowerCase","cellValue","formula1","formula2","f","excelFilter","createColumnDefinitionsFromTable","headerCell","getCell","isVisible","name_1","name","colDef","createFiltersFromTable","jsonConfig","results","c","randomNumber","Math","ceil","random","custom","criterion2","correctedString","criterion1","join","createConditionalFormatsFromTable","_e","cfs","dataBar","Contains","NotContains","getJsonData","jsonType","fetch","response","url","status","statusText","ok","redirected","body","bodyUsed","headers","trailer","jsonData","PerformAnalysis","CheckNumberOfRows","__awaiter","_this","workbook","worksheets","getActiveWorksheet","validTable","tempJson","hideCols","isTableValid","textbox","clearAll","unfreeze","urlCDLVideo","error_4"],"sourceRoot":""}